{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15","program":"/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing_subscriber","--edition=2018","/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"fmt\"","--cfg","feature=\"registry\"","--cfg","feature=\"sharded-slab\"","--cfg","feature=\"std\"","--cfg","feature=\"thread_local\"","-C","metadata=4846ae3946ee09b3","-C","extra-filename=-4846ae3946ee09b3","--out-dir","/home/pastra/code/rbot/target/rls/debug/deps","-L","dependency=/home/pastra/code/rbot/target/rls/debug/deps","--extern","sharded_slab=/home/pastra/code/rbot/target/rls/debug/deps/libsharded_slab-af0de7e2dca6a6a5.rmeta","--extern","thread_local=/home/pastra/code/rbot/target/rls/debug/deps/libthread_local-1d8a957ae96f37f9.rmeta","--extern","tracing_core=/home/pastra/code/rbot/target/rls/debug/deps/libtracing_core-f6d432c1618d19c5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pastra/code/rbot/target/rls/debug/deps/libtracing_subscriber-4846ae3946ee09b3.rmeta"},"prelude":{"crate_id":{"name":"tracing_subscriber","disambiguator":[13724932274612093920,0]},"crate_root":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src","external_crates":[{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","num":20,"id":{"name":"tracing_core","disambiguator":[17380316043693398490,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","num":21,"id":{"name":"once_cell","disambiguator":[8841403854537191319,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","num":22,"id":{"name":"sharded_slab","disambiguator":[3550422942689215411,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","num":23,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","num":24,"id":{"name":"thread_local","disambiguator":[4957408592866463877,0]}}],"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":0,"byte_end":9430,"line_start":1,"line_end":252,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":387},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10191,"byte_end":10196,"line_start":6,"line_end":6,"column_start":30,"column_end":35},"alias_span":null,"name":"Visit","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31454,"byte_end":31455,"line_start":22,"line_end":22,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"FilterId, FilterMap, FILTERING, FilterState, Filtered, layer_has_plf, subscriber_has_plf, is_plf_downcast_marker","parent":{"krate":0,"index":235}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31497,"byte_end":31498,"line_start":27,"line_end":27,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":20,"index":1266},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31522,"byte_end":31533,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":20,"index":1282},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31535,"byte_end":31545,"line_start":28,"line_end":28,"column_start":36,"column_end":46},"alias_span":null,"name":"LevelParseError","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1448},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31771,"byte_end":31778,"line_start":36,"line_end":36,"column_start":28,"column_end":35},"alias_span":null,"name":"Targets","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":1473},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31829,"byte_end":31839,"line_start":39,"line_end":39,"column_start":30,"column_end":40},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58497,"byte_end":58504,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"alias_span":null,"name":"__tracing_subscriber_field_MakeExt","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58548,"byte_end":58560,"line_start":8,"line_end":8,"column_start":5,"column_end":17},"alias_span":null,"name":"__tracing_subscriber_field_RecordFields","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58636,"byte_end":58641,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"alias_span":null,"name":"__tracing_subscriber_Layer","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58673,"byte_end":58686,"line_start":11,"line_end":11,"column_start":42,"column_end":55},"alias_span":null,"name":"__tracing_subscriber_SubscriberExt","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":739},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58751,"byte_end":58768,"line_start":14,"line_end":14,"column_start":22,"column_end":39},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":2817},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58865,"byte_end":58878,"line_start":18,"line_end":18,"column_start":33,"column_end":46},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61254,"byte_end":61264,"line_start":67,"line_end":67,"column_start":26,"column_end":36},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":1612},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61266,"byte_end":61279,"line_start":67,"line_end":67,"column_start":38,"column_end":51},"alias_span":null,"name":"ExtensionsMut","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":1815},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61403,"byte_end":61407,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61430,"byte_end":61438,"line_start":78,"line_end":78,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":396}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106074,"byte_end":106075,"line_start":694,"line_end":694,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Context","parent":{"krate":0,"index":440}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106086,"byte_end":106087,"line_start":694,"line_end":694,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"Layered","parent":{"krate":0,"index":440}},{"kind":"Use","ref_id":{"krate":0,"index":2379},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344007,"byte_end":13344017,"line_start":203,"line_end":203,"column_start":21,"column_end":31},"alias_span":null,"name":"FmtContext","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344019,"byte_end":13344034,"line_start":203,"line_end":203,"column_start":33,"column_end":48},"alias_span":null,"name":"FormattedFields","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344036,"byte_end":13344041,"line_start":203,"line_end":203,"column_start":50,"column_end":55},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":2516},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344246,"byte_end":13344252,"line_start":215,"line_end":215,"column_start":14,"column_end":20},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344254,"byte_end":13344265,"line_start":215,"line_end":215,"column_start":22,"column_end":33},"alias_span":null,"name":"FormatEvent","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":2511},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344267,"byte_end":13344279,"line_start":215,"line_end":215,"column_start":35,"column_end":47},"alias_span":null,"name":"FormatFields","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":2769},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344292,"byte_end":13344296,"line_start":216,"line_end":216,"column_start":11,"column_end":15},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":2812},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344311,"byte_end":13344321,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"alias_span":null,"name":"MakeWriter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":3279},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344323,"byte_end":13344333,"line_start":217,"line_end":217,"column_start":26,"column_end":36},"alias_span":null,"name":"TestWriter","value":"","parent":{"krate":0,"index":2156}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9033,"byte_end":9036,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3478},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9055,"byte_end":9065,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"alias_span":null,"name":"FmtSubscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9200,"byte_end":9205,"line_start":238,"line_end":238,"column_start":16,"column_end":21},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1809},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9292,"byte_end":9300,"line_start":242,"line_end":242,"column_start":23,"column_end":31},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":0,"byte_end":9430,"line_start":1,"line_end":252,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":235},{"krate":0,"index":378},{"krate":0,"index":396},{"krate":0,"index":440},{"krate":0,"index":725},{"krate":0,"index":2004},{"krate":0,"index":2106},{"krate":0,"index":2156},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":756},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":759}],"decl_id":null,"docs":" Utilities for implementing and composing [`tracing`] subscribers.","sig":null,"attributes":[{"value":"/ Utilities for implementing and composing [`tracing`] subscribers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":70,"byte_end":73,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":74,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ scoped, structured, and async-aware diagnostics. The [`Subscriber`] trait","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":148,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ represents the functionality necessary to collect this trace data. This","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":226,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ crate contains tools for composing subscribers out of smaller units of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":302,"byte_end":376,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ behaviour, and batteries-included implementations of common subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":377,"byte_end":451,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ functionality.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":452,"byte_end":470,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":471,"byte_end":474,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `tracing-subscriber` is intended for use by both `Subscriber` authors and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":475,"byte_end":552,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ application authors using `tracing` to instrument their applications.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":553,"byte_end":626,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":627,"byte_end":630,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":631,"byte_end":685,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":686,"byte_end":689,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":690,"byte_end":726,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":727,"byte_end":730,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## `Layer`s and `Filter`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":731,"byte_end":760,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":761,"byte_end":764,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The most important component of the `tracing-subscriber` API is the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":765,"byte_end":836,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`Layer`] trait, which provides a composable abstraction for building","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":837,"byte_end":910,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ [`Subscriber`]s. Like the [`Subscriber`] trait, a [`Layer`] defines a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":911,"byte_end":984,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ particular behavior for collecting trace data. Unlike [`Subscriber`]s,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":985,"byte_end":1059,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ which implement a *complete* strategy for how trace data is collected,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1060,"byte_end":1134,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ [`Layer`]s provide *modular* implementations of specific behaviors.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1135,"byte_end":1206,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ Therefore, they can be [composed together] to form a [`Subscriber`] which is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1207,"byte_end":1287,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ capable of recording traces in a variety of ways. See the [`layer` module's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1288,"byte_end":1367,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ documentation][layer] for details on using [`Layer`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1368,"byte_end":1426,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1427,"byte_end":1430,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`Filter`] trait defines an interface for filtering what","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1431,"byte_end":1508,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ spans and events are recorded by a particular layer. This allows different","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1509,"byte_end":1587,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [`Layer`]s to handle separate subsets of the trace data emitted by a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1588,"byte_end":1660,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ program. See the [documentation on per-layer filtering][plf] for more","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1661,"byte_end":1734,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ information on using [`Filter`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1735,"byte_end":1772,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1773,"byte_end":1776,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1777,"byte_end":1811,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [composed together]: crate::layer#composing-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1812,"byte_end":1866,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ [layer]: crate::layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1867,"byte_end":1892,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1893,"byte_end":1929,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1930,"byte_end":1973,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1974,"byte_end":1977,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## Included Subscribers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":1978,"byte_end":2005,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2006,"byte_end":2009,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The following `Subscriber`s are provided for application authors:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2010,"byte_end":2079,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2080,"byte_end":2083,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - [`fmt`] - Formats and logs tracing data (requires the `fmt` feature flag)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2084,"byte_end":2163,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2164,"byte_end":2167,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2168,"byte_end":2188,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - `std`: Enables APIs that depend on the on the Rust standard library","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2193,"byte_end":2266,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/   (enabled by default).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2267,"byte_end":2294,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ - `alloc`: Depend on [`liballoc`] (enabled by \"std\").","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2295,"byte_end":2352,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ - `env-filter`: Enables the [`EnvFilter`] type, which implements filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2353,"byte_end":2431,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/   similar to the [`env_logger` crate]. **Requires \"std\"**.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2432,"byte_end":2494,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"/ - `fmt`: Enables the [`fmt`] module, which provides a subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2495,"byte_end":2563,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/   implementation for printing formatted representations of trace events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2564,"byte_end":2640,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/   Enabled by default. **Requires \"std\"**.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2641,"byte_end":2686,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ - `ansi`: Enables `fmt` support for ANSI terminal colors. Enabled by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2687,"byte_end":2759,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/   default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2760,"byte_end":2774,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ - `registry`: enables the [`registry`] module. Enabled by default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2775,"byte_end":2845,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/   **Requires \"std\"**.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2846,"byte_end":2871,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ - `json`: Enables `fmt` support for JSON output. In JSON output, the ANSI","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2872,"byte_end":2949,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/   feature does nothing. **Requires \"fmt\" and \"std\"**.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":2950,"byte_end":3007,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ - `local-time`: Enables local time formatting when using the [`time`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3008,"byte_end":3080,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/   crate]'s timestamp formatters with the `fmt` subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3081,"byte_end":3143,"line_start":64,"line_end":64,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3144,"byte_end":3147,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`registry`]: mod@registry","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3148,"byte_end":3178,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3179,"byte_end":3182,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ### Optional Dependencies","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3183,"byte_end":3212,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3213,"byte_end":3216,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - [`tracing-log`]: Enables better formatting for events emitted by `log`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3217,"byte_end":3293,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/   macros in the `fmt` subscriber. Enabled by default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3294,"byte_end":3351,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/ - [`time`][`time` crate]: Enables support for using the [`time` crate] for timestamp","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3352,"byte_end":3440,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/   formatting in the `fmt` subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3441,"byte_end":3482,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ - [`smallvec`]: Causes the `EnvFilter` type to use the `smallvec` crate (rather","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3483,"byte_end":3566,"line_start":74,"line_end":74,"column_start":1,"column_end":84}},{"value":"/   than `Vec`) as a performance optimization. Enabled by default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3567,"byte_end":3635,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"/ - [`parking_lot`]: Use the `parking_lot` crate's `RwLock` implementation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3636,"byte_end":3712,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/   rather than the Rust standard library's implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3713,"byte_end":3774,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3775,"byte_end":3778,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ### `no_std` Support","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3779,"byte_end":3803,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3804,"byte_end":3807,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ In embedded systems and other bare-metal applications, `tracing` can be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3808,"byte_end":3883,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ used without requiring the Rust standard library, although some features are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3884,"byte_end":3964,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/ disabled. Although most of the APIs provided by `tracing-subscriber`, such","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":3965,"byte_end":4043,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ as [`fmt`] and [`EnvFilter`], require the standard library, some","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4044,"byte_end":4112,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ functionality, such as the [`Layer`] trait, can still be used in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4113,"byte_end":4181,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ `no_std` environments.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4182,"byte_end":4208,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4209,"byte_end":4212,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The dependency on the standard library is controlled by two crate feature","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4213,"byte_end":4290,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ flags, \"std\", which enables the dependency on [`libstd`], and \"alloc\", which","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4291,"byte_end":4371,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ enables the dependency on [`liballoc`] (and is enabled by the \"std\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4372,"byte_end":4443,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ feature). These features are enabled by default, but `no_std` users can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4444,"byte_end":4519,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ disable them using:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4520,"byte_end":4543,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4544,"byte_end":4547,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4548,"byte_end":4559,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ # Cargo.toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4560,"byte_end":4576,"line_start":95,"line_end":95,"column_start":1,"column_end":17}},{"value":"/ tracing-subscriber = { version = \"0.3\", default-features = false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4577,"byte_end":4647,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4648,"byte_end":4655,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4656,"byte_end":4659,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Additional APIs are available when [`liballoc`] is available. To enable","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4660,"byte_end":4735,"line_start":99,"line_end":99,"column_start":1,"column_end":76}},{"value":"/ `liballoc` but not `std`, use:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4736,"byte_end":4770,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4771,"byte_end":4774,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4775,"byte_end":4786,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # Cargo.toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4787,"byte_end":4803,"line_start":103,"line_end":103,"column_start":1,"column_end":17}},{"value":"/ tracing-subscriber = { version = \"0.3\", default-features = false, features = [\"alloc\"] }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4804,"byte_end":4896,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4897,"byte_end":4904,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4905,"byte_end":4908,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4909,"byte_end":4934,"line_start":107,"line_end":107,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4935,"byte_end":4938,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":4939,"byte_end":5026,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5027,"byte_end":5113,"line_start":110,"line_end":110,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5114,"byte_end":5141,"line_start":111,"line_end":111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5142,"byte_end":5145,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5146,"byte_end":5211,"line_start":113,"line_end":113,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5212,"byte_end":5215,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for serializing values recorded using the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5216,"byte_end":5291,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/   [`valuable`] crate as structured JSON in the [`format::Json`] formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5292,"byte_end":5370,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5371,"byte_end":5374,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5375,"byte_end":5410,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5411,"byte_end":5414,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5415,"byte_end":5494,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5495,"byte_end":5542,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5543,"byte_end":5546,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5547,"byte_end":5559,"line_start":123,"line_end":123,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5560,"byte_end":5610,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5611,"byte_end":5618,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5619,"byte_end":5697,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5698,"byte_end":5764,"line_start":127,"line_end":127,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5765,"byte_end":5768,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5769,"byte_end":5780,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5781,"byte_end":5792,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5793,"byte_end":5838,"line_start":131,"line_end":131,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5839,"byte_end":5846,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5847,"byte_end":5850,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5851,"byte_end":5948,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":5949,"byte_end":6000,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/ [`format::Json`]: crate::fmt::format::Json","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6001,"byte_end":6047,"line_start":136,"line_end":136,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6048,"byte_end":6051,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6052,"byte_end":6082,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6087,"byte_end":6164,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6165,"byte_end":6243,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6244,"byte_end":6305,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6306,"byte_end":6309,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6310,"byte_end":6389,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6390,"byte_end":6467,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6468,"byte_end":6544,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6545,"byte_end":6623,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6624,"byte_end":6699,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6700,"byte_end":6776,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6777,"byte_end":6824,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6825,"byte_end":6828,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::subscriber::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6829,"byte_end":6885,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/ [`tracing`]: https://docs.rs/tracing/latest/tracing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6886,"byte_end":6941,"line_start":153,"line_end":153,"column_start":1,"column_end":56}},{"value":"/ [`EnvFilter`]: filter::EnvFilter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6942,"byte_end":6978,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/ [`fmt`]: mod@fmt","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":6979,"byte_end":6999,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7000,"byte_end":7057,"line_start":156,"line_end":156,"column_start":1,"column_end":58}},{"value":"/ [`smallvec`]: https://crates.io/crates/smallvec","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7058,"byte_end":7109,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/ [`env_logger` crate]: https://crates.io/crates/env_logger","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7110,"byte_end":7171,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ [`parking_lot`]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7172,"byte_end":7229,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ [`time` crate]: https://crates.io/crates/time","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7230,"byte_end":7279,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ [`libstd`]: std","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7280,"byte_end":7299,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/ [`liballoc`]: alloc","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7300,"byte_end":7323,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":7900,"byte_end":8362,"line_start":177,"line_end":198,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_update)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8610,"byte_end":8644,"line_start":203,"line_end":203,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":73},{"krate":0,"index":125},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":837}],"decl_id":null,"docs":" Utilities for working with [fields] and [field visitors].","sig":null,"attributes":[{"value":"/ Utilities for working with [fields] and [field visitors].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":9975,"byte_end":10036,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10037,"byte_end":10040,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10041,"byte_end":10074,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"/ [field visitors]: tracing_core::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10075,"byte_end":10123,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"debug","qualname":"::field::debug","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":762},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":70}],"decl_id":null,"docs":" `MakeVisitor` wrappers for working with `fmt::Debug` fields.\n","sig":null,"attributes":[{"value":"/ `MakeVisitor` wrappers for working with `fmt::Debug` fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":20876,"byte_end":20940,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21198,"byte_end":21201,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Alt","qualname":"::field::debug::Alt","value":"","parent":null,"children":[],"decl_id":null,"docs":" A visitor wrapper that ensures any `fmt::Debug` fields are formatted using\n the alternate (`:#`) formatter.\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that ensures any `fmt::Debug` fields are formatted using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21048,"byte_end":21126,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ the alternate (`:#`) formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21127,"byte_end":21162,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21487,"byte_end":21490,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Alt<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided visitor so that any `fmt::Debug` fields are formatted\n using the alternative (`:#`) formatter.\n","sig":null,"attributes":[{"value":"/ Wraps the provided visitor so that any `fmt::Debug` fields are formatted","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21351,"byte_end":21427,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ using the alternative (`:#`) formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21432,"byte_end":21475,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delimited","qualname":"::field::delimited","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":781},{"krate":0,"index":786},{"krate":0,"index":790},{"krate":0,"index":794},{"krate":0,"index":801},{"krate":0,"index":94},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":109},{"krate":0,"index":117},{"krate":0,"index":121}],"decl_id":null,"docs":" A `MakeVisitor` wrapper that separates formatted fields with a delimiter.\n","sig":null,"attributes":[{"value":"/ A `MakeVisitor` wrapper that separates formatted fields with a delimiter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23367,"byte_end":23444,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":781},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23741,"byte_end":23750,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"Delimited","qualname":"::field::delimited::Delimited","value":"Delimited {  }","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"decl_id":null,"docs":" A `MakeVisitor` wrapper that wraps a visitor that writes formatted output so\n that a delimiter is inserted between writing formatted field values.\n","sig":null,"attributes":[{"value":"/ A `MakeVisitor` wrapper that wraps a visitor that writes formatted output so","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23552,"byte_end":23632,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ that a delimiter is inserted between writing formatted field values.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23633,"byte_end":23705,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23922,"byte_end":23936,"line_start":18,"line_end":18,"column_start":12,"column_end":26},"name":"VisitDelimited","qualname":"::field::delimited::VisitDelimited","value":"VisitDelimited {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"decl_id":null,"docs":" A visitor wrapper that inserts a delimiter after the wrapped visitor formats\n a field value.\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that inserts a delimiter after the wrapped visitor formats","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23794,"byte_end":23874,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ a field value.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":23875,"byte_end":23893,"line_start":16,"line_end":16,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24659,"byte_end":24662,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Delimited<D, V>>::new","value":"pub fn new(D, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`MakeVisitor`] implementation that wraps `inner` so that\n it will format each visited field separated by the provided `delimiter`.","sig":null,"attributes":[{"value":"/ Returns a new [`MakeVisitor`] implementation that wraps `inner` so that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24439,"byte_end":24514,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ it will format each visited field separated by the provided `delimiter`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24519,"byte_end":24595,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24600,"byte_end":24603,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`MakeVisitor`]: super::MakeVisitor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24608,"byte_end":24647,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":25016,"byte_end":25019,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<VisitDelimited<D, V>>::new","value":"pub fn new(D, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Visit`] implementation that wraps `inner` so that\n each formatted field is separated by the provided `delimiter`.","sig":null,"attributes":[{"value":"/ Returns a new [`Visit`] implementation that wraps `inner` so that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24810,"byte_end":24879,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ each formatted field is separated by the provided `delimiter`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24884,"byte_end":24950,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24955,"byte_end":24958,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`Visit`]: tracing_core::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24963,"byte_end":25004,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::field::display","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":162},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":166}],"decl_id":null,"docs":" `MakeVisitor` wrappers for working with `fmt::Display` fields.\n","sig":null,"attributes":[{"value":"/ `MakeVisitor` wrappers for working with `fmt::Display` fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28026,"byte_end":28092,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28337,"byte_end":28345,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Messages","qualname":"::field::display::Messages","value":"","parent":null,"children":[],"decl_id":null,"docs":" A visitor wrapper that ensures any strings named \"message\" are formatted\n using `fmt::Display`\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that ensures any strings named \"message\" are formatted","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28200,"byte_end":28276,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ using `fmt::Display`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28277,"byte_end":28301,"line_start":8,"line_end":8,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28720,"byte_end":28723,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Messages<V>>::new","value":"pub fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`MakeVisitor`] implementation that will wrap `inner` so\n that any strings named `message` are formatted using `fmt::Display`.","sig":null,"attributes":[{"value":"/ Returns a new [`MakeVisitor`] implementation that will wrap `inner` so","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28505,"byte_end":28579,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ that any strings named `message` are formatted using `fmt::Display`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28584,"byte_end":28656,"line_start":19,"line_end":19,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28661,"byte_end":28664,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`MakeVisitor`]: super::MakeVisitor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28669,"byte_end":28708,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10940,"byte_end":10951,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"MakeVisitor","qualname":"::field::MakeVisitor","value":"MakeVisitor<T>","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" Creates new [visitors].","sig":null,"attributes":[{"value":"/ Creates new [visitors].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10316,"byte_end":10343,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10344,"byte_end":10347,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A type implementing `MakeVisitor` represents a composable factory for types","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10348,"byte_end":10427,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ implementing the [`Visit` trait][visitors]. The `MakeVisitor` trait defines","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10428,"byte_end":10507,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a single function, `make_visitor`, which takes in a `T`-typed `target` and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10508,"byte_end":10586,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ returns a type implementing `Visit` configured for that target. A target may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10587,"byte_end":10667,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ be a string, output stream, or data structure that the visitor will record","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10668,"byte_end":10746,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ data to, configuration variables that determine the visitor's behavior, or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10747,"byte_end":10825,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ `()` when no input is required to produce a visitor.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10826,"byte_end":10882,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10883,"byte_end":10886,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [visitors]: tracing_core::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10887,"byte_end":10929,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11023,"byte_end":11030,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"Visitor","qualname":"::field::MakeVisitor::Visitor","value":"type Visitor: Visit;","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" The visitor type produced by this `MakeVisitor`.\n","sig":null,"attributes":[{"value":"/ The visitor type produced by this `MakeVisitor`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10961,"byte_end":11013,"line_start":27,"line_end":27,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11101,"byte_end":11113,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"::field::MakeVisitor::make_visitor","value":"pub fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Make a new visitor for the provided `target`.\n","sig":null,"attributes":[{"value":"/ Make a new visitor for the provided `target`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11044,"byte_end":11093,"line_start":30,"line_end":30,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11283,"byte_end":11294,"line_start":37,"line_end":37,"column_start":11,"column_end":22},"name":"VisitOutput","qualname":"::field::VisitOutput","value":"VisitOutput<Out>: Visit","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" A [visitor] that produces output once it has visited a set of fields.","sig":null,"attributes":[{"value":"/ A [visitor] that produces output once it has visited a set of fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11153,"byte_end":11226,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11227,"byte_end":11230,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [visitor]: tracing_core::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11231,"byte_end":11272,"line_start":36,"line_end":36,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11444,"byte_end":11450,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"finish","qualname":"::field::VisitOutput::finish","value":"pub fn finish(Self) -> Out","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Completes the visitor, returning any output.","sig":null,"attributes":[{"value":"/ Completes the visitor, returning any output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11313,"byte_end":11361,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11366,"byte_end":11369,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This is called once a full set of fields has been visited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11374,"byte_end":11436,"line_start":40,"line_end":40,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11594,"byte_end":11599,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"visit","qualname":"::field::VisitOutput::visit","value":"pub fn visit<R>(Self, &R) -> Out where R: RecordFields, Self: Sized","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Visit a set of fields, and return the output of finishing the visitor\n once the fields have been visited.\n","sig":null,"attributes":[{"value":"/ Visit a set of fields, and return the output of finishing the visitor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11470,"byte_end":11543,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ once the fields have been visited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11548,"byte_end":11586,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12904,"byte_end":12916,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"RecordFields","qualname":"::field::RecordFields","value":"RecordFields: crate::sealed::Sealed<RecordFieldsMarker>","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" Extension trait implemented by types which can be recorded by a [visitor].","sig":null,"attributes":[{"value":"/ Extension trait implemented by types which can be recorded by a [visitor].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11759,"byte_end":11837,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11838,"byte_end":11841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This allows writing code that is generic over `tracing_core`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11842,"byte_end":11908,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [`span::Attributes`][attr], [`span::Record`][rec], and [`Event`][event]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11909,"byte_end":11984,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ types. These types all provide inherent `record` methods that allow a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11985,"byte_end":12058,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ visitor to record their fields, but there is no common trait representing this.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12059,"byte_end":12142,"line_start":60,"line_end":60,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12143,"byte_end":12146,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ With `RecordFields`, we can write code like this:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12147,"byte_end":12200,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12201,"byte_end":12208,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::field::Visit;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12209,"byte_end":12244,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/ # use tracing_core::field::Field;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12245,"byte_end":12282,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/ use tracing_subscriber::field::RecordFields;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12283,"byte_end":12331,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12332,"byte_end":12335,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct MyVisitor {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12336,"byte_end":12358,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12359,"byte_end":12373,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12374,"byte_end":12379,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ # impl MyVisitor { fn new() -> Self { Self{} } }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12380,"byte_end":12432,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ impl Visit for MyVisitor {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12433,"byte_end":12463,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12464,"byte_end":12478,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/ # fn record_debug(&mut self, _: &Field, _: &dyn std::fmt::Debug) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12479,"byte_end":12550,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12551,"byte_end":12556,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12557,"byte_end":12560,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ fn record_with_my_visitor<R>(r: R)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12561,"byte_end":12599,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12600,"byte_end":12609,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/     R: RecordFields,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12610,"byte_end":12634,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12635,"byte_end":12640,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/     let mut visitor = MyVisitor::new();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12641,"byte_end":12684,"line_start":81,"line_end":81,"column_start":1,"column_end":44}},{"value":"/     r.record(&mut visitor);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12685,"byte_end":12716,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12717,"byte_end":12722,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12723,"byte_end":12730,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ [visitor]: tracing_core::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12731,"byte_end":12772,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/ [attr]: tracing_core::span::Attributes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12773,"byte_end":12815,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/ [rec]: tracing_core::span::Record","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12816,"byte_end":12853,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ [event]: tracing_core::event::Event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12854,"byte_end":12893,"line_start":88,"line_end":88,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13038,"byte_end":13044,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"record","qualname":"::field::RecordFields::record","value":"pub fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Record all the fields in `self` with the provided `visitor`.\n","sig":null,"attributes":[{"value":"/ Record all the fields in `self` with the provided `visitor`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12966,"byte_end":13030,"line_start":90,"line_end":90,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13216,"byte_end":13226,"line_start":96,"line_end":96,"column_start":11,"column_end":21},"name":"MakeOutput","qualname":"::field::MakeOutput","value":"MakeOutput<T, Out>","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" Extension trait implemented for all `MakeVisitor` implementations that\n produce a visitor implementing `VisitOutput`.\n","sig":null,"attributes":[{"value":"/ Extension trait implemented for all `MakeVisitor` implementations that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13081,"byte_end":13155,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ produce a visitor implementing `VisitOutput`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13156,"byte_end":13205,"line_start":95,"line_end":95,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13439,"byte_end":13449,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"visit_with","qualname":"::field::MakeOutput::visit_with","value":"pub fn visit_with<F>(&Self, T, &F) -> Out where F: RecordFields","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Visits all fields in `fields` with a new visitor constructed from\n `target`.\n","sig":null,"attributes":[{"value":"/ Visits all fields in `fields` with a new visitor constructed from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13344,"byte_end":13413,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ `target`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13418,"byte_end":13431,"line_start":102,"line_end":102,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":827},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13800,"byte_end":13810,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"VisitWrite","qualname":"::field::VisitWrite","value":"VisitWrite: VisitOutput<Result<(), io::Error>>","parent":null,"children":[{"krate":0,"index":828}],"decl_id":null,"docs":" Extension trait implemented by visitors to indicate that they write to an\n `io::Write` instance, and allow access to that writer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13920,"byte_end":13926,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"writer","qualname":"::field::VisitWrite::writer","value":"pub fn writer(&mut Self) -> &mut dyn io::Write","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Returns the writer that this visitor writes to.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14117,"byte_end":14125,"line_start":125,"line_end":125,"column_start":11,"column_end":19},"name":"VisitFmt","qualname":"::field::VisitFmt","value":"VisitFmt: VisitOutput<fmt::Result>","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Extension trait implemented by visitors to indicate that they write to a\n `fmt::Write` instance, and allow access to that writer.\n","sig":null,"attributes":[{"value":"/ Extension trait implemented by visitors to indicate that they write to a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13970,"byte_end":14046,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ `fmt::Write` instance, and allow access to that writer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14047,"byte_end":14106,"line_start":124,"line_end":124,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14220,"byte_end":14226,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"writer","qualname":"::field::VisitFmt::writer","value":"pub fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Returns the formatter that this visitor writes to.\n","sig":null,"attributes":[{"value":"/ Returns the formatter that this visitor writes to.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14158,"byte_end":14212,"line_start":126,"line_end":126,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14332,"byte_end":14339,"line_start":131,"line_end":131,"column_start":11,"column_end":18},"name":"MakeExt","qualname":"::field::MakeExt","value":"MakeExt<T>","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Extension trait providing `MakeVisitor` combinators.\n","sig":null,"attributes":[{"value":"/ Extension trait providing `MakeVisitor` combinators.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14265,"byte_end":14321,"line_start":130,"line_end":130,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14558,"byte_end":14567,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"debug_alt","qualname":"::field::MakeExt::debug_alt","value":"pub fn debug_alt(Self) -> debug::Alt<Self>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that any `fmt::Debug` fields are recorded using the\n alternate formatter (`{:#?}`).\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that any `fmt::Debug` fields are recorded using the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14440,"byte_end":14511,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ alternate formatter (`{:#?}`).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14516,"byte_end":14550,"line_start":137,"line_end":137,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14746,"byte_end":14762,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"display_messages","qualname":"::field::MakeExt::display_messages","value":"pub fn display_messages(Self) -> display::Messages<Self>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that any string fields named \"message\" are recorded\n using `fmt::Display`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that any string fields named \"message\" are recorded","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14637,"byte_end":14708,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ using `fmt::Display`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14713,"byte_end":14738,"line_start":143,"line_end":143,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14973,"byte_end":14982,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"delimited","qualname":"::field::MakeExt::delimited","value":"pub fn delimited<D>(Self, D) -> delimited::Delimited<D, Self> where\nD: AsRef<str> + Clone, Self::Visitor: VisitFmt","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that when fields are formatted to a writer, they are\n separated by the provided `delimiter`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that when fields are formatted to a writer, they are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14846,"byte_end":14918,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ separated by the provided `delimiter`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14923,"byte_end":14965,"line_start":149,"line_end":149,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16769,"byte_end":16782,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"MakeExtMarker","qualname":"::field::MakeExtMarker","value":"MakeExtMarker {  }","parent":null,"children":[{"krate":0,"index":831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16858,"byte_end":16876,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"RecordFieldsMarker","qualname":"::field::RecordFieldsMarker","value":"RecordFieldsMarker {  }","parent":null,"children":[{"krate":0,"index":836}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":235},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filter","qualname":"::filter","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":862},{"krate":0,"index":1162},{"krate":0,"index":346},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":1221},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1445}],"decl_id":null,"docs":" [`Layer`]s that control which spans and events are enabled by the wrapped\n subscriber.","sig":null,"attributes":[{"value":"/ [`Layer`]s that control which spans and events are enabled by the wrapped","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":30753,"byte_end":30830,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":30831,"byte_end":30846,"line_start":2,"line_end":2,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":30847,"byte_end":30850,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of types that provide implementations of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":30851,"byte_end":30925,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ various strategies for filtering which spans and events are enabled. For","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":30926,"byte_end":31002,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ details on filtering spans and events using [`Layer`]s, see the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31003,"byte_end":31070,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ [`layer` module's documentation].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31071,"byte_end":31108,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31109,"byte_end":31112,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`layer` module's documentation]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31113,"byte_end":31185,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`Layer`]: crate::layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31186,"byte_end":31213,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33442,"byte_end":33450,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"FilterFn","qualname":"::filter::filter_fn::FilterFn","value":"FilterFn {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"decl_id":null,"docs":" A filter implemented by a closure or function pointer that\n determines whether a given span or event is enabled, based on its\n [`Metadata`].","sig":null,"attributes":[{"value":"/ A filter implemented by a closure or function pointer that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32744,"byte_end":32806,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ determines whether a given span or event is enabled, based on its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32807,"byte_end":32876,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ [`Metadata`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32877,"byte_end":32894,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32895,"byte_end":32898,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32899,"byte_end":32971,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":32972,"byte_end":33044,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33045,"byte_end":33075,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33076,"byte_end":33079,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33080,"byte_end":33156,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33157,"byte_end":33160,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33161,"byte_end":33201,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33202,"byte_end":33238,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33239,"byte_end":33273,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33274,"byte_end":33317,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33318,"byte_end":33361,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33362,"byte_end":33413,"line_start":23,"line_end":23,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34262,"byte_end":34273,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"DynFilterFn","qualname":"::filter::filter_fn::DynFilterFn","value":"DynFilterFn {  }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" A filter implemented by a closure or function pointer that\n determines whether a given span or event is enabled _dynamically_,\n potentially based on the current [span context].","sig":null,"attributes":[{"value":"/ A filter implemented by a closure or function pointer that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33544,"byte_end":33606,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ determines whether a given span or event is enabled _dynamically_,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33607,"byte_end":33677,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ potentially based on the current [span context].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33678,"byte_end":33730,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33731,"byte_end":33734,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33735,"byte_end":33807,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33808,"byte_end":33880,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33881,"byte_end":33911,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33912,"byte_end":33915,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33916,"byte_end":33992,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33993,"byte_end":33996,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [span context]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":33997,"byte_end":34038,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34039,"byte_end":34075,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34076,"byte_end":34110,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34111,"byte_end":34154,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34155,"byte_end":34198,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34199,"byte_end":34250,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36094,"byte_end":36103,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"filter_fn","qualname":"::filter::filter_fn::filter_fn","value":"pub fn filter_fn<F>(F) -> FilterFn<F> where F: Fn(&Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`FilterFn`], from a function or closure that returns `true` if\n a span or event should be enabled, based on its [`Metadata`].","sig":null,"attributes":[{"value":"/ Constructs a [`FilterFn`], from a function or closure that returns `true` if","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34596,"byte_end":34676,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ a span or event should be enabled, based on its [`Metadata`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34677,"byte_end":34742,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34743,"byte_end":34746,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The returned [`FilterFn`] can be used for both [per-layer filtering][plf]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34747,"byte_end":34824,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ (using its [`Filter`] implementation) and [global filtering][global] (using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34825,"byte_end":34904,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ its  [`Layer`] implementation).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34905,"byte_end":34940,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34941,"byte_end":34944,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":34945,"byte_end":35021,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35022,"byte_end":35025,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling [`FilterFn::new`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35026,"byte_end":35078,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35079,"byte_end":35082,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35083,"byte_end":35123,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35124,"byte_end":35160,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35161,"byte_end":35195,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35196,"byte_end":35239,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35240,"byte_end":35283,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35284,"byte_end":35335,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35336,"byte_end":35339,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35340,"byte_end":35354,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35355,"byte_end":35358,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35359,"byte_end":35366,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35367,"byte_end":35396,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35397,"byte_end":35435,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/     filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35436,"byte_end":35451,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35452,"byte_end":35484,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35485,"byte_end":35491,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35492,"byte_end":35495,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let my_filter = filter::filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35496,"byte_end":35546,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/     // Only enable spans or events with the target \"interesting_things\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35547,"byte_end":35622,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/     metadata.target() == \"interesting_things\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35623,"byte_end":35672,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35673,"byte_end":35680,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35681,"byte_end":35684,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35685,"byte_end":35737,"line_start":92,"line_end":92,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35738,"byte_end":35741,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35742,"byte_end":35776,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35777,"byte_end":35823,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35824,"byte_end":35840,"line_start":96,"line_end":96,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35841,"byte_end":35844,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // This event will not be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35845,"byte_end":35883,"line_start":98,"line_end":98,"column_start":1,"column_end":39}},{"value":"/ tracing::warn!(\"something important but uninteresting happened!\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35884,"byte_end":35954,"line_start":99,"line_end":99,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35955,"byte_end":35958,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // This event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35959,"byte_end":35993,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/ tracing::debug!(target: \"interesting_things\", \"an interesting minor detail...\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":35994,"byte_end":36078,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36079,"byte_end":36086,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38481,"byte_end":38498,"line_start":175,"line_end":175,"column_start":8,"column_end":25},"name":"dynamic_filter_fn","qualname":"::filter::filter_fn::dynamic_filter_fn","value":"pub fn dynamic_filter_fn<S, F>(F) -> DynFilterFn<S, F> where\nF: Fn(&Metadata, &Context<, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`DynFilterFn`] from a function or closure that returns `true`\n if a span or event should be enabled within a particular [span context][`Context`].","sig":null,"attributes":[{"value":"/ Constructs a [`DynFilterFn`] from a function or closure that returns `true`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36194,"byte_end":36273,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ if a span or event should be enabled within a particular [span context][`Context`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36274,"byte_end":36361,"line_start":112,"line_end":112,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36362,"byte_end":36365,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling [`DynFilterFn::new`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36366,"byte_end":36421,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36422,"byte_end":36425,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Unlike [`filter_fn`], this function takes a closure or function pointer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36426,"byte_end":36501,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ taking the [`Metadata`] for a span or event *and* the current [`Context`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36502,"byte_end":36580,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ This means that a [`DynFilterFn`] can choose whether to enable spans or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36581,"byte_end":36656,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/ events based on information about the _current_ span (or its parents).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36657,"byte_end":36731,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36732,"byte_end":36735,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ If this is *not* necessary, use [`filter_fn`] instead.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36736,"byte_end":36794,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36795,"byte_end":36798,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The returned [`DynFilterFn`] can be used for both [per-layer filtering][plf]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36799,"byte_end":36879,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ (using its [`Filter`] implementation) and [global filtering][global] (using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36880,"byte_end":36959,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ its  [`Layer`] implementation).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36960,"byte_end":36995,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":36996,"byte_end":36999,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37000,"byte_end":37076,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37077,"byte_end":37080,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37081,"byte_end":37095,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37096,"byte_end":37099,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37100,"byte_end":37107,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37108,"byte_end":37137,"line_start":132,"line_end":132,"column_start":1,"column_end":30}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37138,"byte_end":37176,"line_start":133,"line_end":133,"column_start":1,"column_end":39}},{"value":"/     filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37177,"byte_end":37192,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37193,"byte_end":37225,"line_start":135,"line_end":135,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37226,"byte_end":37232,"line_start":136,"line_end":136,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37233,"byte_end":37236,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37237,"byte_end":37311,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/ let my_filter = filter::dynamic_filter_fn(|metadata, cx| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37312,"byte_end":37374,"line_start":139,"line_end":139,"column_start":1,"column_end":63}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37375,"byte_end":37442,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37443,"byte_end":37515,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/         return true;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37516,"byte_end":37540,"line_start":142,"line_end":142,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37541,"byte_end":37550,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37551,"byte_end":37554,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37555,"byte_end":37607,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37608,"byte_end":37665,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37666,"byte_end":37727,"line_start":147,"line_end":147,"column_start":1,"column_end":62}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37728,"byte_end":37737,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37738,"byte_end":37741,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     false","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37742,"byte_end":37755,"line_start":150,"line_end":150,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37756,"byte_end":37763,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37764,"byte_end":37767,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37768,"byte_end":37820,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37821,"byte_end":37824,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37825,"byte_end":37859,"line_start":155,"line_end":155,"column_start":1,"column_end":35}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37860,"byte_end":37906,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37907,"byte_end":37923,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37924,"byte_end":37927,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ // This event will not be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37928,"byte_end":37966,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ tracing::info!(\"something happened\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":37967,"byte_end":38008,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38009,"byte_end":38012,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ tracing::info_span!(\"interesting_span\").in_scope(|| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38013,"byte_end":38070,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/     // This event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38071,"byte_end":38109,"line_start":163,"line_end":163,"column_start":1,"column_end":39}},{"value":"/     tracing::debug!(\"something else happened\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38110,"byte_end":38161,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38162,"byte_end":38169,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38170,"byte_end":38177,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38178,"byte_end":38181,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38182,"byte_end":38218,"line_start":168,"line_end":168,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38219,"byte_end":38253,"line_start":169,"line_end":169,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38254,"byte_end":38297,"line_start":170,"line_end":170,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38298,"byte_end":38341,"line_start":171,"line_end":171,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38342,"byte_end":38393,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/ [`Context`]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38394,"byte_end":38432,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38433,"byte_end":38473,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40130,"byte_end":40133,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"new","qualname":"<FilterFn<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`FilterFn`] from a function or closure that returns `true`\n if a span or event should be enabled, based on its [`Metadata`].","sig":null,"attributes":[{"value":"/ Constructs a [`FilterFn`] from a function or closure that returns `true`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38684,"byte_end":38760,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ if a span or event should be enabled, based on its [`Metadata`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38765,"byte_end":38833,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38838,"byte_end":38841,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If determining whether a span or event should be enabled also requires","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38846,"byte_end":38920,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ information about the current span context, use [`DynFilterFn`] instead.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38925,"byte_end":39001,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39006,"byte_end":39009,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details on using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39014,"byte_end":39090,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ [`Filter`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39095,"byte_end":39111,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39116,"byte_end":39119,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39124,"byte_end":39160,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39165,"byte_end":39208,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39213,"byte_end":39253,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39258,"byte_end":39261,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39266,"byte_end":39280,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39285,"byte_end":39288,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39293,"byte_end":39300,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39305,"byte_end":39334,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39339,"byte_end":39377,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"/     filter::FilterFn,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39382,"byte_end":39407,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39412,"byte_end":39444,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39449,"byte_end":39455,"line_start":206,"line_end":206,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39460,"byte_end":39463,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let my_filter = FilterFn::new(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39468,"byte_end":39514,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     // Only enable spans or events with the target \"interesting_things\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39519,"byte_end":39594,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/     metadata.target() == \"interesting_things\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39599,"byte_end":39648,"line_start":210,"line_end":210,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39653,"byte_end":39660,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39665,"byte_end":39668,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39673,"byte_end":39725,"line_start":213,"line_end":213,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39730,"byte_end":39733,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39738,"byte_end":39772,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39777,"byte_end":39823,"line_start":216,"line_end":216,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39828,"byte_end":39844,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39849,"byte_end":39852,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ // This event will not be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39857,"byte_end":39895,"line_start":219,"line_end":219,"column_start":5,"column_end":43}},{"value":"/ tracing::warn!(\"something important but uninteresting happened!\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39900,"byte_end":39970,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39975,"byte_end":39978,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // This event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":39983,"byte_end":40017,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/ tracing::debug!(target: \"interesting_things\", \"an interesting minor detail...\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40022,"byte_end":40106,"line_start":223,"line_end":223,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40111,"byte_end":40118,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41670,"byte_end":41689,"line_start":269,"line_end":269,"column_start":12,"column_end":31},"name":"with_max_level_hint","qualname":"<FilterFn<F>>::with_max_level_hint","value":"pub fn with_max_level_hint<impl Into<LevelFilter>: Into<LevelFilter>>(Self,\n                                                                      impl Into<LevelFilter>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the highest verbosity [`Level`] the filter function will enable.","sig":null,"attributes":[{"value":"/ Sets the highest verbosity [`Level`] the filter function will enable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40247,"byte_end":40320,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40325,"byte_end":40328,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The value passed to this method will be returned by this `FilterFn`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40333,"byte_end":40406,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ [`Filter::max_level_hint`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40411,"byte_end":40449,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40454,"byte_end":40457,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ If the provided function will not enable all levels, it is recommended","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40462,"byte_end":40536,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ to call this method to configure it with the most verbose level it will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40541,"byte_end":40616,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ enable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40621,"byte_end":40632,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40637,"byte_end":40640,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40645,"byte_end":40659,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40664,"byte_end":40667,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40672,"byte_end":40679,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40684,"byte_end":40713,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40718,"byte_end":40756,"line_start":245,"line_end":245,"column_start":5,"column_end":43}},{"value":"/     filter::{filter_fn, LevelFilter},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40761,"byte_end":40802,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40807,"byte_end":40839,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40844,"byte_end":40850,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40855,"byte_end":40883,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40888,"byte_end":40891,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let my_filter = filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40896,"byte_end":40938,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/     // Only enable spans or events with targets starting with `my_crate`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":40943,"byte_end":41019,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/     // and levels at or below `INFO`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41024,"byte_end":41065,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     metadata.level() <= &Level::INFO && metadata.target().starts_with(\"my_crate\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41070,"byte_end":41155,"line_start":254,"line_end":254,"column_start":5,"column_end":90}},{"value":"/ })","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41160,"byte_end":41166,"line_start":255,"line_end":255,"column_start":5,"column_end":11}},{"value":"/     // Since the filter closure will only enable the `INFO` level and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41171,"byte_end":41244,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/     // below, set the max level hint","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41249,"byte_end":41289,"line_start":257,"line_end":257,"column_start":5,"column_end":45}},{"value":"/     .with_max_level_hint(LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41294,"byte_end":41342,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41347,"byte_end":41350,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41355,"byte_end":41407,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41412,"byte_end":41415,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41420,"byte_end":41454,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41459,"byte_end":41505,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41510,"byte_end":41526,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41531,"byte_end":41538,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41543,"byte_end":41546,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41551,"byte_end":41585,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ [`Filter::max_level_hint`]: crate::layer::Filter::max_level_hint","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":41590,"byte_end":41658,"line_start":268,"line_end":268,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46642,"byte_end":46645,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<DynFilterFn<S, F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Filter`] from a function or closure that returns `true`\n if a span or event should be enabled in the current [span\n context][`Context`].","sig":null,"attributes":[{"value":"/ Constructs a [`Filter`] from a function or closure that returns `true`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44473,"byte_end":44547,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ if a span or event should be enabled in the current [span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44552,"byte_end":44613,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/ context][`Context`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44618,"byte_end":44642,"line_start":368,"line_end":368,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44647,"byte_end":44650,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Unlike [`FilterFn`], a `DynFilterFn` is constructed from a closure or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44655,"byte_end":44728,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ function pointer that takes both the [`Metadata`] for a span or event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44733,"byte_end":44806,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ *and* the current [`Context`]. This means that a [`DynFilterFn`] can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44811,"byte_end":44883,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ choose whether to enable spans or events based on information about the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44888,"byte_end":44963,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ _current_ span (or its parents).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44968,"byte_end":45004,"line_start":374,"line_end":374,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45009,"byte_end":45012,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If this is *not* necessary, use [`FilterFn`] instead.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45017,"byte_end":45074,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45079,"byte_end":45082,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details on using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45087,"byte_end":45163,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ [`Filter`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45168,"byte_end":45184,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45189,"byte_end":45192,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45197,"byte_end":45233,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45238,"byte_end":45281,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ [`Context`]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45286,"byte_end":45324,"line_start":383,"line_end":383,"column_start":5,"column_end":43}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45329,"byte_end":45369,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45374,"byte_end":45377,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45382,"byte_end":45396,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45401,"byte_end":45404,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45409,"byte_end":45416,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45421,"byte_end":45450,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45455,"byte_end":45493,"line_start":390,"line_end":390,"column_start":5,"column_end":43}},{"value":"/     filter::DynFilterFn,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45498,"byte_end":45526,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45531,"byte_end":45563,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45568,"byte_end":45574,"line_start":393,"line_end":393,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45579,"byte_end":45582,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45587,"byte_end":45661,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45666,"byte_end":45719,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45724,"byte_end":45791,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45796,"byte_end":45868,"line_start":398,"line_end":398,"column_start":5,"column_end":77}},{"value":"/         return true;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45873,"byte_end":45897,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45902,"byte_end":45911,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45916,"byte_end":45919,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45924,"byte_end":45976,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":45981,"byte_end":46038,"line_start":403,"line_end":403,"column_start":5,"column_end":62}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46043,"byte_end":46104,"line_start":404,"line_end":404,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46109,"byte_end":46118,"line_start":405,"line_end":405,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46123,"byte_end":46126,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/     false","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46131,"byte_end":46144,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46149,"byte_end":46156,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46161,"byte_end":46164,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46169,"byte_end":46221,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46226,"byte_end":46229,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46234,"byte_end":46268,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46273,"byte_end":46319,"line_start":413,"line_end":413,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46324,"byte_end":46340,"line_start":414,"line_end":414,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46345,"byte_end":46348,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ // This event will not be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46353,"byte_end":46391,"line_start":416,"line_end":416,"column_start":5,"column_end":43}},{"value":"/ tracing::info!(\"something happened\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46396,"byte_end":46437,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46442,"byte_end":46445,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ tracing::info_span!(\"interesting_span\").in_scope(|| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46450,"byte_end":46507,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"/     // This event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46512,"byte_end":46550,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/     tracing::debug!(\"something else happened\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46555,"byte_end":46606,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46611,"byte_end":46618,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46623,"byte_end":46630,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48826,"byte_end":48845,"line_start":489,"line_end":489,"column_start":12,"column_end":31},"name":"with_max_level_hint","qualname":"<DynFilterFn<S, F, R>>::with_max_level_hint","value":"pub fn with_max_level_hint<impl Into<LevelFilter>: Into<LevelFilter>>(Self,\n                                                                      impl Into<LevelFilter>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the highest verbosity [`Level`] the filter function will enable.","sig":null,"attributes":[{"value":"/ Sets the highest verbosity [`Level`] the filter function will enable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46921,"byte_end":46994,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46999,"byte_end":47002,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The value passed to this method will be returned by this `DynFilterFn`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47007,"byte_end":47083,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ [`Filter::max_level_hint`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47088,"byte_end":47126,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47131,"byte_end":47134,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ If the provided function will not enable all levels, it is recommended","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47139,"byte_end":47213,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ to call this method to configure it with the most verbose level it will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47218,"byte_end":47293,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ enable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47298,"byte_end":47309,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47314,"byte_end":47317,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47322,"byte_end":47336,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47341,"byte_end":47344,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47349,"byte_end":47356,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47361,"byte_end":47390,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47395,"byte_end":47433,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/     filter::{DynFilterFn, LevelFilter},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47438,"byte_end":47481,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47486,"byte_end":47518,"line_start":453,"line_end":453,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47523,"byte_end":47529,"line_start":454,"line_end":454,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47534,"byte_end":47562,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47567,"byte_end":47570,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events with levels at or below `INFO`, if","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47575,"byte_end":47644,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"/ // we are inside a span called \"interesting_span\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47649,"byte_end":47703,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47708,"byte_end":47761,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/     // If the level is greater than INFO, disable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47766,"byte_end":47823,"line_start":460,"line_end":460,"column_start":5,"column_end":62}},{"value":"/     if metadata.level() > &Level::INFO {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47828,"byte_end":47872,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/         return false;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47877,"byte_end":47902,"line_start":462,"line_end":462,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47907,"byte_end":47916,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47921,"byte_end":47924,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     // If any span in the current scope is named \"interesting_span\",","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":47929,"byte_end":48001,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/     // enable this span or event.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48006,"byte_end":48043,"line_start":466,"line_end":466,"column_start":5,"column_end":42}},{"value":"/     for span in cx.lookup_current().iter().flat_map(|span| span.scope()) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48048,"byte_end":48126,"line_start":467,"line_end":467,"column_start":5,"column_end":83}},{"value":"/         if span.name() == \"interesting_span\" {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48131,"byte_end":48181,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/             return true;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48186,"byte_end":48214,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/          }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48219,"byte_end":48233,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48238,"byte_end":48247,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48252,"byte_end":48255,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, disable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48260,"byte_end":48293,"line_start":473,"line_end":473,"column_start":5,"column_end":38}},{"value":"/     false","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48298,"byte_end":48311,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/ })","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48316,"byte_end":48322,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/     // Since the filter closure will only enable the `INFO` level and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48327,"byte_end":48400,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/     // below, set the max level hint","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48405,"byte_end":48445,"line_start":477,"line_end":477,"column_start":5,"column_end":45}},{"value":"/     .with_max_level_hint(LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48450,"byte_end":48498,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48503,"byte_end":48506,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48511,"byte_end":48563,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48568,"byte_end":48571,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48576,"byte_end":48610,"line_start":482,"line_end":482,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48615,"byte_end":48661,"line_start":483,"line_end":483,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48666,"byte_end":48682,"line_start":484,"line_end":484,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48687,"byte_end":48694,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48699,"byte_end":48702,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48707,"byte_end":48741,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/ [`Filter::max_level_hint`]: crate::layer::Filter::max_level_hint","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":48746,"byte_end":48814,"line_start":488,"line_end":488,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51696,"byte_end":51716,"line_start":558,"line_end":558,"column_start":12,"column_end":32},"name":"with_callsite_filter","qualname":"<DynFilterFn<S, F, R>>::with_callsite_filter","value":"pub fn with_callsite_filter<R2>(Self, R2) -> DynFilterFn<S, F, R2> where\nR2: Fn(&'static Metadata) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Adds a function for filtering callsites to this filter.","sig":null,"attributes":[{"value":"/ Adds a function for filtering callsites to this filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49014,"byte_end":49073,"line_start":496,"line_end":496,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49078,"byte_end":49081,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ When this filter's [`Filter::callsite_enabled`][cse] method is called,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49086,"byte_end":49160,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ the provided function will be used rather than the default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49165,"byte_end":49228,"line_start":499,"line_end":499,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49233,"byte_end":49236,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ By default, `DynFilterFn` assumes that, because the filter _may_ depend","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49241,"byte_end":49316,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ dynamically on the current [span context], its result should never be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49321,"byte_end":49394,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ cached. However, some filtering strategies may require dynamic information","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49399,"byte_end":49477,"line_start":503,"line_end":503,"column_start":5,"column_end":83}},{"value":"/ from the current span context in *some* cases, but are able to make","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49482,"byte_end":49553,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ static filtering decisions from [`Metadata`] alone in others.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49558,"byte_end":49623,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49628,"byte_end":49631,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ For example, consider the filter given in the example for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49636,"byte_end":49697,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ [`DynFilterFn::new`]. That filter enables all spans named","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49702,"byte_end":49763,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ \"interesting_span\", and any events and spans that occur inside of an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49768,"byte_end":49840,"line_start":509,"line_end":509,"column_start":5,"column_end":77}},{"value":"/ interesting span. Since the span's name is part of its static","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49845,"byte_end":49910,"line_start":510,"line_end":510,"column_start":5,"column_end":70}},{"value":"/ [`Metadata`], the \"interesting_span\" can be enabled in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49915,"byte_end":49973,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/ [`callsite_enabled`][cse]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":49978,"byte_end":50008,"line_start":512,"line_end":512,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50013,"byte_end":50016,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50021,"byte_end":50028,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50033,"byte_end":50062,"line_start":515,"line_end":515,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50067,"byte_end":50105,"line_start":516,"line_end":516,"column_start":5,"column_end":43}},{"value":"/     filter::DynFilterFn,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50110,"byte_end":50138,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50143,"byte_end":50175,"line_start":518,"line_end":518,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50180,"byte_end":50186,"line_start":519,"line_end":519,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::subscriber::Interest;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50191,"byte_end":50234,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50239,"byte_end":50242,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50247,"byte_end":50321,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50326,"byte_end":50379,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50384,"byte_end":50451,"line_start":524,"line_end":524,"column_start":5,"column_end":72}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50456,"byte_end":50528,"line_start":525,"line_end":525,"column_start":5,"column_end":77}},{"value":"/         return true;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50533,"byte_end":50557,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50562,"byte_end":50571,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50576,"byte_end":50579,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50584,"byte_end":50636,"line_start":529,"line_end":529,"column_start":5,"column_end":57}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50641,"byte_end":50698,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50703,"byte_end":50764,"line_start":531,"line_end":531,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50769,"byte_end":50778,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50783,"byte_end":50786,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     false","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50791,"byte_end":50804,"line_start":534,"line_end":534,"column_start":5,"column_end":18}},{"value":"/ }).with_callsite_filter(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50809,"byte_end":50849,"line_start":535,"line_end":535,"column_start":5,"column_end":45}},{"value":"/     // If this is an \"interesting_span\", we know we will always","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50854,"byte_end":50921,"line_start":536,"line_end":536,"column_start":5,"column_end":72}},{"value":"/     // enable it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50926,"byte_end":50947,"line_start":537,"line_end":537,"column_start":5,"column_end":26}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":50952,"byte_end":51024,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/         return Interest::always();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51029,"byte_end":51067,"line_start":539,"line_end":539,"column_start":5,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51072,"byte_end":51081,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51086,"byte_end":51089,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, it depends on whether or not we're in an interesting","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51094,"byte_end":51168,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/     // span. You'll have to ask us again for each span/event!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51173,"byte_end":51238,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/     Interest::sometimes()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51243,"byte_end":51272,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51277,"byte_end":51284,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51289,"byte_end":51292,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51297,"byte_end":51349,"line_start":547,"line_end":547,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51354,"byte_end":51357,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51362,"byte_end":51396,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51401,"byte_end":51447,"line_start":550,"line_end":550,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51452,"byte_end":51468,"line_start":551,"line_end":551,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51473,"byte_end":51480,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51485,"byte_end":51488,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ [cse]: crate::layer::Filter::callsite_enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51493,"byte_end":51542,"line_start":554,"line_end":554,"column_start":5,"column_end":54}},{"value":"/ [`enabled`]: crate::layer::Filter::enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51547,"byte_end":51593,"line_start":555,"line_end":555,"column_start":5,"column_end":51}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51598,"byte_end":51638,"line_start":556,"line_end":556,"column_start":5,"column_end":45}},{"value":"/ [span context]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":51643,"byte_end":51684,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":923},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::filter::layer_filters::combinator","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":968},{"krate":0,"index":975},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":997},{"krate":0,"index":1002},{"krate":0,"index":1007},{"krate":0,"index":1012},{"krate":0,"index":1024},{"krate":0,"index":1029},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1049},{"krate":0,"index":1053}],"decl_id":null,"docs":" Filter combinators\n","sig":null,"attributes":[{"value":"/ Filter combinators","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13230745,"byte_end":13230767,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231304,"byte_end":13231307,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"And","qualname":"::filter::layer_filters::combinator::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if and only if\n *both* filters return `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if and only if","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13230960,"byte_end":13231040,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ *both* filters return `true`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231041,"byte_end":13231074,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231075,"byte_end":13231078,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::and`] method. See that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231079,"byte_end":13231157,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ method's documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231158,"byte_end":13231197,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231198,"byte_end":13231201,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231202,"byte_end":13231238,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::and`]: crate::filter::FilterExt::and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231239,"byte_end":13231292,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231701,"byte_end":13231703,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"Or","qualname":"::filter::layer_filters::combinator::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if *either* filter\n returns `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if *either* filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231370,"byte_end":13231454,"line_start":24,"line_end":24,"column_start":1,"column_end":85}},{"value":"/ returns `true`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231455,"byte_end":13231474,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231475,"byte_end":13231478,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::or`] method. See that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231479,"byte_end":13231556,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ method's documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231557,"byte_end":13231596,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231597,"byte_end":13231600,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231601,"byte_end":13231637,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::or`]: crate::filter::FilterExt::or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231638,"byte_end":13231689,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232190,"byte_end":13232193,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Not","qualname":"::filter::layer_filters::combinator::Not","value":"Not {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" Inverts the result of a [`Filter`].","sig":null,"attributes":[{"value":"/ Inverts the result of a [`Filter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231766,"byte_end":13231805,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231806,"byte_end":13231809,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If the wrapped filter would enable a span or event, it will be disabled. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231810,"byte_end":13231889,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ it would disable a span or event, that span or event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231890,"byte_end":13231963,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231964,"byte_end":13231967,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::or`] method. See that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13231968,"byte_end":13232045,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ method's documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232046,"byte_end":13232085,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232086,"byte_end":13232089,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232090,"byte_end":13232126,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::or`]: crate::filter::FilterExt::or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232127,"byte_end":13232178,"line_start":47,"line_end":47,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191764,"byte_end":13191772,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"Filtered","qualname":"::filter::layer_filters::Filtered","value":"Filtered {  }","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"decl_id":null,"docs":" A [`Layer`] that wraps an inner [`Layer`] and adds a [`Filter`] which\n controls what spans and events are enabled for that layer.","sig":null,"attributes":[{"value":"/ A [`Layer`] that wraps an inner [`Layer`] and adds a [`Filter`] which","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191330,"byte_end":13191403,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ controls what spans and events are enabled for that layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191404,"byte_end":13191466,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191467,"byte_end":13191470,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Layer::with_filter`] method. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191471,"byte_end":13191537,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [documentation on per-layer filtering][plf] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191538,"byte_end":13191598,"line_start":55,"line_end":55,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191599,"byte_end":13191602,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191603,"byte_end":13191639,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191640,"byte_end":13191683,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13193085,"byte_end":13193093,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"FilterId","qualname":"::filter::layer_filters::FilterId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies an individual [`Filter`] instance in the context of\n a [`Subscriber`].","sig":null,"attributes":[{"value":"/ Uniquely identifies an individual [`Filter`] instance in the context of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191876,"byte_end":13191951,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ a [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191952,"byte_end":13191973,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191974,"byte_end":13191977,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When adding a [`Filtered`] [`Layer`] to a [`Subscriber`], the [`Subscriber`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191978,"byte_end":13192058,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ generates a `FilterId` for that [`Filtered`] layer. The [`Filtered`] layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192059,"byte_end":13192137,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ will then use the generated ID to query whether a particular span was","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192138,"byte_end":13192211,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ previously enabled by that layer's [`Filter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192212,"byte_end":13192262,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192263,"byte_end":13192266,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ **Note**: Currently, the [`Registry`] type provided by this crate is the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192267,"byte_end":13192343,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ **only** [`Subscriber`] implementation capable of participating in per-layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192344,"byte_end":13192424,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ filtering. Therefore, the `FilterId` type cannot currently be constructed by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192425,"byte_end":13192505,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ code outside of `tracing-subscriber`. In the future, new APIs will be added to `tracing-subscriber` to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192506,"byte_end":13192612,"line_start":79,"line_end":79,"column_start":1,"column_end":107}},{"value":"/ allow non-Registry [`Subscriber`]s to also participate in per-layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192613,"byte_end":13192684,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ filtering. When those APIs are added, subscribers will be responsible","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192685,"byte_end":13192758,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ for generating and assigning `FilterId`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192759,"byte_end":13192804,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192805,"byte_end":13192808,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192809,"byte_end":13192845,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192846,"byte_end":13192890,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192891,"byte_end":13192925,"line_start":86,"line_end":86,"column_start":1,"column_end":35}},{"value":"/ [`Registry`]: crate::registry::Registry","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192926,"byte_end":13192969,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13192970,"byte_end":13192998,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1057},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196113,"byte_end":13196122,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"FilterExt","qualname":"::filter::layer_filters::FilterExt","value":"FilterExt<S>: layer::Filter<S>","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" Extension trait adding [combinators] for combining [`Filter`].","sig":null,"attributes":[{"value":"/ Extension trait adding [combinators] for combining [`Filter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13195950,"byte_end":13196016,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196017,"byte_end":13196020,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [combinators]: crate::filter::combinator","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196021,"byte_end":13196065,"line_start":165,"line_end":165,"column_start":1,"column_end":45}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196066,"byte_end":13196102,"line_start":166,"line_end":166,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197720,"byte_end":13197723,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"and","qualname":"::filter::layer_filters::FilterExt::and","value":"pub fn and<B>(Self, B) -> combinator::And<Self, B, S> where Self: Sized,\nB: layer::Filter<S>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" Combines this [`Filter`] with another [`Filter`] s so that spans and\n events are enabled if and only if *both* filters return `true`.","sig":null,"attributes":[{"value":"/ Combines this [`Filter`] with another [`Filter`] s so that spans and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196150,"byte_end":13196222,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ events are enabled if and only if *both* filters return `true`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196227,"byte_end":13196294,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196299,"byte_end":13196302,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196307,"byte_end":13196321,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196326,"byte_end":13196329,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Enabling spans or events if they have both a particular target *and* are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196334,"byte_end":13196410,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ above a certain level:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196415,"byte_end":13196441,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196446,"byte_end":13196449,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196454,"byte_end":13196461,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196466,"byte_end":13196495,"line_start":177,"line_end":177,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196500,"byte_end":13196552,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196557,"byte_end":13196576,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196581,"byte_end":13196587,"line_start":180,"line_end":180,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196592,"byte_end":13196595,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with targets starting with `interesting_target`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196600,"byte_end":13196680,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"/ let target_filter = filter_fn(|meta| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196685,"byte_end":13196727,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/     meta.target().starts_with(\"interesting_target\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196732,"byte_end":13196787,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196792,"byte_end":13196799,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196804,"byte_end":13196807,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with levels `INFO` and below:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196812,"byte_end":13196873,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ let level_filter = LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196878,"byte_end":13196919,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196924,"byte_end":13196927,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // Combine the two filters together, returning a filter that only enables","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196932,"byte_end":13197009,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/ // spans and events that *both* filters will enable:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197014,"byte_end":13197070,"line_start":191,"line_end":191,"column_start":5,"column_end":61}},{"value":"/ let filter = target_filter.and(level_filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197075,"byte_end":13197124,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197129,"byte_end":13197132,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197137,"byte_end":13197171,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197176,"byte_end":13197243,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197248,"byte_end":13197264,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197269,"byte_end":13197272,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197277,"byte_end":13197317,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ tracing::info!(\"an event with an uninteresting target\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197322,"byte_end":13197382,"line_start":199,"line_end":199,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197387,"byte_end":13197390,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197395,"byte_end":13197431,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(target: \"interesting_target\", \"a very interesting event\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197436,"byte_end":13197513,"line_start":202,"line_end":202,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197518,"byte_end":13197521,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197526,"byte_end":13197566,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ tracing::debug!(target: \"interesting_target\", \"interesting debug event...\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197571,"byte_end":13197651,"line_start":205,"line_end":205,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197656,"byte_end":13197663,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197668,"byte_end":13197671,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197676,"byte_end":13197712,"line_start":208,"line_end":208,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200697,"byte_end":13200699,"line_start":291,"line_end":291,"column_start":8,"column_end":10},"name":"or","qualname":"::filter::layer_filters::FilterExt::or","value":"pub fn or<B>(Self, B) -> combinator::Or<Self, B, S> where Self: Sized,\nB: layer::Filter<S>","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if *either* filter\n returns `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if *either* filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197893,"byte_end":13197977,"line_start":217,"line_end":217,"column_start":5,"column_end":89}},{"value":"/ returns `true`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13197982,"byte_end":13198001,"line_start":218,"line_end":218,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198006,"byte_end":13198009,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198014,"byte_end":13198028,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198033,"byte_end":13198036,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Enabling spans and events at the `INFO` level and above, and all spans","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198041,"byte_end":13198115,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ and events with a particular target:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198120,"byte_end":13198160,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198165,"byte_end":13198172,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198177,"byte_end":13198206,"line_start":225,"line_end":225,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198211,"byte_end":13198263,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198268,"byte_end":13198287,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198292,"byte_end":13198298,"line_start":228,"line_end":228,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198303,"byte_end":13198306,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with targets starting with `interesting_target`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198311,"byte_end":13198391,"line_start":230,"line_end":230,"column_start":5,"column_end":85}},{"value":"/ let target_filter = filter_fn(|meta| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198396,"byte_end":13198438,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     meta.target().starts_with(\"interesting_target\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198443,"byte_end":13198498,"line_start":232,"line_end":232,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198503,"byte_end":13198510,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198515,"byte_end":13198518,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with levels `INFO` and below:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198523,"byte_end":13198584,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ let level_filter = LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198589,"byte_end":13198630,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198635,"byte_end":13198638,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Combine the two filters together so that a span or event is enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198643,"byte_end":13198717,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ // if it is at INFO or lower, or if it has a target starting with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198722,"byte_end":13198791,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/ // `interesting_target`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198796,"byte_end":13198824,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/ let filter = level_filter.or(target_filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198829,"byte_end":13198877,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198882,"byte_end":13198885,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198890,"byte_end":13198924,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13198929,"byte_end":13198996,"line_start":244,"line_end":244,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199001,"byte_end":13199017,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199022,"byte_end":13199025,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199030,"byte_end":13199070,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/ tracing::debug!(\"an uninteresting event\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199075,"byte_end":13199121,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199126,"byte_end":13199129,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199134,"byte_end":13199170,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(\"an uninteresting INFO event\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199175,"byte_end":13199225,"line_start":251,"line_end":251,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199230,"byte_end":13199233,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199238,"byte_end":13199274,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(target: \"interesting_target\", \"a very interesting event\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199279,"byte_end":13199356,"line_start":254,"line_end":254,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199361,"byte_end":13199364,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199369,"byte_end":13199405,"line_start":256,"line_end":256,"column_start":5,"column_end":41}},{"value":"/ tracing::debug!(target: \"interesting_target\", \"interesting debug event...\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199410,"byte_end":13199490,"line_start":257,"line_end":257,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199495,"byte_end":13199502,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199507,"byte_end":13199510,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Enabling a higher level for a particular target by using `or` in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199515,"byte_end":13199583,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/ conjunction with the [`and`] combinator:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199588,"byte_end":13199632,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199637,"byte_end":13199640,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199645,"byte_end":13199652,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199657,"byte_end":13199686,"line_start":264,"line_end":264,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199691,"byte_end":13199743,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199748,"byte_end":13199767,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199772,"byte_end":13199778,"line_start":267,"line_end":267,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199783,"byte_end":13199786,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ // This filter will enable spans and events with targets beginning with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199791,"byte_end":13199866,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ // `my_crate`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199871,"byte_end":13199889,"line_start":270,"line_end":270,"column_start":5,"column_end":23}},{"value":"/ let my_crate = filter_fn(|meta| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199894,"byte_end":13199931,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/     meta.target().starts_with(\"my_crate\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199936,"byte_end":13199981,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199986,"byte_end":13199993,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13199998,"byte_end":13200001,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let filter = my_crate","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200006,"byte_end":13200031,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/     // Combine the `my_crate` filter with a `LevelFilter` to produce a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200036,"byte_end":13200110,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/     // filter that will enable the `INFO` level and lower for spans and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200115,"byte_end":13200190,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/     // events with `my_crate` targets:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200195,"byte_end":13200237,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/     .and(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200242,"byte_end":13200273,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/     // If a span or event *doesn't* have a target beginning with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200278,"byte_end":13200346,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/     // `my_crate`, enable it if it has the `WARN` level or lower:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200351,"byte_end":13200420,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/     .or(LevelFilter::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200425,"byte_end":13200456,"line_start":282,"line_end":282,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200461,"byte_end":13200464,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200469,"byte_end":13200503,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200508,"byte_end":13200575,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200580,"byte_end":13200596,"line_start":286,"line_end":286,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200601,"byte_end":13200608,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200613,"byte_end":13200616,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200621,"byte_end":13200657,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/ [`and`]: FilterExt::and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200662,"byte_end":13200689,"line_start":290,"line_end":290,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200991,"byte_end":13200994,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"not","qualname":"::filter::layer_filters::FilterExt::not","value":"pub fn not(Self) -> combinator::Not<Self, S> where Self: Sized","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" Inverts `self`, returning a filter that enables spans and events only if\n `self` would *not* enable them.\n","sig":null,"attributes":[{"value":"/ Inverts `self`, returning a filter that enables spans and events only if","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200867,"byte_end":13200943,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ `self` would *not* enable them.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13200948,"byte_end":13200983,"line_start":300,"line_end":300,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203703,"byte_end":13203708,"line_start":378,"line_end":378,"column_start":8,"column_end":13},"name":"boxed","qualname":"::filter::layer_filters::FilterExt::boxed","value":"pub fn boxed(Self) -> Box<dyn layer::Filter<S> + Send + Sync + 'static> where\nSelf: Sized + Send + Sync + 'static","parent":{"krate":0,"index":1057},"children":[],"decl_id":null,"docs":" [Boxes] `self`, erasing its concrete type.","sig":null,"attributes":[{"value":"/ [Boxes] `self`, erasing its concrete type.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201112,"byte_end":13201158,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201163,"byte_end":13201166,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling [`Box::new`], but in method form, so that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201171,"byte_end":13201246,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ it can be used when chaining combinator methods.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201251,"byte_end":13201303,"line_start":311,"line_end":311,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201308,"byte_end":13201311,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201316,"byte_end":13201330,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201335,"byte_end":13201338,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ When different combinations of filters are used conditionally, they may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201343,"byte_end":13201418,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ have different types. For example, the following code won't compile,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201423,"byte_end":13201495,"line_start":316,"line_end":316,"column_start":5,"column_end":77}},{"value":"/ since the `if` and `else` clause produce filters of different types:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201500,"byte_end":13201572,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201577,"byte_end":13201580,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201585,"byte_end":13201604,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201609,"byte_end":13201638,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201643,"byte_end":13201695,"line_start":321,"line_end":321,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201700,"byte_end":13201719,"line_start":322,"line_end":322,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201724,"byte_end":13201730,"line_start":323,"line_end":323,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201735,"byte_end":13201738,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let enable_bar_target: bool = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201743,"byte_end":13201783,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/ # false;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201788,"byte_end":13201800,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201805,"byte_end":13201808,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let filter = if enable_bar_target {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201813,"byte_end":13201852,"line_start":328,"line_end":328,"column_start":5,"column_end":44}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201857,"byte_end":13201915,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/         // If `enable_bar_target` is true, add a `filter_fn` enabling","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201920,"byte_end":13201993,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/         // spans and events with the target `bar`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13201998,"byte_end":13202052,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/         .or(filter_fn(|meta| meta.target().starts_with(\"bar\")))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202057,"byte_end":13202124,"line_start":332,"line_end":332,"column_start":5,"column_end":72}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202129,"byte_end":13202164,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202169,"byte_end":13202181,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202186,"byte_end":13202244,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202249,"byte_end":13202284,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202289,"byte_end":13202295,"line_start":337,"line_end":337,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202300,"byte_end":13202303,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202308,"byte_end":13202342,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202347,"byte_end":13202414,"line_start":340,"line_end":340,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202419,"byte_end":13202435,"line_start":341,"line_end":341,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202440,"byte_end":13202447,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202452,"byte_end":13202455,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ By using `boxed`, the types of the two different branches can be erased,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202460,"byte_end":13202536,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ so the assignment to the `filter` variable is valid (as both branches","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202541,"byte_end":13202614,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ have the type `Box<dyn Filter<S> + Send + Sync + 'static>`). The","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202619,"byte_end":13202687,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ following code *does* compile:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202692,"byte_end":13202726,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202731,"byte_end":13202734,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202739,"byte_end":13202746,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202751,"byte_end":13202780,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202785,"byte_end":13202837,"line_start":351,"line_end":351,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202842,"byte_end":13202861,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202866,"byte_end":13202872,"line_start":353,"line_end":353,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202877,"byte_end":13202880,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let enable_bar_target: bool = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202885,"byte_end":13202925,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/ # false;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202930,"byte_end":13202942,"line_start":356,"line_end":356,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202947,"byte_end":13202950,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let filter = if enable_bar_target {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202955,"byte_end":13202994,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13202999,"byte_end":13203057,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/         .or(filter_fn(|meta| meta.target().starts_with(\"bar\")))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203062,"byte_end":13203129,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203134,"byte_end":13203169,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/         // Boxing the filter erases its type, so both branches now","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203174,"byte_end":13203244,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/         // have the same type.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203249,"byte_end":13203283,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/         .boxed()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203288,"byte_end":13203308,"line_start":364,"line_end":364,"column_start":5,"column_end":25}},{"value":"/ } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203313,"byte_end":13203325,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203330,"byte_end":13203388,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203393,"byte_end":13203428,"line_start":367,"line_end":367,"column_start":5,"column_end":40}},{"value":"/         .boxed()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203433,"byte_end":13203453,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203458,"byte_end":13203464,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203469,"byte_end":13203472,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203477,"byte_end":13203511,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203516,"byte_end":13203583,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203588,"byte_end":13203604,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203609,"byte_end":13203616,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203621,"byte_end":13203624,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [Boxes]: std::boxed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203629,"byte_end":13203652,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ [`Box::new`]: std::boxed::Box::new","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203657,"byte_end":13203695,"line_start":377,"line_end":377,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205704,"byte_end":13205707,"line_start":451,"line_end":451,"column_start":12,"column_end":15},"name":"new","qualname":"<Filtered<L, F, S>>::new","value":"pub fn new(L, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`Layer`] so that it is filtered by the given\n [`Filter`].","sig":null,"attributes":[{"value":"/ Wraps the provided [`Layer`] so that it is filtered by the given","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205345,"byte_end":13205413,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ [`Filter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205418,"byte_end":13205433,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205438,"byte_end":13205441,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::with_filter`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205446,"byte_end":13205514,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205519,"byte_end":13205522,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205527,"byte_end":13205595,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205600,"byte_end":13205603,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205608,"byte_end":13205644,"line_start":449,"line_end":449,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205649,"byte_end":13205692,"line_start":450,"line_end":450,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206380,"byte_end":13206386,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"filter","qualname":"<Filtered<L, F, S>>::filter","value":"pub fn filter(&Self) -> &F","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Filter`](crate::layer::Filter) used by this layer.\n","sig":null,"attributes":[{"value":"/ Borrows the [`Filter`](crate::layer::Filter) used by this layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206300,"byte_end":13206368,"line_start":474,"line_end":474,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207507,"byte_end":13207517,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"filter_mut","qualname":"<Filtered<L, F, S>>::filter_mut","value":"pub fn filter_mut(&mut Self) -> &mut F","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the [`Filter`](crate::layer::Filter) used by this layer.","sig":null,"attributes":[{"value":"/ Mutably borrows the [`Filter`](crate::layer::Filter) used by this layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206434,"byte_end":13206510,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206515,"byte_end":13206518,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ When this layer can be mutably borrowed, this may be used to mutate the filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206523,"byte_end":13206606,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ Generally, this will primarily be used with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206611,"byte_end":13206662,"line_start":482,"line_end":482,"column_start":5,"column_end":56}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206667,"byte_end":13206736,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206741,"byte_end":13206744,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206749,"byte_end":13206763,"line_start":485,"line_end":485,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206768,"byte_end":13206771,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206776,"byte_end":13206783,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206788,"byte_end":13206812,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{filter,fmt,reload,Registry,prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206817,"byte_end":13206887,"line_start":489,"line_end":489,"column_start":5,"column_end":75}},{"value":"/ # fn main() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206892,"byte_end":13206909,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/ let filtered_layer = fmt::Layer::default().with_filter(filter::LevelFilter::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13206914,"byte_end":13207000,"line_start":491,"line_end":491,"column_start":5,"column_end":91}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207005,"byte_end":13207082,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207087,"byte_end":13207092,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207097,"byte_end":13207146,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<Registry>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207151,"byte_end":13207218,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ # filter::LevelFilter, Registry>,Registry>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207223,"byte_end":13207269,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/ # = &reload_handle;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207274,"byte_end":13207297,"line_start":497,"line_end":497,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207302,"byte_end":13207307,"line_start":498,"line_end":498,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207312,"byte_end":13207346,"line_start":499,"line_end":499,"column_start":5,"column_end":39}},{"value":"/ reload_handle.modify(|layer| *layer.filter_mut() = filter::LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207351,"byte_end":13207433,"line_start":500,"line_end":500,"column_start":5,"column_end":87}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207438,"byte_end":13207471,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207476,"byte_end":13207483,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207488,"byte_end":13207495,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207654,"byte_end":13207659,"line_start":509,"line_end":509,"column_start":12,"column_end":17},"name":"inner","qualname":"<Filtered<L, F, S>>::inner","value":"pub fn inner(&Self) -> &L","parent":null,"children":[],"decl_id":null,"docs":" Borrows the inner [`Layer`] wrapped by this `Filtered` layer.\n","sig":null,"attributes":[{"value":"/ Borrows the inner [`Layer`] wrapped by this `Filtered` layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207577,"byte_end":13207642,"line_start":508,"line_end":508,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208966,"byte_end":13208975,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Filtered<L, F, S>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut L","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the inner [`Layer`] wrapped by this `Filtered` layer.","sig":null,"attributes":[{"value":"/ Mutably borrows the inner [`Layer`] wrapped by this `Filtered` layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207706,"byte_end":13207779,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207784,"byte_end":13207787,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is primarily expected to be used with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207792,"byte_end":13207849,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207854,"byte_end":13207923,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207928,"byte_end":13207931,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207936,"byte_end":13207950,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207955,"byte_end":13207958,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207963,"byte_end":13207970,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13207975,"byte_end":13207999,"line_start":521,"line_end":521,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{filter,fmt,reload,Registry,prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208004,"byte_end":13208074,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ # fn non_blocking<T: std::io::Write>(writer: T) -> (fn() -> std::io::Stdout) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208079,"byte_end":13208161,"line_start":523,"line_end":523,"column_start":5,"column_end":87}},{"value":"/ #   std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208166,"byte_end":13208189,"line_start":524,"line_end":524,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208194,"byte_end":13208201,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208206,"byte_end":13208223,"line_start":526,"line_end":526,"column_start":5,"column_end":22}},{"value":"/ let filtered_layer = fmt::layer().with_writer(non_blocking(std::io::stderr())).with_filter(filter::LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208228,"byte_end":13208350,"line_start":527,"line_end":527,"column_start":5,"column_end":127}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208355,"byte_end":13208432,"line_start":528,"line_end":528,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208437,"byte_end":13208442,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208447,"byte_end":13208496,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<Registry, _, _, fn() -> std::io::Stdout>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208501,"byte_end":13208599,"line_start":531,"line_end":531,"column_start":5,"column_end":103}},{"value":"/ # filter::LevelFilter, Registry>, Registry>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208604,"byte_end":13208651,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ # = &reload_handle;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208656,"byte_end":13208679,"line_start":533,"line_end":533,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208684,"byte_end":13208689,"line_start":534,"line_end":534,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be logged to stderr\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208694,"byte_end":13208737,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ reload_handle.modify(|layer| *layer.inner_mut().writer_mut() = non_blocking(std::io::stdout()));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208742,"byte_end":13208842,"line_start":536,"line_end":536,"column_start":5,"column_end":105}},{"value":"/ info!(\"This will be logged to stdout\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208847,"byte_end":13208890,"line_start":537,"line_end":537,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208895,"byte_end":13208902,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208907,"byte_end":13208914,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208919,"byte_end":13208922,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [subscriber]: Subscribe","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13208927,"byte_end":13208954,"line_start":541,"line_end":541,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1221},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"targets","qualname":"::filter::targets","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1270},{"krate":0,"index":1284},{"krate":0,"index":1290},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1303},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":1466},{"krate":0,"index":1470},{"krate":0,"index":1325},{"krate":0,"index":1330}],"decl_id":null,"docs":" A [filter] that enables or disables spans and events based on their [target] and [level].","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ A [filter] that enables or disables spans and events based on their [target] and [level].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13243827,"byte_end":13243920,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13243921,"byte_end":13243924,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Targets`] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13243925,"byte_end":13243957,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13243958,"byte_end":13243961,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13243962,"byte_end":13244006,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244007,"byte_end":13244039,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/ [filter]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244040,"byte_end":13244088,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1448},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250105,"byte_end":13250112,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"Targets","qualname":"::filter::targets::Targets","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter that enables or disables spans and events based on their [target]\n and [level].","sig":null,"attributes":[{"value":"/ A filter that enables or disables spans and events based on their [target]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244428,"byte_end":13244506,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ and [level].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244507,"byte_end":13244523,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244524,"byte_end":13244527,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Targets are typically equal to the Rust module path of the code where the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244528,"byte_end":13244605,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ span or event was recorded, although they may be overridden.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244606,"byte_end":13244670,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244671,"byte_end":13244674,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244675,"byte_end":13244747,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244748,"byte_end":13244820,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244821,"byte_end":13244851,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244852,"byte_end":13244855,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244856,"byte_end":13244932,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244933,"byte_end":13244936,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Filtering With `Targets`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244937,"byte_end":13244967,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244968,"byte_end":13244971,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A `Targets` filter consists of one or more [target] prefixes, paired with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13244972,"byte_end":13245049,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ [`LevelFilter`]s. If a span or event's [target] begins with one of those","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245050,"byte_end":13245126,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ prefixes, and its [level] is at or below the [`LevelFilter`] enabled for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245127,"byte_end":13245203,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ that prefix, then the span or event will be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245204,"byte_end":13245260,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245261,"byte_end":13245264,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is similar to the behavior implemented by the [`env_logger` crate] in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245265,"byte_end":13245343,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ the `log` ecosystem.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245344,"byte_end":13245368,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245369,"byte_end":13245372,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`EnvFilter`] type also provided by this crate is very similar to `Targets`,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245373,"byte_end":13245457,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/ but is capable of a more sophisticated form of filtering where events may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245458,"byte_end":13245535,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ also be enabled or disabled based on the span they are recorded in.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245536,"byte_end":13245607,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/ `Targets` can be thought of as a lighter-weight form of [`EnvFilter`] that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245608,"byte_end":13245686,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ can be used instead when this dynamic filtering is not required.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245687,"byte_end":13245755,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245756,"byte_end":13245759,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245760,"byte_end":13245774,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245775,"byte_end":13245778,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A `Targets` filter can be constructed by programmatically adding targets and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245779,"byte_end":13245859,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ levels to enable:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245860,"byte_end":13245881,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245882,"byte_end":13245885,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245886,"byte_end":13245893,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245894,"byte_end":13245943,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245944,"byte_end":13245972,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245973,"byte_end":13245976,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13245977,"byte_end":13246016,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/     // Enable the `INFO` level for anything in `my_crate`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246017,"byte_end":13246078,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246079,"byte_end":13246124,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/     // Enable the `DEBUG` level for a specific module.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246125,"byte_end":13246183,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246184,"byte_end":13246251,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246252,"byte_end":13246255,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Build a new subscriber with the `fmt` layer using the `Targets`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246256,"byte_end":13246326,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ // filter we constructed above.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246327,"byte_end":13246362,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246363,"byte_end":13246397,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     .with(tracing_subscriber::fmt::layer())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246398,"byte_end":13246445,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     .with(filter)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246446,"byte_end":13246467,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246468,"byte_end":13246484,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246485,"byte_end":13246492,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246493,"byte_end":13246496,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246497,"byte_end":13246565,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246566,"byte_end":13246573,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246574,"byte_end":13246633,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246634,"byte_end":13246662,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246663,"byte_end":13246666,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let filter = Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246667,"byte_end":13246698,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246699,"byte_end":13246744,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246745,"byte_end":13246798,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     .with_target(\"my_crate::annoying_module\", LevelFilter::OFF);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246799,"byte_end":13246867,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246868,"byte_end":13246887,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246888,"byte_end":13246895,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246896,"byte_end":13246899,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, `Targets` implements [`std::str::FromStr`], allowing it to be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246900,"byte_end":13246980,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ parsed from a comma-delimited list of `target=level` pairs. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13246981,"byte_end":13247057,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247058,"byte_end":13247061,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247062,"byte_end":13247073,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247074,"byte_end":13247133,"line_start":92,"line_end":92,"column_start":1,"column_end":60}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247134,"byte_end":13247169,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247170,"byte_end":13247198,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247199,"byte_end":13247202,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let filter = \"my_crate=info,my_crate::interesting_module=trace,other_crate=debug\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247203,"byte_end":13247288,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/     .parse::<filter::Targets>()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247289,"byte_end":13247326,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247327,"byte_end":13247330,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // The parsed filter is identical to a filter constructed using `with_target`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247331,"byte_end":13247413,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247414,"byte_end":13247429,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/     filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247430,"byte_end":13247445,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"/     filter::Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247446,"byte_end":13247476,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/         .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247477,"byte_end":13247526,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/         .with_target(\"my_crate::interesting_module\", Level::TRACE)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247527,"byte_end":13247597,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/         .with_target(\"other_crate\", Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247598,"byte_end":13247651,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247652,"byte_end":13247658,"line_start":106,"line_end":106,"column_start":1,"column_end":7}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247659,"byte_end":13247673,"line_start":107,"line_end":107,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247674,"byte_end":13247681,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247682,"byte_end":13247685,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is particularly useful when the list of enabled targets is configurable","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247686,"byte_end":13247766,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ by the user at runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247767,"byte_end":13247794,"line_start":111,"line_end":111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247795,"byte_end":13247798,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The `Targets` filter can be used as a [per-layer filter][plf] *and* as a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247799,"byte_end":13247875,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ [global filter][global]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247876,"byte_end":13247904,"line_start":114,"line_end":114,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247905,"byte_end":13247908,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247909,"byte_end":13247920,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247921,"byte_end":13247950,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/     fmt,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247951,"byte_end":13247963,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/     filter::{Targets, LevelFilter},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13247964,"byte_end":13248003,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248004,"byte_end":13248023,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248024,"byte_end":13248030,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248031,"byte_end":13248059,"line_start":122,"line_end":122,"column_start":1,"column_end":29}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248060,"byte_end":13248095,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248096,"byte_end":13248155,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248156,"byte_end":13248159,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to stdout using the human-readable \"pretty\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248160,"byte_end":13248235,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ // format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248236,"byte_end":13248250,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ let stdout_log = fmt::layer().pretty();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248251,"byte_end":13248294,"line_start":128,"line_end":128,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248295,"byte_end":13248298,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to a file, using the JSON format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248299,"byte_end":13248364,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ let file = File::create(\"debug_log.json\")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248365,"byte_end":13248412,"line_start":131,"line_end":131,"column_start":1,"column_end":48}},{"value":"/ let debug_log = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248413,"byte_end":13248445,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/     .with_writer(Arc::new(file))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248446,"byte_end":13248482,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/     .json();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248483,"byte_end":13248499,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248500,"byte_end":13248503,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248504,"byte_end":13248538,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/     // Only log INFO and above to stdout, unless the span or event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248539,"byte_end":13248609,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/     // has the `my_crate::cool_module` target prefix.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248610,"byte_end":13248667,"line_start":138,"line_end":138,"column_start":1,"column_end":58}},{"value":"/     .with(stdout_log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248668,"byte_end":13248692,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/         .with_filter(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248693,"byte_end":13248718,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/             Targets::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248719,"byte_end":13248753,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/                 .with_target(\"my_crate::cool_module\", Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248754,"byte_end":13248825,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/                 .with_default(Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248826,"byte_end":13248872,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/        )","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248873,"byte_end":13248885,"line_start":144,"line_end":144,"column_start":1,"column_end":13}},{"value":"/     )","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248886,"byte_end":13248895,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/     // Log everything enabled by the global filter to `debug_log.json`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248896,"byte_end":13248971,"line_start":146,"line_end":146,"column_start":1,"column_end":76}},{"value":"/     .with(debug_log)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248972,"byte_end":13248996,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/     // Configure a global filter for the whole subscriber stack. This will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13248997,"byte_end":13249075,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/     // control what spans and events are recorded by both the `debug_log`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249076,"byte_end":13249153,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/     // and the `stdout_log` layers, and `stdout_log` will *additionally* be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249154,"byte_end":13249233,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/     // filtered by its per-layer filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249234,"byte_end":13249278,"line_start":151,"line_end":151,"column_start":1,"column_end":45}},{"value":"/     .with(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249279,"byte_end":13249293,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/         Targets::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249294,"byte_end":13249324,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"/             .with_target(\"my_crate\", Level::TRACE)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249325,"byte_end":13249379,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/             .with_target(\"other_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249380,"byte_end":13249436,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/             .with_target(\"other_crate::annoying_module\", LevelFilter::OFF)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249437,"byte_end":13249515,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/             .with_target(\"third_crate\", Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249516,"byte_end":13249573,"line_start":157,"line_end":157,"column_start":1,"column_end":58}},{"value":"/     ).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249574,"byte_end":13249591,"line_start":158,"line_end":158,"column_start":1,"column_end":18}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249592,"byte_end":13249606,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249607,"byte_end":13249613,"line_start":160,"line_end":160,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249614,"byte_end":13249617,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249618,"byte_end":13249662,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249663,"byte_end":13249695,"line_start":163,"line_end":163,"column_start":1,"column_end":33}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249696,"byte_end":13249732,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249733,"byte_end":13249767,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249768,"byte_end":13249811,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249812,"byte_end":13249855,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249856,"byte_end":13249907,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/ [`env_logger` crate]: https://docs.rs/env_logger/0.9.0/env_logger/index.html#enabling-logging","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13249908,"byte_end":13250005,"line_start":169,"line_end":169,"column_start":1,"column_end":98}},{"value":"/ [`EnvFilter`]: crate::filter::EnvFilter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250006,"byte_end":13250049,"line_start":170,"line_end":170,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250620,"byte_end":13250623,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Targets>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Targets` filter.","sig":null,"attributes":[{"value":"/ Returns a new `Targets` filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250165,"byte_end":13250200,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250205,"byte_end":13250208,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This filter will enable no targets. Call [`with_target`] or [`with_targets`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250213,"byte_end":13250293,"line_start":177,"line_end":177,"column_start":5,"column_end":85}},{"value":"/ to add enabled targets, and [`with_default`] to change the default level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250298,"byte_end":13250374,"line_start":178,"line_end":178,"column_start":5,"column_end":81}},{"value":"/ enabled for spans and events that didn't match any of the provided targets.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250379,"byte_end":13250458,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250463,"byte_end":13250466,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`with_target`]: Targets::with_target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250471,"byte_end":13250512,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ [`with_targets`]: Targets::with_targets","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250517,"byte_end":13250560,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ [`with_default`]: Targets::with_default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250565,"byte_end":13250608,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251799,"byte_end":13251810,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Targets>::with_target","value":"pub fn with_target<impl Into<String>: Into<String>,\n                   impl Into<LevelFilter>: Into<LevelFilter>>(Self,\n                                                              impl Into<String>,\n                                                              impl Into<LevelFilter>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables spans and events with [target]s starting with the provided target\n prefix if they are at or below the provided [`LevelFilter`].","sig":null,"attributes":[{"value":"/ Enables spans and events with [target]s starting with the provided target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250671,"byte_end":13250748,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ prefix if they are at or below the provided [`LevelFilter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250753,"byte_end":13250817,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250822,"byte_end":13250825,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250830,"byte_end":13250844,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250849,"byte_end":13250852,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250857,"byte_end":13250864,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250869,"byte_end":13250904,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250909,"byte_end":13250937,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250942,"byte_end":13250945,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250950,"byte_end":13250989,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/     // Enable the `INFO` level for anything in `my_crate`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250994,"byte_end":13251055,"line_start":198,"line_end":198,"column_start":5,"column_end":66}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251060,"byte_end":13251105,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/     // Enable the `DEBUG` level for a specific module.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251110,"byte_end":13251168,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251173,"byte_end":13251240,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251245,"byte_end":13251264,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251269,"byte_end":13251276,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251281,"byte_end":13251284,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251289,"byte_end":13251357,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251362,"byte_end":13251369,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251374,"byte_end":13251433,"line_start":207,"line_end":207,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251438,"byte_end":13251466,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251471,"byte_end":13251474,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251479,"byte_end":13251510,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251515,"byte_end":13251560,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251565,"byte_end":13251618,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/     .with_target(\"my_crate::interesting_module\", LevelFilter::OFF);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251623,"byte_end":13251694,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251699,"byte_end":13251718,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251723,"byte_end":13251730,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251735,"byte_end":13251738,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13251743,"byte_end":13251787,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253135,"byte_end":13253147,"line_start":257,"line_end":257,"column_start":12,"column_end":24},"name":"with_targets","qualname":"<Targets>::with_targets","value":"pub fn with_targets<T, L, impl IntoIterator<Item = (T, L)>: IntoIterator<Item\n                    = (T, L)>>(Self, impl IntoIterator<Item = (T, L)>) -> Self\nwhere String: From<T>, LevelFilter: From<L>","parent":null,"children":[],"decl_id":null,"docs":" Adds [target]s from an iterator of [target]-[`LevelFilter`] pairs to this filter.","sig":null,"attributes":[{"value":"/ Adds [target]s from an iterator of [target]-[`LevelFilter`] pairs to this filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252056,"byte_end":13252141,"line_start":226,"line_end":226,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252146,"byte_end":13252149,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252154,"byte_end":13252168,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252173,"byte_end":13252176,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252181,"byte_end":13252188,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252193,"byte_end":13252228,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252233,"byte_end":13252261,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252266,"byte_end":13252269,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252274,"byte_end":13252313,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     .with_targets(vec![","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252318,"byte_end":13252345,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         (\"my_crate\", Level::INFO),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252350,"byte_end":13252388,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/         (\"my_crate::some_module\", Level::DEBUG),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252393,"byte_end":13252445,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/         (\"my_crate::other_module::cool_stuff\", Level::TRACE),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252450,"byte_end":13252515,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/         (\"other_crate\", Level::WARN)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252520,"byte_end":13252560,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/     ]);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252565,"byte_end":13252576,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252581,"byte_end":13252600,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252605,"byte_end":13252612,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252617,"byte_end":13252620,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252625,"byte_end":13252693,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252698,"byte_end":13252705,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252710,"byte_end":13252769,"line_start":246,"line_end":246,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252774,"byte_end":13252802,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252807,"byte_end":13252810,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252815,"byte_end":13252846,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252851,"byte_end":13252896,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252901,"byte_end":13252954,"line_start":251,"line_end":251,"column_start":5,"column_end":58}},{"value":"/     .with_target(\"my_crate::interesting_module\", LevelFilter::OFF);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13252959,"byte_end":13253030,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253035,"byte_end":13253054,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253059,"byte_end":13253066,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253071,"byte_end":13253074,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253079,"byte_end":13253123,"line_start":256,"line_end":256,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253871,"byte_end":13253883,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"with_default","qualname":"<Targets>::with_default","value":"pub fn with_default<impl Into<LevelFilter>: Into<LevelFilter>>(Self,\n                                                               impl Into<LevelFilter>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the default level to enable for spans and events whose targets did\n not match any of the configured prefixes.","sig":null,"attributes":[{"value":"/ Sets the default level to enable for spans and events whose targets did","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253340,"byte_end":13253415,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ not match any of the configured prefixes.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253420,"byte_end":13253465,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253470,"byte_end":13253473,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ By default, this is [`LevelFilter::OFF`]. This means that spans and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253478,"byte_end":13253549,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ events will only be enabled if they match one of the configured target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253554,"byte_end":13253628,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ prefixes. If this is changed to a different [`LevelFilter`], spans and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253633,"byte_end":13253707,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ events with targets that did not match any of the configured prefixes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253712,"byte_end":13253785,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ will be enabled if their level is at or below the provided level.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13253790,"byte_end":13253859,"line_start":273,"line_end":273,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254833,"byte_end":13254837,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"iter","qualname":"<Targets>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [target]-[`LevelFilter`] pairs in this filter.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [target]-[`LevelFilter`] pairs in this filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254054,"byte_end":13254133,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254138,"byte_end":13254141,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The order of iteration is undefined.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254146,"byte_end":13254186,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254191,"byte_end":13254194,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254199,"byte_end":13254213,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254218,"byte_end":13254221,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254226,"byte_end":13254233,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254238,"byte_end":13254297,"line_start":287,"line_end":287,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254302,"byte_end":13254330,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254335,"byte_end":13254338,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254343,"byte_end":13254374,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254379,"byte_end":13254424,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254429,"byte_end":13254496,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254501,"byte_end":13254504,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mut targets: Vec<_> = filter.iter().collect();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254509,"byte_end":13254563,"line_start":294,"line_end":294,"column_start":5,"column_end":59}},{"value":"/ targets.sort();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254568,"byte_end":13254587,"line_start":295,"line_end":295,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254592,"byte_end":13254595,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(targets, vec![","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254600,"byte_end":13254629,"line_start":297,"line_end":297,"column_start":5,"column_end":34}},{"value":"/     (\"my_crate\", LevelFilter::INFO),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254634,"byte_end":13254674,"line_start":298,"line_end":298,"column_start":5,"column_end":45}},{"value":"/     (\"my_crate::interesting_module\", LevelFilter::DEBUG),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254679,"byte_end":13254740,"line_start":299,"line_end":299,"column_start":5,"column_end":66}},{"value":"/ ]);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254745,"byte_end":13254752,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254757,"byte_end":13254764,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254769,"byte_end":13254772,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13254777,"byte_end":13254821,"line_start":303,"line_end":303,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255995,"byte_end":13256007,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"would_enable","qualname":"<Targets>::would_enable","value":"pub fn would_enable(&Self, &str, &Level) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a [target]-[`Level`] pair would be enabled\n by this `Targets`.","sig":null,"attributes":[{"value":"/ Returns whether a [target]-[`Level`] pair would be enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255119,"byte_end":13255181,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/ by this `Targets`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255186,"byte_end":13255208,"line_start":318,"line_end":318,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255213,"byte_end":13255216,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This method can be used with [`module_path!`] from `std` as the target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255221,"byte_end":13255295,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ in order to emulate the behavior of the [`tracing::event!`] and [`tracing::span!`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255300,"byte_end":13255386,"line_start":321,"line_end":321,"column_start":5,"column_end":91}},{"value":"/ macros.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255391,"byte_end":13255402,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255407,"byte_end":13255410,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255415,"byte_end":13255429,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255434,"byte_end":13255437,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255442,"byte_end":13255449,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255454,"byte_end":13255513,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255518,"byte_end":13255546,"line_start":328,"line_end":328,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255551,"byte_end":13255554,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255559,"byte_end":13255590,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255595,"byte_end":13255640,"line_start":331,"line_end":331,"column_start":5,"column_end":50}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255645,"byte_end":13255712,"line_start":332,"line_end":332,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255717,"byte_end":13255720,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert!(filter.would_enable(\"my_crate\", &Level::INFO));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255725,"byte_end":13255784,"line_start":334,"line_end":334,"column_start":5,"column_end":64}},{"value":"/ assert!(!filter.would_enable(\"my_crate::interesting_module\", &Level::TRACE));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255789,"byte_end":13255870,"line_start":335,"line_end":335,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255875,"byte_end":13255882,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255887,"byte_end":13255890,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255895,"byte_end":13255939,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/ [`module_path!`]: std::module_path!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13255944,"byte_end":13255983,"line_start":339,"line_end":339,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258988,"byte_end":13258996,"line_start":457,"line_end":457,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::filter::targets::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owning iterator over the [target]-[level] pairs of a `Targets` filter.","sig":null,"attributes":[{"value":"/ An owning iterator over the [target]-[level] pairs of a `Targets` filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258312,"byte_end":13258389,"line_start":435,"line_end":435,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258390,"byte_end":13258393,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `IntoIterator` trait implementation of [`Targets`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258394,"byte_end":13258479,"line_start":437,"line_end":437,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258480,"byte_end":13258483,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258484,"byte_end":13258498,"line_start":439,"line_end":439,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258499,"byte_end":13258502,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ Merge the targets from one `Targets` with another:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258503,"byte_end":13258557,"line_start":441,"line_end":441,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258558,"byte_end":13258561,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258562,"byte_end":13258569,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::filter::Targets;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258570,"byte_end":13258614,"line_start":444,"line_end":444,"column_start":1,"column_end":45}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258615,"byte_end":13258643,"line_start":445,"line_end":445,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258644,"byte_end":13258647,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ let mut filter = Targets::new().with_target(\"my_crate\", Level::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258648,"byte_end":13258721,"line_start":447,"line_end":447,"column_start":1,"column_end":74}},{"value":"/ let overrides = Targets::new().with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258722,"byte_end":13258815,"line_start":448,"line_end":448,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258816,"byte_end":13258819,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ filter.extend(overrides);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258820,"byte_end":13258849,"line_start":450,"line_end":450,"column_start":1,"column_end":30}},{"value":"/ # drop(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258850,"byte_end":13258869,"line_start":451,"line_end":451,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258870,"byte_end":13258877,"line_start":452,"line_end":452,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258878,"byte_end":13258881,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258882,"byte_end":13258926,"line_start":454,"line_end":454,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13258927,"byte_end":13258959,"line_start":455,"line_end":455,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1466},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260067,"byte_end":13260071,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"Iter","qualname":"::filter::targets::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A borrowing iterator over the [target]-[level] pairs of a `Targets` filter.","sig":null,"attributes":[{"value":"/ A borrowing iterator over the [target]-[level] pairs of a `Targets` filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259721,"byte_end":13259800,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259801,"byte_end":13259804,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ This struct is created by [`iter`] method of [`Targets`], or from the `IntoIterator`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259805,"byte_end":13259893,"line_start":488,"line_end":488,"column_start":1,"column_end":89}},{"value":"/ implementation for `&Targets`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259894,"byte_end":13259928,"line_start":489,"line_end":489,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259929,"byte_end":13259932,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259933,"byte_end":13259977,"line_start":491,"line_end":491,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259978,"byte_end":13260010,"line_start":492,"line_end":492,"column_start":1,"column_end":33}},{"value":"/ [`iter`]: Targets::iter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260011,"byte_end":13260038,"line_start":493,"line_end":493,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13267242,"byte_end":13267252,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::filter::directive::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":1474}],"decl_id":null,"docs":" Indicates that a string could not be parsed as a filtering directive.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed as a filtering directive.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13267140,"byte_end":13267213,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":1520}],"decl_id":null,"docs":" The `tracing-subscriber` prelude.","sig":null,"attributes":[{"value":"/ The `tracing-subscriber` prelude.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58303,"byte_end":58340,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58341,"byte_end":58344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This brings into scope a number of extension traits that define methods on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58345,"byte_end":58423,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ types defined here and in other crates.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/prelude.rs","byte_start":58424,"byte_end":58467,"line_start":4,"line_end":4,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":1523},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1622},{"krate":0,"index":1787},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":407},{"krate":0,"index":413},{"krate":0,"index":1844},{"krate":0,"index":1850},{"krate":0,"index":1854},{"krate":0,"index":1860},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1882},{"krate":0,"index":1888},{"krate":0,"index":1894},{"krate":0,"index":421},{"krate":0,"index":426}],"decl_id":null,"docs":" Storage for span data shared by multiple [`Layer`]s.","sig":null,"attributes":[{"value":"/ Storage for span data shared by multiple [`Layer`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":58888,"byte_end":58944,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":58945,"byte_end":58948,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Using the Span Registry","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":58949,"byte_end":58979,"line_start":3,"line_end":3,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":58980,"byte_end":58983,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`Registry`] type, a [`Subscriber`] implementation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":58984,"byte_end":59063,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ which tracks per-span data and exposes it to [`Layer`]s. When a `Registry`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59064,"byte_end":59142,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ is used as the base `Subscriber` of a `Layer` stack, the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59143,"byte_end":59203,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ [`layer::Context`][ctx] type will provide methods allowing `Layer`s to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59204,"byte_end":59278,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ [look up span data][lookup] stored in the registry. While [`Registry`] is a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59279,"byte_end":59358,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reasonable default for storing spans and events, other stores that implement","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59359,"byte_end":59439,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ [`LookupSpan`] and [`Subscriber`] themselves (with [`SpanData`] implemented","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59440,"byte_end":59519,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ by the per-span data they store) can be used as a drop-in replacement.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59520,"byte_end":59594,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59595,"byte_end":59598,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ For example, we might create a `Registry` and add multiple `Layer`s like so:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59599,"byte_end":59679,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59680,"byte_end":59691,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{registry::Registry, Layer, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59692,"byte_end":59760,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59761,"byte_end":59796,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ # pub struct FooLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59797,"byte_end":59825,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # pub struct BarLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59826,"byte_end":59854,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ # impl<S: Subscriber> Layer<S> for FooLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59855,"byte_end":59905,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ # impl<S: Subscriber> Layer<S> for BarLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59906,"byte_end":59956,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # impl FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59957,"byte_end":59978,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":59979,"byte_end":60013,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60014,"byte_end":60021,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # impl BarLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60022,"byte_end":60043,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60044,"byte_end":60078,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60079,"byte_end":60086,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60087,"byte_end":60090,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60091,"byte_end":60131,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/     .with(FooLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60132,"byte_end":60162,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     .with(BarLayer::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60163,"byte_end":60194,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60195,"byte_end":60202,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60203,"byte_end":60206,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If a type implementing `Layer` depends on the functionality of a `Registry`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60207,"byte_end":60286,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ implementation, it should bound its `Subscriber` type parameter with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60287,"byte_end":60363,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`LookupSpan`] trait, like so:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60364,"byte_end":60398,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60399,"byte_end":60402,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60403,"byte_end":60414,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{registry, Layer};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60415,"byte_end":60461,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ use tracing_core::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60462,"byte_end":60495,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60496,"byte_end":60499,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60500,"byte_end":60524,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60525,"byte_end":60539,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60540,"byte_end":60545,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60546,"byte_end":60549,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for MyLayer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60550,"byte_end":60582,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60583,"byte_end":60592,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> registry::LookupSpan<'a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60593,"byte_end":60650,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60651,"byte_end":60656,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60657,"byte_end":60671,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60672,"byte_end":60677,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60678,"byte_end":60685,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ When this bound is added, the `Layer` implementation will be guaranteed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60686,"byte_end":60761,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ access to the [`Context`][ctx] methods, such as [`Context::span`][lookup], that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60762,"byte_end":60845,"line_start":54,"line_end":54,"column_start":1,"column_end":84}},{"value":"/ require the root subscriber to be a registry.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60846,"byte_end":60895,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60896,"byte_end":60899,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60900,"byte_end":60934,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60935,"byte_end":60979,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ [ctx]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":60980,"byte_end":61012,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ [lookup]: crate::layer::Context::span()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61013,"byte_end":61056,"line_start":60,"line_end":60,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281413,"byte_end":13281423,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::registry::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":1608}],"decl_id":null,"docs":" An immutable, read-only reference to a Span's extensions.\n","sig":null,"attributes":[{"value":"/ An immutable, read-only reference to a Span's extensions.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281276,"byte_end":13281337,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281736,"byte_end":13281739,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"get","qualname":"<Extensions>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows a type previously inserted into this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Immutably borrows a type previously inserted into this `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281652,"byte_end":13281724,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1612},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281938,"byte_end":13281951,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"ExtensionsMut","qualname":"::registry::extensions::ExtensionsMut","value":"ExtensionsMut {  }","parent":null,"children":[{"krate":0,"index":1614}],"decl_id":null,"docs":" An mutable reference to a Span's extensions.\n","sig":null,"attributes":[{"value":"/ An mutable reference to a Span's extensions.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281814,"byte_end":13281862,"line_start":55,"line_end":55,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283093,"byte_end":13283099,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"insert","qualname":"<ExtensionsMut>::insert","value":"pub fn insert<T: Send + Sync + 'static>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Insert a type into this `Extensions`.","sig":null,"attributes":[{"value":"/ Insert a type into this `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282185,"byte_end":13282226,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282231,"byte_end":13282234,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that extensions are _not_","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282239,"byte_end":13282273,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/ `Layer`-specific—they are _span_-specific. This means that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282278,"byte_end":13282342,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ other layers can access and mutate extensions that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282347,"byte_end":13282401,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/ a different Layer recorded. For example, an application might","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282406,"byte_end":13282471,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ have a layer that records execution timings, alongside a layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282476,"byte_end":13282542,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"/ that reports spans and events to a distributed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282547,"byte_end":13282597,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ tracing system that requires timestamps for spans.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282602,"byte_end":13282656,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/ Ideally, if one layer records a timestamp _x_, the other layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282661,"byte_end":13282727,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/ should be able to reuse timestamp _x_.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282732,"byte_end":13282774,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282779,"byte_end":13282782,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Therefore, extensions should generally be newtypes, rather than common","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282787,"byte_end":13282861,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ types like [`String`](std::string::String), to avoid accidental","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282866,"byte_end":13282933,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/ cross-`Layer` clobbering.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282938,"byte_end":13282967,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282972,"byte_end":13282975,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ## Panics","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282980,"byte_end":13282993,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282998,"byte_end":13283001,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If `T` is already present in `Extensions`, then this method will panic.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283006,"byte_end":13283081,"line_start":86,"line_end":86,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283337,"byte_end":13283344,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"replace","qualname":"<ExtensionsMut>::replace","value":"pub fn replace<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Replaces an existing `T` into this extensions.","sig":null,"attributes":[{"value":"/ Replaces an existing `T` into this extensions.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283203,"byte_end":13283253,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283258,"byte_end":13283261,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If `T` is not present, `Option::None` will be returned.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283266,"byte_end":13283325,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283541,"byte_end":13283548,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ExtensionsMut>::get_mut","value":"pub fn get_mut<T: 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this `ExtensionsMut`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this `ExtensionsMut`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283447,"byte_end":13283529,"line_start":98,"line_end":98,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283764,"byte_end":13283770,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"remove","qualname":"<ExtensionsMut>::remove","value":"pub fn remove<T: Send + Sync + 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a type from this `Extensions`.","sig":null,"attributes":[{"value":"/ Remove a type from this `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283637,"byte_end":13283678,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283683,"byte_end":13283686,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type existed, it will be returned.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13283691,"byte_end":13283752,"line_start":105,"line_end":105,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1809},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293273,"byte_end":13293281,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::sharded::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":" A shared, reusable store for spans.","sig":null,"attributes":[{"value":"/ A shared, reusable store for spans.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289399,"byte_end":13289438,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289439,"byte_end":13289442,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `Registry` is a [`Subscriber`] around which multiple [`Layer`]s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289443,"byte_end":13289512,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ implementing various behaviors may be [added]. Unlike other types","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289513,"byte_end":13289582,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ implementing `Subscriber`, `Registry` does not actually record traces itself:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289583,"byte_end":13289664,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ instead, it collects and stores span data that is exposed to any [`Layer`]s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289665,"byte_end":13289744,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ wrapping it through implementations of the [`LookupSpan`] trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289745,"byte_end":13289813,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ The `Registry` is responsible for storing span metadata, recording","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289814,"byte_end":13289884,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ relationships between spans, and tracking which spans are active and which","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289885,"byte_end":13289963,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ are closed. In addition, it provides a mechanism for [`Layer`]s to store","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13289964,"byte_end":13290040,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ user-defined per-span data, called [extensions], in the registry. This","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290041,"byte_end":13290115,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ allows [`Layer`]-specific data to benefit from the `Registry`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290116,"byte_end":13290183,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ high-performance concurrent storage.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290184,"byte_end":13290224,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290225,"byte_end":13290228,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This registry is implemented using a [lock-free sharded slab][slab], and is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290229,"byte_end":13290308,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ highly optimized for concurrent access.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290309,"byte_end":13290352,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290353,"byte_end":13290356,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Span ID Generation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290357,"byte_end":13290381,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290382,"byte_end":13290385,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Span IDs are not globally unique, but the registry ensures that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290386,"byte_end":13290453,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ no two currently active spans have the same ID within a process.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290454,"byte_end":13290522,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290523,"byte_end":13290526,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ One of the primary responsibilities of the registry is to generate [span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290527,"byte_end":13290603,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ IDs]. Therefore, it's important for other code that interacts with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290604,"byte_end":13290678,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ registry, such as [`Layer`]s, to understand the guarantees of the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290679,"byte_end":13290748,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ span IDs that are generated.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290749,"byte_end":13290781,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290782,"byte_end":13290785,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The registry's span IDs are guaranteed to be unique **at a given point","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290786,"byte_end":13290860,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ in time**. This means that an active span will never be assigned the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290861,"byte_end":13290933,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ same ID as another **currently active** span. However, the registry","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13290934,"byte_end":13291005,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ **will** eventually reuse the IDs of [closed] spans, although an ID","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291006,"byte_end":13291077,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ will never be reassigned immediately after a span has closed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291078,"byte_end":13291143,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291144,"byte_end":13291147,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Spans are not [considered closed] by the `Registry` until *every*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291148,"byte_end":13291217,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ [`Span`] reference with that ID has been dropped.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291218,"byte_end":13291271,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291272,"byte_end":13291275,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Thus: span IDs generated by the registry should be considered unique","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291276,"byte_end":13291348,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ only at a given point in time, and only relative to other spans","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291349,"byte_end":13291416,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ generated by the same process. Two spans with the same ID will not exist","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291417,"byte_end":13291493,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ in the same process concurrently. However, if historical span data is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291494,"byte_end":13291567,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ being stored, the same ID may occur for multiple spans times in that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291568,"byte_end":13291640,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ data. If spans must be uniquely identified in historical data, the user","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291641,"byte_end":13291716,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ code storing this data must assign its own unique identifiers to those","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291717,"byte_end":13291791,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ spans. A counter is generally sufficient for this.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291792,"byte_end":13291846,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291847,"byte_end":13291850,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Similarly, span IDs generated by the registry are not unique outside of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291851,"byte_end":13291926,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ a given process. Distributed tracing systems may require identifiers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13291927,"byte_end":13291999,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ that are unique across multiple processes on multiple machines (for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292000,"byte_end":13292071,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ example, [OpenTelemetry's `SpanId`s and `TraceId`s][ot]). `tracing` span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292072,"byte_end":13292148,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ IDs generated by the registry should **not** be used for this purpose.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292149,"byte_end":13292223,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ Instead, code which integrates with a distributed tracing system should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292224,"byte_end":13292299,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ generate and propagate its own IDs according to the rules specified by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292300,"byte_end":13292374,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ the distributed tracing system. These IDs can be associated with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292375,"byte_end":13292443,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"/ `tracing` spans using [fields] and/or [stored span data].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292444,"byte_end":13292505,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292506,"byte_end":13292509,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [span IDs]: tracing_core::span::Id","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292510,"byte_end":13292548,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ [slab]: sharded_slab","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292549,"byte_end":13292573,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292574,"byte_end":13292601,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/ [added]: crate::layer::Layer#composing-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292602,"byte_end":13292651,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/ [extensions]: super::Extensions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292652,"byte_end":13292687,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/ [closed]: https://docs.rs/tracing/latest/tracing/span/index.html#closing-spans","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292688,"byte_end":13292770,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ [considered closed]: tracing_core::subscriber::Subscriber::try_close()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292771,"byte_end":13292845,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/ [`Span`]: https://docs.rs/tracing/latest/tracing/span/struct.Span.html","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292846,"byte_end":13292920,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ [ot]: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#spancontext","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13292921,"byte_end":13293041,"line_start":86,"line_end":86,"column_start":1,"column_end":121}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293042,"byte_end":13293075,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ [stored span data]: crate::registry::SpanData::extensions_mut","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293076,"byte_end":13293141,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293142,"byte_end":13293170,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1815},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293914,"byte_end":13293918,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Data","qualname":"::registry::sharded::Data","value":"Data {  }","parent":null,"children":[{"krate":0,"index":1817}],"decl_id":null,"docs":" Span data stored in a [`Registry`].","sig":null,"attributes":[{"value":"/ Span data stored in a [`Registry`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293391,"byte_end":13293430,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293431,"byte_end":13293434,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The registry stores well-known data defined by tracing: span relationships,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293435,"byte_end":13293514,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ metadata and reference counts. Additional user-defined data provided by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293515,"byte_end":13293590,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ [`Layer`s], such as formatted fields, metrics, or distributed traces should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293591,"byte_end":13293670,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ be stored in the [extensions] typemap.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293671,"byte_end":13293713,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293714,"byte_end":13293717,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Layer`s]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293718,"byte_end":13293753,"line_start":105,"line_end":105,"column_start":1,"column_end":36}},{"value":"/ [extensions]: Extensions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293754,"byte_end":13293782,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13293783,"byte_end":13293811,"line_start":107,"line_end":107,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":407},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61868,"byte_end":61878,"line_start":92,"line_end":92,"column_start":11,"column_end":21},"name":"LookupSpan","qualname":"::registry::LookupSpan","value":"LookupSpan<'a>","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" Provides access to stored span data.","sig":null,"attributes":[{"value":"/ Provides access to stored span data.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61477,"byte_end":61517,"line_start":83,"line_end":83,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61518,"byte_end":61521,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Subscribers which store span data and associate it with span IDs should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61522,"byte_end":61597,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ implement this trait; if they do, any [`Layer`]s wrapping them can look up","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61598,"byte_end":61676,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ metadata via the [`Context`] type's [`span()`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61677,"byte_end":61735,"line_start":87,"line_end":87,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61736,"byte_end":61739,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61740,"byte_end":61774,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ [`Context`]: super::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61775,"byte_end":61813,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"/ [`span()`]: super::layer::Context::span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61814,"byte_end":61857,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":409},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61949,"byte_end":61953,"line_start":94,"line_end":94,"column_start":10,"column_end":14},"name":"Data","qualname":"::registry::LookupSpan::Data","value":"type Data: SpanData<'a>;","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The type of span data stored in this registry.\n","sig":null,"attributes":[{"value":"/ The type of span data stored in this registry.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61889,"byte_end":61939,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62524,"byte_end":62533,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"span_data","qualname":"::registry::LookupSpan::span_data","value":"pub fn span_data(&'a Self, &Id) -> Option<Self::Data>","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Returns the [`SpanData`] for a given `Id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns the [`SpanData`] for a given `Id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":61974,"byte_end":62034,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62039,"byte_end":62042,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62047,"byte_end":62112,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: users of the <code>LookupSpan</code> trait should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62117,"byte_end":62193,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ typically call the <a href=\"#method.span\"><code>span</code></a> method rather","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62198,"byte_end":62279,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/ than this method. The <code>span</code> method is implemented by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62284,"byte_end":62352,"line_start":101,"line_end":101,"column_start":5,"column_end":73}},{"value":"/ <em>calling</em> <code>span_data</code>, but returns a reference which is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62357,"byte_end":62434,"line_start":102,"line_end":102,"column_start":5,"column_end":82}},{"value":"/ capable of performing more sophisiticated queries.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62439,"byte_end":62493,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62498,"byte_end":62508,"line_start":104,"line_end":104,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62513,"byte_end":62516,"line_start":105,"line_end":105,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63086,"byte_end":63090,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"span","qualname":"::registry::LookupSpan::span","value":"pub fn span(&'a Self, &Id) -> Option<SpanRef<, Self>> where Self: Sized","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Returns a [`SpanRef`] for the span with the given `Id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns a [`SpanRef`] for the span with the given `Id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62581,"byte_end":62654,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62659,"byte_end":62662,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ A `SpanRef` is similar to [`SpanData`], but it allows performing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62667,"byte_end":62735,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ additional lookups against the registryr that stores the wrapped data.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62740,"byte_end":62814,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62819,"byte_end":62822,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ In general, _users_ of the `LookupSpan` trait should use this method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62827,"byte_end":62899,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ rather than the [`span_data`] method; while _implementors_ of this trait","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62904,"byte_end":62980,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ should only implement `span_data`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":62985,"byte_end":63023,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63028,"byte_end":63031,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`span_data`]: LookupSpan::span_data()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63036,"byte_end":63078,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64057,"byte_end":64072,"line_start":148,"line_end":148,"column_start":8,"column_end":23},"name":"register_filter","qualname":"::registry::LookupSpan::register_filter","value":"pub fn register_filter(&mut Self) -> FilterId","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Registers a [`Filter`] for [per-layer filtering] with this\n [`Subscriber`].","sig":null,"attributes":[{"value":"/ Registers a [`Filter`] for [per-layer filtering] with this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63386,"byte_end":63448,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63453,"byte_end":63472,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63477,"byte_end":63480,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`Filter`] can then use the returned [`FilterId`] to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63485,"byte_end":63545,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/ [check if it previously enabled a span][check].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63550,"byte_end":63601,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63606,"byte_end":63609,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63614,"byte_end":63626,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63631,"byte_end":63634,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If this `Subscriber` does not support [per-layer filtering].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63639,"byte_end":63703,"line_start":139,"line_end":139,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63708,"byte_end":63711,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63716,"byte_end":63752,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ [per-layer filtering]: crate::layer::Layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63757,"byte_end":63823,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63828,"byte_end":63872,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63877,"byte_end":63918,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/ [check]: SpanData::is_enabled_for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63923,"byte_end":63960,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":63965,"byte_end":63993,"line_start":146,"line_end":146,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":413},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64298,"byte_end":64306,"line_start":157,"line_end":157,"column_start":11,"column_end":19},"name":"SpanData","qualname":"::registry::SpanData","value":"SpanData<'a>","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" A stored representation of data associated with a span.\n","sig":null,"attributes":[{"value":"/ A stored representation of data associated with a span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64228,"byte_end":64287,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64352,"byte_end":64354,"line_start":159,"line_end":159,"column_start":8,"column_end":10},"name":"id","qualname":"::registry::SpanData::id","value":"pub fn id(&Self) -> Id","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns this span's ID.\n","sig":null,"attributes":[{"value":"/ Returns this span's ID.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64317,"byte_end":64344,"line_start":158,"line_end":158,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64431,"byte_end":64439,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"metadata","qualname":"::registry::SpanData::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to the span's `Metadata`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the span's `Metadata`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64374,"byte_end":64423,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64524,"byte_end":64530,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"parent","qualname":"::registry::SpanData::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to the ID\n","sig":null,"attributes":[{"value":"/ Returns a reference to the ID","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64483,"byte_end":64516,"line_start":164,"line_end":164,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64807,"byte_end":64817,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"extensions","qualname":"::registry::SpanData::extensions","value":"pub fn extensions(&Self) -> Extensions","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a reference to this span's `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64559,"byte_end":64611,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64616,"byte_end":64619,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64624,"byte_end":64691,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64696,"byte_end":64720,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64725,"byte_end":64748,"line_start":171,"line_end":171,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65105,"byte_end":65119,"line_start":181,"line_end":181,"column_start":8,"column_end":22},"name":"extensions_mut","qualname":"::registry::SpanData::extensions_mut","value":"pub fn extensions_mut(&Self) -> ExtensionsMut","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a mutable reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to this span's `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64849,"byte_end":64909,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64914,"byte_end":64917,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64922,"byte_end":64989,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":64994,"byte_end":65018,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65023,"byte_end":65046,"line_start":179,"line_end":179,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65695,"byte_end":65709,"line_start":195,"line_end":195,"column_start":8,"column_end":22},"name":"is_enabled_for","qualname":"::registry::SpanData::is_enabled_for","value":"pub fn is_enabled_for(&Self, FilterId) -> bool","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns `true` if this span is enabled for the [per-layer filter][plf]\n corresponding to the provided [`FilterId`].","sig":null,"attributes":[{"value":"/ Returns `true` if this span is enabled for the [per-layer filter][plf]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65154,"byte_end":65228,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ corresponding to the provided [`FilterId`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65233,"byte_end":65280,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65285,"byte_end":65288,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65293,"byte_end":65322,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65327,"byte_end":65330,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ By default, this method assumes that the [`LookupSpan`] implementation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65335,"byte_end":65409,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ does not support [per-layer filtering][plf], and always returns `true`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65414,"byte_end":65489,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65494,"byte_end":65497,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [plf]: crate::layer::Layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65502,"byte_end":65552,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65557,"byte_end":65598,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65603,"byte_end":65631,"line_start":193,"line_end":193,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1844},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66113,"byte_end":66120,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"SpanRef","qualname":"::registry::SpanRef","value":"SpanRef {  }","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"decl_id":null,"docs":" A reference to [span data] and the associated [registry].","sig":null,"attributes":[{"value":"/ A reference to [span data] and the associated [registry].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65791,"byte_end":65852,"line_start":201,"line_end":201,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65853,"byte_end":65856,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ This type implements all the same methods as [`SpanData`][span data], and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65857,"byte_end":65934,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ provides additional methods for querying the registry based on values from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":65935,"byte_end":66013,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66014,"byte_end":66027,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66028,"byte_end":66031,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [span data]: SpanData","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66032,"byte_end":66057,"line_start":207,"line_end":207,"column_start":1,"column_end":26}},{"value":"/ [registry]: LookupSpan","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66058,"byte_end":66084,"line_start":208,"line_end":208,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1854},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66403,"byte_end":66408,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"Scope","qualname":"::registry::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859}],"decl_id":null,"docs":" An iterator over the parents of a span, ordered from leaf to root.","sig":null,"attributes":[{"value":"/ An iterator over the parents of a span, ordered from leaf to root.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66245,"byte_end":66315,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66316,"byte_end":66319,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`SpanRef::scope`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66320,"byte_end":66374,"line_start":220,"line_end":220,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":66860,"byte_end":66873,"line_start":241,"line_end":241,"column_start":16,"column_end":29},"name":"ScopeFromRoot","qualname":"::registry::ScopeFromRoot","value":"ScopeFromRoot {  }","parent":null,"children":[{"krate":0,"index":1881}],"decl_id":null,"docs":" An iterator over the parents of a span, ordered from root to leaf.","sig":null,"attributes":[{"value":"cfg(any(feature = \"alloc\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":67973,"byte_end":67982,"line_start":269,"line_end":269,"column_start":16,"column_end":25},"name":"from_root","qualname":"<Scope>::from_root","value":"pub fn from_root(Self) -> ScopeFromRoot","parent":null,"children":[],"decl_id":null,"docs":" Flips the order of the iterator, so that it is ordered from root to leaf.","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":67918,"byte_end":67957,"line_start":268,"line_end":268,"column_start":9,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":69891,"byte_end":69893,"line_start":343,"line_end":343,"column_start":12,"column_end":14},"name":"id","qualname":"<SpanRef>::id","value":"pub fn id(&Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's ID.\n","sig":null,"attributes":[{"value":"/ Returns this span's ID.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":69852,"byte_end":69879,"line_start":342,"line_end":342,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70009,"byte_end":70017,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"metadata","qualname":"<SpanRef>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a static reference to the span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a static reference to the span's metadata.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":69943,"byte_end":69997,"line_start":347,"line_end":347,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70137,"byte_end":70141,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"name","qualname":"<SpanRef>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's name,\n","sig":null,"attributes":[{"value":"/ Returns the span's name,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70097,"byte_end":70125,"line_start":352,"line_end":352,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70323,"byte_end":70329,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"fields","qualname":"<SpanRef>::fields","value":"pub fn fields(&Self) -> &FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of [fields] defined by the span.","sig":null,"attributes":[{"value":"/ Returns a list of [fields] defined by the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70214,"byte_end":70265,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70270,"byte_end":70273,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70278,"byte_end":70311,"line_start":359,"line_end":359,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70529,"byte_end":70535,"line_start":366,"line_end":366,"column_start":12,"column_end":18},"name":"parent","qualname":"<SpanRef>::parent","value":"pub fn parent(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `SpanRef` describing this span's parent, or `None` if this\n span is the root of its trace tree.\n","sig":null,"attributes":[{"value":"/ Returns a `SpanRef` describing this span's parent, or `None` if this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70401,"byte_end":70473,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ span is the root of its trace tree.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":70478,"byte_end":70517,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74344,"byte_end":74349,"line_start":465,"line_end":465,"column_start":12,"column_end":17},"name":"scope","qualname":"<SpanRef>::scope","value":"pub fn scope(&Self) -> Scope","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all parents of this span, starting with this span,\n ordered from leaf to root.","sig":null,"attributes":[{"value":"/ Returns an iterator over all parents of this span, starting with this span,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71583,"byte_end":71662,"line_start":398,"line_end":398,"column_start":5,"column_end":84}},{"value":"/ ordered from leaf to root.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71667,"byte_end":71697,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71702,"byte_end":71705,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The iterator will first return the span, then the span's immediate parent,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71710,"byte_end":71788,"line_start":401,"line_end":401,"column_start":5,"column_end":83}},{"value":"/ followed by that span's parent, and so on, until it reaches a root span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71793,"byte_end":71869,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71874,"byte_end":71877,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71882,"byte_end":71893,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ use tracing::{span, Subscriber};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71898,"byte_end":71934,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71939,"byte_end":71968,"line_start":406,"line_end":406,"column_start":5,"column_end":34}},{"value":"/     layer::{Context, Layer},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":71973,"byte_end":72005,"line_start":407,"line_end":407,"column_start":5,"column_end":37}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72010,"byte_end":72029,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/     registry::LookupSpan,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72034,"byte_end":72063,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72068,"byte_end":72074,"line_start":410,"line_end":410,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72079,"byte_end":72082,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ struct PrintingLayer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72087,"byte_end":72112,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72117,"byte_end":72155,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72160,"byte_end":72169,"line_start":414,"line_end":414,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72174,"byte_end":72231,"line_start":415,"line_end":415,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72236,"byte_end":72241,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/     fn on_enter(&self, id: &span::Id, ctx: Context<S>) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72246,"byte_end":72306,"line_start":417,"line_end":417,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.span(id).unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72311,"byte_end":72356,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/         let scope = span.scope().map(|span| span.name()).collect::<Vec<_>>();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72361,"byte_end":72442,"line_start":419,"line_end":419,"column_start":5,"column_end":86}},{"value":"/         println!(\"Entering span: {:?}\", scope);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72447,"byte_end":72498,"line_start":420,"line_end":420,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72503,"byte_end":72512,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72517,"byte_end":72522,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72527,"byte_end":72530,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72535,"byte_end":72629,"line_start":424,"line_end":424,"column_start":5,"column_end":99}},{"value":"/     let _root = tracing::info_span!(\"root\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72634,"byte_end":72692,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72697,"byte_end":72739,"line_start":426,"line_end":426,"column_start":5,"column_end":47}},{"value":"/     let _child = tracing::info_span!(\"child\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72744,"byte_end":72804,"line_start":427,"line_end":427,"column_start":5,"column_end":65}},{"value":"/     // Prints: Entering span: [\"child\", \"root\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72809,"byte_end":72860,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/     let _leaf = tracing::info_span!(\"leaf\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72865,"byte_end":72923,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"leaf\", \"child\", \"root\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72928,"byte_end":72987,"line_start":430,"line_end":430,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":72992,"byte_end":72999,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73004,"byte_end":73011,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73016,"byte_end":73019,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ If the opposite order (from the root to this span) is desired, calling [`Scope::from_root`] on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73024,"byte_end":73122,"line_start":434,"line_end":434,"column_start":5,"column_end":103}},{"value":"/ the returned iterator reverses the order.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73127,"byte_end":73172,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73177,"byte_end":73180,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73185,"byte_end":73196,"line_start":437,"line_end":437,"column_start":5,"column_end":16}},{"value":"/ # use tracing::{span, Subscriber};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73201,"byte_end":73239,"line_start":438,"line_end":438,"column_start":5,"column_end":43}},{"value":"/ # use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73244,"byte_end":73275,"line_start":439,"line_end":439,"column_start":5,"column_end":36}},{"value":"/ #     layer::{Context, Layer},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73280,"byte_end":73314,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ #     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73319,"byte_end":73340,"line_start":441,"line_end":441,"column_start":5,"column_end":26}},{"value":"/ #     registry::LookupSpan,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73345,"byte_end":73376,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/ # };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73381,"byte_end":73389,"line_start":443,"line_end":443,"column_start":5,"column_end":13}},{"value":"/ # struct PrintingLayer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73394,"byte_end":73421,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73426,"byte_end":73464,"line_start":445,"line_end":445,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73469,"byte_end":73478,"line_start":446,"line_end":446,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73483,"byte_end":73540,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73545,"byte_end":73550,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/     fn on_enter(&self, id: &span::Id, ctx: Context<S>) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73555,"byte_end":73615,"line_start":449,"line_end":449,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.span(id).unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73620,"byte_end":73665,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/         let scope = span.scope().from_root().map(|span| span.name()).collect::<Vec<_>>();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73670,"byte_end":73763,"line_start":451,"line_end":451,"column_start":5,"column_end":98}},{"value":"/         println!(\"Entering span: {:?}\", scope);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73768,"byte_end":73819,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73824,"byte_end":73833,"line_start":453,"line_end":453,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73838,"byte_end":73843,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73848,"byte_end":73851,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73856,"byte_end":73950,"line_start":456,"line_end":456,"column_start":5,"column_end":99}},{"value":"/     let _root = tracing::info_span!(\"root\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":73955,"byte_end":74013,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74018,"byte_end":74060,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/     let _child = tracing::info_span!(\"child\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74065,"byte_end":74125,"line_start":459,"line_end":459,"column_start":5,"column_end":65}},{"value":"/     // Prints: Entering span: [\"root\", \"child\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74130,"byte_end":74181,"line_start":460,"line_end":460,"column_start":5,"column_end":56}},{"value":"/     let _leaf = tracing::info_span!(\"leaf\").entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74186,"byte_end":74244,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\", \"child\", \"leaf\"]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74249,"byte_end":74308,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74313,"byte_end":74320,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74325,"byte_end":74332,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74811,"byte_end":74821,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"extensions","qualname":"<SpanRef>::extensions","value":"pub fn extensions(&Self) -> Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a reference to this span's `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74559,"byte_end":74611,"line_start":475,"line_end":475,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74616,"byte_end":74619,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74624,"byte_end":74691,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74696,"byte_end":74720,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74725,"byte_end":74748,"line_start":479,"line_end":479,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":75151,"byte_end":75165,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<SpanRef>::extensions_mut","value":"pub fn extensions_mut(&Self) -> ExtensionsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to this span's `Extensions`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74891,"byte_end":74951,"line_start":485,"line_end":485,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74956,"byte_end":74959,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":74964,"byte_end":75031,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":75036,"byte_end":75060,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":75065,"byte_end":75088,"line_start":489,"line_end":489,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":440},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layer","qualname":"::layer","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":467},{"krate":0,"index":540},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":1932},{"krate":0,"index":696},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":699},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723}],"decl_id":null,"docs":" The [`Layer`] trait, a composable abstraction for building [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ The [`Layer`] trait, a composable abstraction for building [`Subscriber`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":78791,"byte_end":78870,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":78871,"byte_end":78874,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Subscriber`] trait in `tracing-core` represents the _complete_ set of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":78875,"byte_end":78954,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ functionality required to consume `tracing` instrumentation. This means that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":78955,"byte_end":79035,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ a single `Subscriber` instance is a self-contained implementation of a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79036,"byte_end":79110,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ complete strategy for collecting traces; but it _also_ means that the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79111,"byte_end":79184,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ `Subscriber` trait cannot easily be composed with other `Subscriber`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79185,"byte_end":79259,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79260,"byte_end":79263,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In particular, [`Subscriber`]s are responsible for generating [span IDs] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79264,"byte_end":79344,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ assigning them to spans. Since these IDs must uniquely identify a span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79345,"byte_end":79419,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ within the context of the current trace, this means that there may only be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79420,"byte_end":79498,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ a single `Subscriber` for a given thread at any point in time &mdash;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79499,"byte_end":79572,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ otherwise, there would be no authoritative source of span IDs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79573,"byte_end":79639,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79640,"byte_end":79643,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On the other hand, the majority of the [`Subscriber`] trait's functionality","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79644,"byte_end":79723,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ is composable: any number of subscribers may _observe_ events, span entry","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79724,"byte_end":79801,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ and exit, and so on, provided that there is a single authoritative source of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79802,"byte_end":79882,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ span IDs. The [`Layer`] trait represents this composable subset of the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79883,"byte_end":79957,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ [`Subscriber`] behavior; it can _observe_ events and spans, but does not","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":79958,"byte_end":80034,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assign IDs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80035,"byte_end":80050,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80051,"byte_end":80054,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Composing Layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80055,"byte_end":80077,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80078,"byte_end":80081,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Since a [`Layer`] does not implement a complete strategy for collecting","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80082,"byte_end":80157,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ traces, it must be composed with a `Subscriber` in order to be used. The","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80158,"byte_end":80234,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ [`Layer`] trait is generic over a type parameter (called `S` in the trait","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80235,"byte_end":80312,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ definition), representing the types of `Subscriber` they can be composed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80313,"byte_end":80389,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ with. Thus, a [`Layer`] may be implemented that will only compose with a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80390,"byte_end":80466,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ particular `Subscriber` implementation, or additional trait bounds may be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80467,"byte_end":80544,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ added to constrain what types implementing `Subscriber` a `Layer` can wrap.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80545,"byte_end":80624,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80625,"byte_end":80628,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Layer`s may be added to a `Subscriber` by using the [`SubscriberExt::with`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80629,"byte_end":80709,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ method, which is provided by `tracing-subscriber`'s [prelude]. This method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80710,"byte_end":80788,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ returns a [`Layered`] struct that implements `Subscriber` by composing the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80789,"byte_end":80867,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ `Layer` with the `Subscriber`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80868,"byte_end":80902,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80903,"byte_end":80906,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80907,"byte_end":80923,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80924,"byte_end":80935,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::Layer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80936,"byte_end":80970,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":80971,"byte_end":81010,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ use tracing::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81011,"byte_end":81039,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81040,"byte_end":81043,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81044,"byte_end":81068,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81069,"byte_end":81083,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81084,"byte_end":81089,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81090,"byte_end":81093,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81094,"byte_end":81140,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81141,"byte_end":81155,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81156,"byte_end":81161,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81162,"byte_end":81165,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81166,"byte_end":81195,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81196,"byte_end":81210,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81211,"byte_end":81216,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81217,"byte_end":81220,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81221,"byte_end":81295,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ impl Subscriber for MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81296,"byte_end":81334,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81335,"byte_end":81349,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81350,"byte_end":81418,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81419,"byte_end":81466,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81467,"byte_end":81504,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81505,"byte_end":81561,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81562,"byte_end":81619,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81620,"byte_end":81654,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81655,"byte_end":81688,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81689,"byte_end":81694,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81695,"byte_end":81715,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81716,"byte_end":81750,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81751,"byte_end":81758,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # impl MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81759,"byte_end":81784,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81785,"byte_end":81819,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81820,"byte_end":81827,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81828,"byte_end":81831,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let subscriber = MySubscriber::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81832,"byte_end":81872,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/     .with(MyLayer::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81873,"byte_end":81903,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81904,"byte_end":81907,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81908,"byte_end":81964,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81965,"byte_end":81972,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81973,"byte_end":81976,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Multiple `Layer`s may be composed in the same manner:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":81977,"byte_end":82034,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82035,"byte_end":82046,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use tracing_subscriber::{Layer, layer::SubscriberExt};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82047,"byte_end":82107,"line_start":81,"line_end":81,"column_start":1,"column_end":61}},{"value":"/ # use tracing::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82108,"byte_end":82138,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ pub struct MyOtherLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82139,"byte_end":82168,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82169,"byte_end":82183,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82184,"byte_end":82189,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82190,"byte_end":82193,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyOtherLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82194,"byte_end":82245,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82246,"byte_end":82260,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82261,"byte_end":82266,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82267,"byte_end":82270,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ pub struct MyThirdLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82271,"byte_end":82300,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82301,"byte_end":82315,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82316,"byte_end":82321,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82322,"byte_end":82325,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyThirdLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82326,"byte_end":82377,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82378,"byte_end":82392,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82393,"byte_end":82398,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ # pub struct MyLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82399,"byte_end":82426,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ # impl<S: Subscriber> Layer<S> for MyLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82427,"byte_end":82476,"line_start":99,"line_end":99,"column_start":1,"column_end":50}},{"value":"/ # pub struct MySubscriber { }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82477,"byte_end":82510,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82511,"byte_end":82585,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ # impl Subscriber for MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82586,"byte_end":82626,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82627,"byte_end":82695,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82696,"byte_end":82743,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82744,"byte_end":82781,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82782,"byte_end":82838,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82839,"byte_end":82896,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82897,"byte_end":82931,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82932,"byte_end":82965,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82966,"byte_end":82971,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82972,"byte_end":82992,"line_start":111,"line_end":111,"column_start":1,"column_end":21}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":82993,"byte_end":83027,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83028,"byte_end":83035,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ # impl MyOtherLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83036,"byte_end":83061,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83062,"byte_end":83096,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83097,"byte_end":83104,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/ # impl MyThirdLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83105,"byte_end":83130,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83131,"byte_end":83165,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83166,"byte_end":83173,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ # impl MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83174,"byte_end":83199,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83200,"byte_end":83234,"line_start":121,"line_end":121,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83235,"byte_end":83242,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83243,"byte_end":83246,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let subscriber = MySubscriber::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83247,"byte_end":83287,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/     .with(MyLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83288,"byte_end":83317,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/     .with(MyOtherLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83318,"byte_end":83352,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/     .with(MyThirdLayer::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83353,"byte_end":83388,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83389,"byte_end":83392,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83393,"byte_end":83449,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83450,"byte_end":83457,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83458,"byte_end":83461,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The [`Layer::with_subscriber`] constructs the [`Layered`] type from a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83462,"byte_end":83535,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ [`Layer`] and [`Subscriber`], and is called by [`SubscriberExt::with`]. In","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83536,"byte_end":83614,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ general, it is more idiomatic to use [`SubscriberExt::with`], and treat","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83615,"byte_end":83690,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ [`Layer::with_subscriber`] as an implementation detail, as `with_subscriber`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83691,"byte_end":83771,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ calls must be nested, leading to less clear code for the reader.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83772,"byte_end":83840,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83841,"byte_end":83844,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configuration With `Layer`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83845,"byte_end":83887,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83888,"byte_end":83891,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ In some cases, a particular [`Layer`] may be enabled or disabled based on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83892,"byte_end":83969,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ runtime configuration. This can introduce challenges, because the type of a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":83970,"byte_end":84049,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ layered [`Subscriber`] depends on which layers are added to it: if an `if`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84050,"byte_end":84128,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ or `match` expression adds some [`Layer`] implementation in one branch,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84129,"byte_end":84204,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"/ and other layers in another, the [`Subscriber`] values returned by those","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84205,"byte_end":84281,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ branches will have different types. For example, the following _will not_","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84282,"byte_end":84359,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ work:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84360,"byte_end":84369,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84370,"byte_end":84373,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84374,"byte_end":84393,"line_start":148,"line_end":148,"column_start":1,"column_end":20}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84394,"byte_end":84463,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/ # struct Config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84464,"byte_end":84485,"line_start":150,"line_end":150,"column_start":1,"column_end":22}},{"value":"/ #    is_prod: bool,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84486,"byte_end":84509,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ #    path: &'static str,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84510,"byte_end":84538,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84539,"byte_end":84546,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # let cfg = Config { is_prod: false, path: \"debug.log\" };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84547,"byte_end":84608,"line_start":154,"line_end":154,"column_start":1,"column_end":62}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84609,"byte_end":84631,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ use tracing_subscriber::{Registry, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84632,"byte_end":84683,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84684,"byte_end":84687,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer().pretty();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84688,"byte_end":84751,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/ let subscriber = Registry::default().with(stdout_log);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84752,"byte_end":84810,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84811,"byte_end":84814,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ // The compile error will occur here because the if and else","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84815,"byte_end":84879,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/ // branches have different (and therefore incompatible) types.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84880,"byte_end":84946,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ let subscriber = if cfg.is_prod {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84947,"byte_end":84984,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/     let file = File::create(cfg.path)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":84985,"byte_end":85028,"line_start":164,"line_end":164,"column_start":1,"column_end":44}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85029,"byte_end":85081,"line_start":165,"line_end":165,"column_start":1,"column_end":53}},{"value":"/         .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85082,"byte_end":85101,"line_start":166,"line_end":166,"column_start":1,"column_end":20}},{"value":"/         .with_writer(Arc::new(file));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85102,"byte_end":85143,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     layer.with(subscriber)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85144,"byte_end":85174,"line_start":168,"line_end":168,"column_start":1,"column_end":31}},{"value":"/ } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85175,"byte_end":85187,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/     layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85188,"byte_end":85201,"line_start":170,"line_end":170,"column_start":1,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85202,"byte_end":85208,"line_start":171,"line_end":171,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85209,"byte_end":85212,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85213,"byte_end":85268,"line_start":173,"line_end":173,"column_start":1,"column_end":56}},{"value":"/     .expect(\"Unable to set global subscriber\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85269,"byte_end":85320,"line_start":174,"line_end":174,"column_start":1,"column_end":52}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85321,"byte_end":85335,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85336,"byte_end":85343,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85344,"byte_end":85347,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ However, a [`Layer`] wrapped in an [`Option`] [also implements the `Layer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85348,"byte_end":85426,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"/ trait][option-impl]. This allows individual layers to be enabled or disabled at","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85427,"byte_end":85510,"line_start":179,"line_end":179,"column_start":1,"column_end":84}},{"value":"/ runtime while always producing a [`Subscriber`] of the same type. For","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85511,"byte_end":85584,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85585,"byte_end":85597,"line_start":181,"line_end":181,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85598,"byte_end":85601,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85602,"byte_end":85609,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85610,"byte_end":85679,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/ # struct Config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85680,"byte_end":85701,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/ #    is_prod: bool,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85702,"byte_end":85725,"line_start":186,"line_end":186,"column_start":1,"column_end":24}},{"value":"/ #    path: &'static str,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85726,"byte_end":85754,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85755,"byte_end":85762,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # let cfg = Config { is_prod: false, path: \"debug.log\" };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85763,"byte_end":85824,"line_start":189,"line_end":189,"column_start":1,"column_end":62}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85825,"byte_end":85847,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ use tracing_subscriber::{Registry, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85848,"byte_end":85899,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85900,"byte_end":85903,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer().pretty();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85904,"byte_end":85967,"line_start":193,"line_end":193,"column_start":1,"column_end":64}},{"value":"/ let subscriber = Registry::default().with(stdout_log);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":85968,"byte_end":86026,"line_start":194,"line_end":194,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86027,"byte_end":86030,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ // if `cfg.is_prod` is true, also log JSON-formatted logs to a file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86031,"byte_end":86103,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/ let json_log = if cfg.is_prod {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86104,"byte_end":86139,"line_start":197,"line_end":197,"column_start":1,"column_end":36}},{"value":"/     let file = File::create(cfg.path)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86140,"byte_end":86183,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/     let json_log = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86184,"byte_end":86239,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/         .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86240,"byte_end":86259,"line_start":200,"line_end":200,"column_start":1,"column_end":20}},{"value":"/         .with_writer(file);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86260,"byte_end":86291,"line_start":201,"line_end":201,"column_start":1,"column_end":32}},{"value":"/     Some(json_log)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86292,"byte_end":86314,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/ } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86315,"byte_end":86327,"line_start":203,"line_end":203,"column_start":1,"column_end":13}},{"value":"/     None","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86328,"byte_end":86340,"line_start":204,"line_end":204,"column_start":1,"column_end":13}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86341,"byte_end":86347,"line_start":205,"line_end":205,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86348,"byte_end":86351,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ // If `cfg.is_prod` is false, then `json` will be `None`, and this layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86352,"byte_end":86428,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ // will do nothing. However, the subscriber will still have the same type","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86429,"byte_end":86506,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"/ // regardless of whether the `Option`'s value is `None` or `Some`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86507,"byte_end":86577,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"/ let subscriber = subscriber.with(json_log);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86578,"byte_end":86625,"line_start":210,"line_end":210,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86626,"byte_end":86629,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86630,"byte_end":86685,"line_start":212,"line_end":212,"column_start":1,"column_end":56}},{"value":"/    .expect(\"Unable to set global subscriber\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86686,"byte_end":86736,"line_start":213,"line_end":213,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86737,"byte_end":86751,"line_start":214,"line_end":214,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86752,"byte_end":86759,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86760,"byte_end":86763,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ If a [`Layer`] may be one of several different types, note that [`Box<dyn","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86764,"byte_end":86841,"line_start":217,"line_end":217,"column_start":1,"column_end":78}},{"value":"/ Layer<S> + Send + Sync>` implements `Layer`][box-impl].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86842,"byte_end":86901,"line_start":218,"line_end":218,"column_start":1,"column_end":60}},{"value":"/ This may be used to erase the type of a [`Layer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86902,"byte_end":86956,"line_start":219,"line_end":219,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86957,"byte_end":86960,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ For example, a function that configures a [`Layer`] to log to one of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":86961,"byte_end":87033,"line_start":221,"line_end":221,"column_start":1,"column_end":73}},{"value":"/ several outputs might return a `Box<dyn Layer<S> + Send + Sync + 'static>`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87034,"byte_end":87113,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87114,"byte_end":87121,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87122,"byte_end":87151,"line_start":224,"line_end":224,"column_start":1,"column_end":30}},{"value":"/     Layer,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87152,"byte_end":87166,"line_start":225,"line_end":225,"column_start":1,"column_end":15}},{"value":"/     registry::LookupSpan,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87167,"byte_end":87196,"line_start":226,"line_end":226,"column_start":1,"column_end":30}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87197,"byte_end":87216,"line_start":227,"line_end":227,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87217,"byte_end":87223,"line_start":228,"line_end":228,"column_start":1,"column_end":7}},{"value":"/ use std::{path::PathBuf, fs::File, io};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87224,"byte_end":87267,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87268,"byte_end":87271,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ /// Configures whether logs are emitted to a file, to stdout, or to stderr.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87272,"byte_end":87351,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"/ pub enum LogConfig {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87352,"byte_end":87376,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/     File(PathBuf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87377,"byte_end":87399,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/     Stdout,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87400,"byte_end":87415,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/     Stderr,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87416,"byte_end":87431,"line_start":235,"line_end":235,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87432,"byte_end":87437,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87438,"byte_end":87441,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ impl LogConfig {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87442,"byte_end":87462,"line_start":238,"line_end":238,"column_start":1,"column_end":21}},{"value":"/     pub fn layer<S>(self) -> Box<dyn Layer<S> + Send + Sync + 'static>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87463,"byte_end":87537,"line_start":239,"line_end":239,"column_start":1,"column_end":75}},{"value":"/     where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87538,"byte_end":87551,"line_start":240,"line_end":240,"column_start":1,"column_end":14}},{"value":"/         S: tracing_core::Subscriber,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87552,"byte_end":87592,"line_start":241,"line_end":241,"column_start":1,"column_end":41}},{"value":"/         for<'a> S: LookupSpan<'a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87593,"byte_end":87631,"line_start":242,"line_end":242,"column_start":1,"column_end":39}},{"value":"/     {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87632,"byte_end":87641,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/         // Shared configuration regardless of where logs are output to.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87642,"byte_end":87717,"line_start":244,"line_end":244,"column_start":1,"column_end":76}},{"value":"/         let fmt = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87718,"byte_end":87772,"line_start":245,"line_end":245,"column_start":1,"column_end":55}},{"value":"/             .with_target(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87773,"byte_end":87807,"line_start":246,"line_end":246,"column_start":1,"column_end":35}},{"value":"/             .with_thread_names(true);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87808,"byte_end":87849,"line_start":247,"line_end":247,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87850,"byte_end":87853,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/         // Configure the writer based on the desired log target:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87854,"byte_end":87922,"line_start":249,"line_end":249,"column_start":1,"column_end":69}},{"value":"/         match self {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87923,"byte_end":87947,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/             LogConfig::File(path) => {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87948,"byte_end":87990,"line_start":251,"line_end":251,"column_start":1,"column_end":43}},{"value":"/                 let file = File::create(path).expect(\"failed to create log file\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":87991,"byte_end":88077,"line_start":252,"line_end":252,"column_start":1,"column_end":87}},{"value":"/                 Box::new(fmt.with_writer(file))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88078,"byte_end":88129,"line_start":253,"line_end":253,"column_start":1,"column_end":52}},{"value":"/             },","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88130,"byte_end":88148,"line_start":254,"line_end":254,"column_start":1,"column_end":19}},{"value":"/             LogConfig::Stdout => Box::new(fmt.with_writer(io::stdout)),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88149,"byte_end":88224,"line_start":255,"line_end":255,"column_start":1,"column_end":76}},{"value":"/             LogConfig::Stderr => Box::new(fmt.with_writer(io::stderr)),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88225,"byte_end":88300,"line_start":256,"line_end":256,"column_start":1,"column_end":76}},{"value":"/         }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88301,"byte_end":88314,"line_start":257,"line_end":257,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88315,"byte_end":88324,"line_start":258,"line_end":258,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88325,"byte_end":88330,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88331,"byte_end":88334,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ let config = LogConfig::Stdout;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88335,"byte_end":88370,"line_start":261,"line_end":261,"column_start":1,"column_end":36}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88371,"byte_end":88405,"line_start":262,"line_end":262,"column_start":1,"column_end":35}},{"value":"/     .with(config.layer())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88406,"byte_end":88435,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88436,"byte_end":88452,"line_start":264,"line_end":264,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88453,"byte_end":88460,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88461,"byte_end":88464,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The [`Layer::boxed`] method is provided to make boxing a `Layer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88465,"byte_end":88533,"line_start":267,"line_end":267,"column_start":1,"column_end":69}},{"value":"/ more convenient, but [`Box::new`] may be used as well.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88534,"byte_end":88592,"line_start":268,"line_end":268,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88593,"byte_end":88596,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ When the number of `Layer`s varies at runtime, note that a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88597,"byte_end":88659,"line_start":270,"line_end":270,"column_start":1,"column_end":63}},{"value":"/ [`Vec<L> where L: Layer` also implements `Layer`][vec-impl]. This","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88660,"byte_end":88729,"line_start":271,"line_end":271,"column_start":1,"column_end":70}},{"value":"/ can be used to add a variable number of `Layer`s to a `Subscriber`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88730,"byte_end":88801,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88802,"byte_end":88805,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88806,"byte_end":88813,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{Layer, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88814,"byte_end":88862,"line_start":275,"line_end":275,"column_start":1,"column_end":49}},{"value":"/ struct MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88863,"byte_end":88883,"line_start":276,"line_end":276,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88884,"byte_end":88898,"line_start":277,"line_end":277,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88899,"byte_end":88904,"line_start":278,"line_end":278,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer { fn new() -> Self { Self {} }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88905,"byte_end":88955,"line_start":279,"line_end":279,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88956,"byte_end":88959,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ impl<S: tracing_core::Subscriber> Layer<S> for MyLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":88960,"byte_end":89020,"line_start":281,"line_end":281,"column_start":1,"column_end":61}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89021,"byte_end":89035,"line_start":282,"line_end":282,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89036,"byte_end":89041,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89042,"byte_end":89045,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ /// Returns how many layers we need","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89046,"byte_end":89085,"line_start":285,"line_end":285,"column_start":1,"column_end":40}},{"value":"/ fn how_many_layers() -> usize {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89086,"byte_end":89121,"line_start":286,"line_end":286,"column_start":1,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89122,"byte_end":89136,"line_start":287,"line_end":287,"column_start":1,"column_end":15}},{"value":"/     # 3","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89137,"byte_end":89148,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89149,"byte_end":89154,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89155,"byte_end":89158,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ // Create a variable-length `Vec` of layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89159,"byte_end":89206,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/ let mut layers = Vec::new();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89207,"byte_end":89239,"line_start":292,"line_end":292,"column_start":1,"column_end":33}},{"value":"/ for _ in 0..how_many_layers() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89240,"byte_end":89275,"line_start":293,"line_end":293,"column_start":1,"column_end":36}},{"value":"/     layers.push(MyLayer::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89276,"byte_end":89312,"line_start":294,"line_end":294,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89313,"byte_end":89318,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89319,"byte_end":89322,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89323,"byte_end":89357,"line_start":297,"line_end":297,"column_start":1,"column_end":35}},{"value":"/     .with(layers)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89358,"byte_end":89379,"line_start":298,"line_end":298,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89380,"byte_end":89396,"line_start":299,"line_end":299,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89397,"byte_end":89404,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89405,"byte_end":89408,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ If a variable number of `Layer` is needed and those `Layer`s have","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89409,"byte_end":89478,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ different types, a `Vec` of [boxed `Layer` trait objects][box-impl] may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89479,"byte_end":89554,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ be used. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89555,"byte_end":89580,"line_start":304,"line_end":304,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89581,"byte_end":89584,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89585,"byte_end":89592,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::LevelFilter, Layer, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89593,"byte_end":89662,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89663,"byte_end":89685,"line_start":308,"line_end":308,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89686,"byte_end":89745,"line_start":309,"line_end":309,"column_start":1,"column_end":60}},{"value":"/ struct Config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89746,"byte_end":89765,"line_start":310,"line_end":310,"column_start":1,"column_end":20}},{"value":"/     enable_log_file: bool,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89766,"byte_end":89796,"line_start":311,"line_end":311,"column_start":1,"column_end":31}},{"value":"/     enable_stdout: bool,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89797,"byte_end":89825,"line_start":312,"line_end":312,"column_start":1,"column_end":29}},{"value":"/     enable_stderr: bool,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89826,"byte_end":89854,"line_start":313,"line_end":313,"column_start":1,"column_end":29}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89855,"byte_end":89869,"line_start":314,"line_end":314,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89870,"byte_end":89875,"line_start":315,"line_end":315,"column_start":1,"column_end":6}},{"value":"/ # impl Config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89876,"byte_end":89895,"line_start":316,"line_end":316,"column_start":1,"column_end":20}},{"value":"/ #    fn from_config_file()-> Result<Self, Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89896,"byte_end":89971,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/ #         // don't enable the log file so that the example doesn't actually create it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":89972,"byte_end":90061,"line_start":318,"line_end":318,"column_start":1,"column_end":90}},{"value":"/ #         Ok(Self { enable_log_file: false, enable_stdout: true, enable_stderr: true })","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90062,"byte_end":90153,"line_start":319,"line_end":319,"column_start":1,"column_end":92}},{"value":"/ #    }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90154,"byte_end":90164,"line_start":320,"line_end":320,"column_start":1,"column_end":11}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90165,"byte_end":90172,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90173,"byte_end":90176,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ let cfg = Config::from_config_file()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90177,"byte_end":90219,"line_start":323,"line_end":323,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90220,"byte_end":90223,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ // Based on our dynamically loaded config file, create any number of layers:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90224,"byte_end":90304,"line_start":325,"line_end":325,"column_start":1,"column_end":81}},{"value":"/ let mut layers = Vec::new();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90305,"byte_end":90337,"line_start":326,"line_end":326,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90338,"byte_end":90341,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_log_file {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90342,"byte_end":90370,"line_start":328,"line_end":328,"column_start":1,"column_end":29}},{"value":"/     let file = File::create(\"myapp.log\")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90371,"byte_end":90417,"line_start":329,"line_end":329,"column_start":1,"column_end":47}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90418,"byte_end":90470,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/         .with_thread_names(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90471,"byte_end":90507,"line_start":331,"line_end":331,"column_start":1,"column_end":37}},{"value":"/         .with_target(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90508,"byte_end":90538,"line_start":332,"line_end":332,"column_start":1,"column_end":31}},{"value":"/         .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90539,"byte_end":90558,"line_start":333,"line_end":333,"column_start":1,"column_end":20}},{"value":"/         .with_writer(file)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90559,"byte_end":90589,"line_start":334,"line_end":334,"column_start":1,"column_end":31}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90590,"byte_end":90664,"line_start":335,"line_end":335,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90665,"byte_end":90703,"line_start":336,"line_end":336,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90704,"byte_end":90725,"line_start":337,"line_end":337,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90726,"byte_end":90753,"line_start":338,"line_end":338,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90754,"byte_end":90759,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90760,"byte_end":90763,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_stdout {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90764,"byte_end":90790,"line_start":341,"line_end":341,"column_start":1,"column_end":27}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90791,"byte_end":90843,"line_start":342,"line_end":342,"column_start":1,"column_end":53}},{"value":"/         .pretty()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90844,"byte_end":90865,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"/         .with_filter(LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90866,"byte_end":90909,"line_start":344,"line_end":344,"column_start":1,"column_end":44}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90910,"byte_end":90984,"line_start":345,"line_end":345,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":90985,"byte_end":91023,"line_start":346,"line_end":346,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91024,"byte_end":91045,"line_start":347,"line_end":347,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91046,"byte_end":91073,"line_start":348,"line_end":348,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91074,"byte_end":91079,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91080,"byte_end":91083,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_stdout {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91084,"byte_end":91110,"line_start":351,"line_end":351,"column_start":1,"column_end":27}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91111,"byte_end":91163,"line_start":352,"line_end":352,"column_start":1,"column_end":53}},{"value":"/         .with_target(false)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91164,"byte_end":91195,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/         .with_filter(LevelFilter::WARN)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91196,"byte_end":91239,"line_start":354,"line_end":354,"column_start":1,"column_end":44}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91240,"byte_end":91314,"line_start":355,"line_end":355,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91315,"byte_end":91353,"line_start":356,"line_end":356,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91354,"byte_end":91375,"line_start":357,"line_end":357,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91376,"byte_end":91403,"line_start":358,"line_end":358,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91404,"byte_end":91409,"line_start":359,"line_end":359,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91410,"byte_end":91413,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91414,"byte_end":91448,"line_start":361,"line_end":361,"column_start":1,"column_end":35}},{"value":"/     .with(layers)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91449,"byte_end":91470,"line_start":362,"line_end":362,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91471,"byte_end":91487,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"/# Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91488,"byte_end":91501,"line_start":364,"line_end":364,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91502,"byte_end":91509,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91510,"byte_end":91513,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Finally, if the number of layers _changes_ at runtime, a `Vec` of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91514,"byte_end":91583,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ subscribers can be used alongside the [`reload`](crate::reload) module to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91584,"byte_end":91661,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/ add or remove subscribers dynamically at runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91662,"byte_end":91715,"line_start":369,"line_end":369,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91716,"byte_end":91719,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ [option-impl]: Layer#impl-Layer<S>-for-Option<L>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91720,"byte_end":91772,"line_start":371,"line_end":371,"column_start":1,"column_end":53}},{"value":"/ [box-impl]: Layer#impl-Layer%3CS%3E-for-Box%3Cdyn%20Layer%3CS%3E%20+%20Send%20+%20Sync%3E","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91773,"byte_end":91866,"line_start":372,"line_end":372,"column_start":1,"column_end":94}},{"value":"/ [vec-impl]: Layer#impl-Layer<S>-for-Vec<L>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91867,"byte_end":91913,"line_start":373,"line_end":373,"column_start":1,"column_end":47}},{"value":"/ [prelude]: crate::prelude","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91914,"byte_end":91943,"line_start":374,"line_end":374,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91944,"byte_end":91947,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ # Recording Traces","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91948,"byte_end":91970,"line_start":376,"line_end":376,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91971,"byte_end":91974,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ The [`Layer`] trait defines a set of methods for consuming notifications from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":91975,"byte_end":92056,"line_start":378,"line_end":378,"column_start":1,"column_end":82}},{"value":"/ tracing instrumentation, which are generally equivalent to the similarly","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92057,"byte_end":92133,"line_start":379,"line_end":379,"column_start":1,"column_end":77}},{"value":"/ named methods on [`Subscriber`]. Unlike [`Subscriber`], the methods on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92134,"byte_end":92208,"line_start":380,"line_end":380,"column_start":1,"column_end":75}},{"value":"/ `Layer` are additionally passed a [`Context`] type, which exposes additional","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92209,"byte_end":92289,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/ information provided by the wrapped subscriber (such as [the current span])","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92290,"byte_end":92369,"line_start":382,"line_end":382,"column_start":1,"column_end":80}},{"value":"/ to the layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92370,"byte_end":92387,"line_start":383,"line_end":383,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92388,"byte_end":92391,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ # Filtering with `Layer`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92392,"byte_end":92421,"line_start":385,"line_end":385,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92422,"byte_end":92425,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ As well as strategies for handling trace events, the `Layer` trait may also","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92426,"byte_end":92505,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ be used to represent composable _filters_. This allows the determination of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92506,"byte_end":92585,"line_start":388,"line_end":388,"column_start":1,"column_end":80}},{"value":"/ what spans and events should be recorded to be decoupled from _how_ they are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92586,"byte_end":92666,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ recorded: a filtering layer can be applied to other layers or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92667,"byte_end":92732,"line_start":390,"line_end":390,"column_start":1,"column_end":66}},{"value":"/ subscribers. `Layer`s can be used to implement _global filtering_, where a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92733,"byte_end":92811,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/ `Layer` provides a filtering strategy for the entire subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92812,"byte_end":92880,"line_start":392,"line_end":392,"column_start":1,"column_end":69}},{"value":"/ Additionally, individual recording `Layer`s or sets of `Layer`s may be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92881,"byte_end":92955,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ combined with _per-layer filters_ that control what spans and events are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":92956,"byte_end":93032,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ recorded by those layers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93033,"byte_end":93062,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93063,"byte_end":93066,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ ## Global Filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93067,"byte_end":93090,"line_start":397,"line_end":397,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93091,"byte_end":93094,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ A `Layer` that implements a filtering strategy should override the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93095,"byte_end":93165,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ [`register_callsite`] and/or [`enabled`] methods. It may also choose to implement","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93166,"byte_end":93251,"line_start":400,"line_end":400,"column_start":1,"column_end":86}},{"value":"/ methods such as [`on_enter`], if it wishes to filter trace events based on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93252,"byte_end":93330,"line_start":401,"line_end":401,"column_start":1,"column_end":79}},{"value":"/ the current span context.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93331,"byte_end":93360,"line_start":402,"line_end":402,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93361,"byte_end":93364,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ Note that the [`Layer::register_callsite`] and [`Layer::enabled`] methods","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93365,"byte_end":93442,"line_start":404,"line_end":404,"column_start":1,"column_end":78}},{"value":"/ determine whether a span or event is enabled *globally*. Thus, they should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93443,"byte_end":93521,"line_start":405,"line_end":405,"column_start":1,"column_end":79}},{"value":"/ **not** be used to indicate whether an individual layer wishes to record a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93522,"byte_end":93600,"line_start":406,"line_end":406,"column_start":1,"column_end":79}},{"value":"/ particular span or event. Instead, if a layer is only interested in a subset","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93601,"byte_end":93681,"line_start":407,"line_end":407,"column_start":1,"column_end":81}},{"value":"/ of trace data, but does *not* wish to disable other spans and events for the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93682,"byte_end":93762,"line_start":408,"line_end":408,"column_start":1,"column_end":81}},{"value":"/ rest of the layer stack should ignore those spans and events in its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93763,"byte_end":93834,"line_start":409,"line_end":409,"column_start":1,"column_end":72}},{"value":"/ notification methods.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93835,"byte_end":93860,"line_start":410,"line_end":410,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93861,"byte_end":93864,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ The filtering methods on a stack of `Layer`s are evaluated in a top-down","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93865,"byte_end":93941,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ order, starting with the outermost `Layer` and ending with the wrapped","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":93942,"byte_end":94016,"line_start":413,"line_end":413,"column_start":1,"column_end":75}},{"value":"/ [`Subscriber`]. If any layer returns `false` from its [`enabled`] method, or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94017,"byte_end":94097,"line_start":414,"line_end":414,"column_start":1,"column_end":81}},{"value":"/ [`Interest::never()`] from its [`register_callsite`] method, filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94098,"byte_end":94169,"line_start":415,"line_end":415,"column_start":1,"column_end":72}},{"value":"/ evaluation will short-circuit and the span or event will be disabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94170,"byte_end":94243,"line_start":416,"line_end":416,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94244,"byte_end":94247,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ ### Enabling Interest","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94248,"byte_end":94273,"line_start":418,"line_end":418,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94274,"byte_end":94277,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ Whenever an tracing event (or span) is emitted, it goes through a number of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94278,"byte_end":94357,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ steps to determine how and how much it should be processed. The earlier an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94358,"byte_end":94436,"line_start":421,"line_end":421,"column_start":1,"column_end":79}},{"value":"/ event is disabled, the less work has to be done to process the event, so","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94437,"byte_end":94513,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/ `Layer`s that implement filtering should attempt to disable unwanted","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94514,"byte_end":94586,"line_start":423,"line_end":423,"column_start":1,"column_end":73}},{"value":"/ events as early as possible. In order, each event checks:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94587,"byte_end":94648,"line_start":424,"line_end":424,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94649,"byte_end":94652,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`], once per callsite (roughly: once per time that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94653,"byte_end":94728,"line_start":426,"line_end":426,"column_start":1,"column_end":76}},{"value":"/   `event!` or `span!` is written in the source code; this is cached at the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94729,"byte_end":94807,"line_start":427,"line_end":427,"column_start":1,"column_end":79}},{"value":"/   callsite). See [`Subscriber::register_callsite`] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94808,"byte_end":94866,"line_start":428,"line_end":428,"column_start":1,"column_end":59}},{"value":"/   [`tracing_core::callsite`] for a summary of how this behaves.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94867,"byte_end":94934,"line_start":429,"line_end":429,"column_start":1,"column_end":68}},{"value":"/ - [`enabled`], once per emitted event (roughly: once per time that `event!`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":94935,"byte_end":95014,"line_start":430,"line_end":430,"column_start":1,"column_end":80}},{"value":"/   or `span!` is *executed*), and only if `register_callsite` regesters an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95015,"byte_end":95092,"line_start":431,"line_end":431,"column_start":1,"column_end":78}},{"value":"/   [`Interest::sometimes`]. This is the main customization point to globally","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95093,"byte_end":95172,"line_start":432,"line_end":432,"column_start":1,"column_end":80}},{"value":"/   filter events based on their [`Metadata`]. If an event can be disabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95173,"byte_end":95249,"line_start":433,"line_end":433,"column_start":1,"column_end":77}},{"value":"/   based only on [`Metadata`], it should be, as this allows the construction","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95250,"byte_end":95329,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/   of the actual `Event`/`Span` to be skipped.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95330,"byte_end":95379,"line_start":435,"line_end":435,"column_start":1,"column_end":50}},{"value":"/ - For events only (and not spans), [`event_enabled`] is called just before","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95380,"byte_end":95458,"line_start":436,"line_end":436,"column_start":1,"column_end":79}},{"value":"/   processing the event. This gives layers one last chance to say that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95459,"byte_end":95532,"line_start":437,"line_end":437,"column_start":1,"column_end":74}},{"value":"/   an event should be filtered out, now that the event's fields are known.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95533,"byte_end":95610,"line_start":438,"line_end":438,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95611,"byte_end":95614,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ## Per-Layer Filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95615,"byte_end":95641,"line_start":440,"line_end":440,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95642,"byte_end":95645,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ **Note**: per-layer filtering APIs currently require the [`\"registry\"` crate","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95646,"byte_end":95726,"line_start":442,"line_end":442,"column_start":1,"column_end":81}},{"value":"/ feature flag][feat] to be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95727,"byte_end":95765,"line_start":443,"line_end":443,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95766,"byte_end":95769,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ Sometimes, it may be desirable for one `Layer` to record a particular subset","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95770,"byte_end":95850,"line_start":445,"line_end":445,"column_start":1,"column_end":81}},{"value":"/ of spans and events, while a different subset of spans and events are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95851,"byte_end":95924,"line_start":446,"line_end":446,"column_start":1,"column_end":74}},{"value":"/ recorded by other `Layer`s. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95925,"byte_end":95969,"line_start":447,"line_end":447,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95970,"byte_end":95973,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ - A layer that records metrics may wish to observe only events including","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":95974,"byte_end":96050,"line_start":449,"line_end":449,"column_start":1,"column_end":77}},{"value":"/   particular tracked values, while a logging layer ignores those events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96051,"byte_end":96127,"line_start":450,"line_end":450,"column_start":1,"column_end":77}},{"value":"/ - If recording a distributed trace is expensive, it might be desirable to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96128,"byte_end":96205,"line_start":451,"line_end":451,"column_start":1,"column_end":78}},{"value":"/   only send spans with `INFO` and lower verbosity to the distributed tracing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96206,"byte_end":96286,"line_start":452,"line_end":452,"column_start":1,"column_end":81}},{"value":"/   system, while logging more verbose spans to a file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96287,"byte_end":96344,"line_start":453,"line_end":453,"column_start":1,"column_end":58}},{"value":"/ - Spans and events with a particular target might be recorded differently","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96345,"byte_end":96422,"line_start":454,"line_end":454,"column_start":1,"column_end":78}},{"value":"/   from others, such as by generating an HTTP access log from a span that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96423,"byte_end":96499,"line_start":455,"line_end":455,"column_start":1,"column_end":77}},{"value":"/   tracks the lifetime of an HTTP request.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96500,"byte_end":96545,"line_start":456,"line_end":456,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96546,"byte_end":96549,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ The [`Filter`] trait is used to control what spans and events are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96550,"byte_end":96619,"line_start":458,"line_end":458,"column_start":1,"column_end":70}},{"value":"/ observed by an individual `Layer`, while still allowing other `Layer`s to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96620,"byte_end":96697,"line_start":459,"line_end":459,"column_start":1,"column_end":78}},{"value":"/ potentially record them. The [`Layer::with_filter`] method combines a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96698,"byte_end":96771,"line_start":460,"line_end":460,"column_start":1,"column_end":74}},{"value":"/ `Layer` with a [`Filter`], returning a [`Filtered`] layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96772,"byte_end":96834,"line_start":461,"line_end":461,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96835,"byte_end":96838,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ This crate's [`filter`] module provides a number of types which implement","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96839,"byte_end":96916,"line_start":463,"line_end":463,"column_start":1,"column_end":78}},{"value":"/ the [`Filter`] trait, such as [`LevelFilter`], [`Targets`], and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96917,"byte_end":96984,"line_start":464,"line_end":464,"column_start":1,"column_end":68}},{"value":"/ [`FilterFn`]. These [`Filter`]s provide ready-made implementations of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":96985,"byte_end":97058,"line_start":465,"line_end":465,"column_start":1,"column_end":74}},{"value":"/ common forms of filtering. For custom filtering policies, the [`FilterFn`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97059,"byte_end":97137,"line_start":466,"line_end":466,"column_start":1,"column_end":79}},{"value":"/ and [`DynFilterFn`] types allow implementing a [`Filter`] with a closure or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97138,"byte_end":97217,"line_start":467,"line_end":467,"column_start":1,"column_end":80}},{"value":"/ function pointer. In addition, when more control is required, the [`Filter`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97218,"byte_end":97298,"line_start":468,"line_end":468,"column_start":1,"column_end":81}},{"value":"/ trait may also be implemented for user-defined types.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97299,"byte_end":97356,"line_start":469,"line_end":469,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97357,"byte_end":97360,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97361,"byte_end":97432,"line_start":471,"line_end":471,"column_start":1,"column_end":72}},{"value":"/     <strong>Warning</strong>: Currently, the <a href=\"../struct.Registry.html\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97433,"byte_end":97516,"line_start":472,"line_end":472,"column_start":1,"column_end":84}},{"value":"/     <code>Registry</code></a> type defined in this crate is the only root","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97517,"byte_end":97594,"line_start":473,"line_end":473,"column_start":1,"column_end":78}},{"value":"/     <code>Subscriber</code> capable of supporting <code>Layer</code>s with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97595,"byte_end":97673,"line_start":474,"line_end":474,"column_start":1,"column_end":79}},{"value":"/     per-layer filters. In the future, new APIs will be added to allow other","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97674,"byte_end":97753,"line_start":475,"line_end":475,"column_start":1,"column_end":80}},{"value":"/     root <code>Subscriber</code>s to support per-layer filters.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97754,"byte_end":97821,"line_start":476,"line_end":476,"column_start":1,"column_end":68}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97822,"byte_end":97832,"line_start":477,"line_end":477,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97833,"byte_end":97836,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ For example, to generate an HTTP access log based on spans with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97837,"byte_end":97904,"line_start":479,"line_end":479,"column_start":1,"column_end":68}},{"value":"/ the `http_access` target, while logging other spans and events to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97905,"byte_end":97974,"line_start":480,"line_end":480,"column_start":1,"column_end":70}},{"value":"/ standard out, a [`Filter`] can be added to the access log layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":97975,"byte_end":98043,"line_start":481,"line_end":481,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98044,"byte_end":98047,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98048,"byte_end":98055,"line_start":483,"line_end":483,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98056,"byte_end":98105,"line_start":484,"line_end":484,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98106,"byte_end":98109,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ // Generates an HTTP access log.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98110,"byte_end":98146,"line_start":486,"line_end":486,"column_start":1,"column_end":37}},{"value":"/ let access_log = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98147,"byte_end":98174,"line_start":487,"line_end":487,"column_start":1,"column_end":28}},{"value":"/     # filter::LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98175,"byte_end":98211,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98212,"byte_end":98215,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ // Add a filter to the access log layer so that it only observes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98216,"byte_end":98284,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"/ // spans and events with the `http_access` target.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98285,"byte_end":98339,"line_start":491,"line_end":491,"column_start":1,"column_end":55}},{"value":"/ let access_log = access_log.with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98340,"byte_end":98414,"line_start":492,"line_end":492,"column_start":1,"column_end":75}},{"value":"/     // Returns `true` if and only if the span or event's target is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98415,"byte_end":98485,"line_start":493,"line_end":493,"column_start":1,"column_end":71}},{"value":"/     // \"http_access\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98486,"byte_end":98511,"line_start":494,"line_end":494,"column_start":1,"column_end":26}},{"value":"/     metadata.target() == \"http_access\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98512,"byte_end":98554,"line_start":495,"line_end":495,"column_start":1,"column_end":43}},{"value":"/ }));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98555,"byte_end":98563,"line_start":496,"line_end":496,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98564,"byte_end":98567,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ // A general-purpose logging layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98568,"byte_end":98607,"line_start":498,"line_end":498,"column_start":1,"column_end":40}},{"value":"/ let fmt_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98608,"byte_end":98661,"line_start":499,"line_end":499,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98662,"byte_end":98665,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ // Build a subscriber that combines the access log and stdout log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98666,"byte_end":98735,"line_start":501,"line_end":501,"column_start":1,"column_end":70}},{"value":"/ // layers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98736,"byte_end":98750,"line_start":502,"line_end":502,"column_start":1,"column_end":15}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98751,"byte_end":98785,"line_start":503,"line_end":503,"column_start":1,"column_end":35}},{"value":"/     .with(fmt_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98786,"byte_end":98810,"line_start":504,"line_end":504,"column_start":1,"column_end":25}},{"value":"/     .with(access_log)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98811,"byte_end":98836,"line_start":505,"line_end":505,"column_start":1,"column_end":26}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98837,"byte_end":98853,"line_start":506,"line_end":506,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98854,"byte_end":98861,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98862,"byte_end":98865,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ Multiple layers can have their own, separate per-layer filters. A span or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98866,"byte_end":98943,"line_start":509,"line_end":509,"column_start":1,"column_end":78}},{"value":"/ event will be recorded if it is enabled by _any_ per-layer filter, but it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":98944,"byte_end":99021,"line_start":510,"line_end":510,"column_start":1,"column_end":78}},{"value":"/ will be skipped by the layers whose filters did not enable it. Building on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99022,"byte_end":99100,"line_start":511,"line_end":511,"column_start":1,"column_end":79}},{"value":"/ the previous example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99101,"byte_end":99126,"line_start":512,"line_end":512,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99127,"byte_end":99130,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99131,"byte_end":99138,"line_start":514,"line_end":514,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::{filter_fn, LevelFilter}, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99139,"byte_end":99214,"line_start":515,"line_end":515,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99215,"byte_end":99218,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ let access_log = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99219,"byte_end":99246,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/     # LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99247,"byte_end":99275,"line_start":518,"line_end":518,"column_start":1,"column_end":29}},{"value":"/ let fmt_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99276,"byte_end":99329,"line_start":519,"line_end":519,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99330,"byte_end":99333,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99334,"byte_end":99368,"line_start":521,"line_end":521,"column_start":1,"column_end":35}},{"value":"/     // Add the filter for the \"http_access\" target to the access","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99369,"byte_end":99437,"line_start":522,"line_end":522,"column_start":1,"column_end":69}},{"value":"/     // log layer, like before.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99438,"byte_end":99472,"line_start":523,"line_end":523,"column_start":1,"column_end":35}},{"value":"/     .with(access_log.with_filter(filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99473,"byte_end":99532,"line_start":524,"line_end":524,"column_start":1,"column_end":60}},{"value":"/         metadata.target() == \"http_access\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99533,"byte_end":99579,"line_start":525,"line_end":525,"column_start":1,"column_end":47}},{"value":"/     })))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99580,"byte_end":99592,"line_start":526,"line_end":526,"column_start":1,"column_end":13}},{"value":"/     // Add a filter for spans and events with the INFO level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99593,"byte_end":99657,"line_start":527,"line_end":527,"column_start":1,"column_end":65}},{"value":"/     // and below to the logging layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99658,"byte_end":99700,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/     .with(fmt_layer.with_filter(LevelFilter::INFO))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99701,"byte_end":99756,"line_start":529,"line_end":529,"column_start":1,"column_end":56}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99757,"byte_end":99773,"line_start":530,"line_end":530,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99774,"byte_end":99777,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ // Neither layer will observe this event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99778,"byte_end":99822,"line_start":532,"line_end":532,"column_start":1,"column_end":45}},{"value":"/ tracing::debug!(does_anyone_care = false, \"a tree fell in the forest\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99823,"byte_end":99898,"line_start":533,"line_end":533,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99899,"byte_end":99902,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // This event will be observed by the logging layer, but not","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99903,"byte_end":99967,"line_start":535,"line_end":535,"column_start":1,"column_end":65}},{"value":"/ // by the access log layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":99968,"byte_end":99999,"line_start":536,"line_end":536,"column_start":1,"column_end":32}},{"value":"/ tracing::warn!(dose_roentgen = %3.8, \"not great, but not terrible\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100000,"byte_end":100072,"line_start":537,"line_end":537,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100073,"byte_end":100076,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ // This event will be observed only by the access log layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100077,"byte_end":100141,"line_start":539,"line_end":539,"column_start":1,"column_end":65}},{"value":"/ tracing::trace!(target: \"http_access\", \"HTTP request started\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100142,"byte_end":100209,"line_start":540,"line_end":540,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100210,"byte_end":100213,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Both layers will observe this event.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100214,"byte_end":100257,"line_start":542,"line_end":542,"column_start":1,"column_end":44}},{"value":"/ tracing::error!(target: \"http_access\", \"HTTP request failed with a very bad error!\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100258,"byte_end":100347,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100348,"byte_end":100355,"line_start":544,"line_end":544,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100356,"byte_end":100359,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ A per-layer filter can be applied to multiple [`Layer`]s at a time, by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100360,"byte_end":100434,"line_start":546,"line_end":546,"column_start":1,"column_end":75}},{"value":"/ combining them into a [`Layered`] layer using [`Layer::and_then`], and then","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100435,"byte_end":100514,"line_start":547,"line_end":547,"column_start":1,"column_end":80}},{"value":"/ calling [`Layer::with_filter`] on the resulting [`Layered`] layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100515,"byte_end":100585,"line_start":548,"line_end":548,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100586,"byte_end":100589,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ Consider the following:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100590,"byte_end":100617,"line_start":550,"line_end":550,"column_start":1,"column_end":28}},{"value":"/ - `layer_a` and `layer_b`, which should only receive spans and events at","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100618,"byte_end":100694,"line_start":551,"line_end":551,"column_start":1,"column_end":77}},{"value":"/    the [`INFO`] [level] and above.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100695,"byte_end":100733,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/ - A third layer, `layer_c`, which should receive spans and events at","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100734,"byte_end":100806,"line_start":553,"line_end":553,"column_start":1,"column_end":73}},{"value":"/    the [`DEBUG`] [level] as well.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100807,"byte_end":100844,"line_start":554,"line_end":554,"column_start":1,"column_end":38}},{"value":"/ The layers and filters would be composed thusly:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100845,"byte_end":100897,"line_start":555,"line_end":555,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100898,"byte_end":100901,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100902,"byte_end":100909,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::LevelFilter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100910,"byte_end":100972,"line_start":558,"line_end":558,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100973,"byte_end":100976,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ let layer_a = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":100977,"byte_end":101001,"line_start":560,"line_end":560,"column_start":1,"column_end":25}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101002,"byte_end":101026,"line_start":561,"line_end":561,"column_start":1,"column_end":25}},{"value":"/ let layer_b =  // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101027,"byte_end":101052,"line_start":562,"line_end":562,"column_start":1,"column_end":26}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101053,"byte_end":101077,"line_start":563,"line_end":563,"column_start":1,"column_end":25}},{"value":"/ let layer_c =  // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101078,"byte_end":101103,"line_start":564,"line_end":564,"column_start":1,"column_end":26}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101104,"byte_end":101128,"line_start":565,"line_end":565,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101129,"byte_end":101132,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ let info_layers = layer_a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101133,"byte_end":101162,"line_start":567,"line_end":567,"column_start":1,"column_end":30}},{"value":"/     // Combine `layer_a` and `layer_b` into a `Layered` layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101163,"byte_end":101229,"line_start":568,"line_end":568,"column_start":1,"column_end":67}},{"value":"/     .and_then(layer_b)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101230,"byte_end":101256,"line_start":569,"line_end":569,"column_start":1,"column_end":27}},{"value":"/     // ...and then add an `INFO` `LevelFilter` to that layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101257,"byte_end":101322,"line_start":570,"line_end":570,"column_start":1,"column_end":66}},{"value":"/     .with_filter(LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101323,"byte_end":101363,"line_start":571,"line_end":571,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101364,"byte_end":101367,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101368,"byte_end":101402,"line_start":573,"line_end":573,"column_start":1,"column_end":35}},{"value":"/     // Add `layer_c` with a `DEBUG` filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101403,"byte_end":101450,"line_start":574,"line_end":574,"column_start":1,"column_end":48}},{"value":"/     .with(layer_c.with_filter(LevelFilter::DEBUG))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101451,"byte_end":101505,"line_start":575,"line_end":575,"column_start":1,"column_end":55}},{"value":"/     .with(info_layers)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101506,"byte_end":101532,"line_start":576,"line_end":576,"column_start":1,"column_end":27}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101533,"byte_end":101549,"line_start":577,"line_end":577,"column_start":1,"column_end":17}},{"value":"/```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101550,"byte_end":101556,"line_start":578,"line_end":578,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101557,"byte_end":101560,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ If a [`Filtered`] [`Layer`] is combined with another [`Layer`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101561,"byte_end":101627,"line_start":580,"line_end":580,"column_start":1,"column_end":67}},{"value":"/ [`Layer::and_then`], and a filter is added to the [`Layered`] layer, that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101628,"byte_end":101705,"line_start":581,"line_end":581,"column_start":1,"column_end":78}},{"value":"/ layer will be filtered by *both* the inner filter and the outer filter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101706,"byte_end":101781,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/ Only spans and events that are enabled by *both* filters will be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101782,"byte_end":101850,"line_start":583,"line_end":583,"column_start":1,"column_end":69}},{"value":"/ observed by that layer. This can be used to implement complex filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101851,"byte_end":101926,"line_start":584,"line_end":584,"column_start":1,"column_end":76}},{"value":"/ trees.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101927,"byte_end":101937,"line_start":585,"line_end":585,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101938,"byte_end":101941,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following constraints:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101942,"byte_end":101996,"line_start":587,"line_end":587,"column_start":1,"column_end":55}},{"value":"/ - Suppose that a particular [target] is used to indicate events that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":101997,"byte_end":102069,"line_start":588,"line_end":588,"column_start":1,"column_end":73}},{"value":"/   should be counted as part of a metrics system, which should be only","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102070,"byte_end":102143,"line_start":589,"line_end":589,"column_start":1,"column_end":74}},{"value":"/   observed by a layer that collects metrics.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102144,"byte_end":102192,"line_start":590,"line_end":590,"column_start":1,"column_end":49}},{"value":"/ - A log of high-priority events ([`INFO`] and above) should be logged","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102193,"byte_end":102266,"line_start":591,"line_end":591,"column_start":1,"column_end":74}},{"value":"/   to stdout, while more verbose events should be logged to a debugging log file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102267,"byte_end":102351,"line_start":592,"line_end":592,"column_start":1,"column_end":85}},{"value":"/ - Metrics-focused events should *not* be included in either log output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102352,"byte_end":102427,"line_start":593,"line_end":593,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102428,"byte_end":102431,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ In that case, it is possible to apply a filter to both logging layers to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102432,"byte_end":102508,"line_start":595,"line_end":595,"column_start":1,"column_end":77}},{"value":"/ exclude the metrics events, while additionally adding a [`LevelFilter`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102509,"byte_end":102584,"line_start":596,"line_end":596,"column_start":1,"column_end":76}},{"value":"/ to the stdout log:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102585,"byte_end":102607,"line_start":597,"line_end":597,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102608,"byte_end":102611,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102612,"byte_end":102619,"line_start":599,"line_end":599,"column_start":1,"column_end":8}},{"value":"/ # // wrap this in a function so we don't actually create `debug.log` when","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102620,"byte_end":102697,"line_start":600,"line_end":600,"column_start":1,"column_end":78}},{"value":"/ # // running the doctests..","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102698,"byte_end":102729,"line_start":601,"line_end":601,"column_start":1,"column_end":32}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102730,"byte_end":102799,"line_start":602,"line_end":602,"column_start":1,"column_end":70}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102800,"byte_end":102849,"line_start":603,"line_end":603,"column_start":1,"column_end":50}},{"value":"/ use std::{fs::File, sync::Arc};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102850,"byte_end":102885,"line_start":604,"line_end":604,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102886,"byte_end":102889,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to stdout using the human-readable \"pretty\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102890,"byte_end":102965,"line_start":606,"line_end":606,"column_start":1,"column_end":76}},{"value":"/ // format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102966,"byte_end":102980,"line_start":607,"line_end":607,"column_start":1,"column_end":15}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":102981,"byte_end":103034,"line_start":608,"line_end":608,"column_start":1,"column_end":54}},{"value":"/     .pretty();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103035,"byte_end":103053,"line_start":609,"line_end":609,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103054,"byte_end":103057,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to a file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103058,"byte_end":103100,"line_start":611,"line_end":611,"column_start":1,"column_end":43}},{"value":"/ let file = File::create(\"debug.log\")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103101,"byte_end":103143,"line_start":612,"line_end":612,"column_start":1,"column_end":43}},{"value":"/ let debug_log = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103144,"byte_end":103196,"line_start":613,"line_end":613,"column_start":1,"column_end":53}},{"value":"/     .with_writer(Arc::new(file));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103197,"byte_end":103234,"line_start":614,"line_end":614,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103235,"byte_end":103238,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ // A layer that collects metrics using specific events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103239,"byte_end":103298,"line_start":616,"line_end":616,"column_start":1,"column_end":60}},{"value":"/ let metrics_layer = /* ... */ filter::LevelFilter::INFO;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103299,"byte_end":103359,"line_start":617,"line_end":617,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103360,"byte_end":103363,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103364,"byte_end":103398,"line_start":619,"line_end":619,"column_start":1,"column_end":35}},{"value":"/     .with(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103399,"byte_end":103413,"line_start":620,"line_end":620,"column_start":1,"column_end":15}},{"value":"/         stdout_log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103414,"byte_end":103436,"line_start":621,"line_end":621,"column_start":1,"column_end":23}},{"value":"/             // Add an `INFO` filter to the stdout logging layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103437,"byte_end":103504,"line_start":622,"line_end":622,"column_start":1,"column_end":68}},{"value":"/             .with_filter(filter::LevelFilter::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103505,"byte_end":103560,"line_start":623,"line_end":623,"column_start":1,"column_end":56}},{"value":"/             // Combine the filtered `stdout_log` layer with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103561,"byte_end":103628,"line_start":624,"line_end":624,"column_start":1,"column_end":68}},{"value":"/             // `debug_log` layer, producing a new `Layered` layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103629,"byte_end":103699,"line_start":625,"line_end":625,"column_start":1,"column_end":71}},{"value":"/             .and_then(debug_log)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103700,"byte_end":103736,"line_start":626,"line_end":626,"column_start":1,"column_end":37}},{"value":"/             // Add a filter to *both* layers that rejects spans and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103737,"byte_end":103808,"line_start":627,"line_end":627,"column_start":1,"column_end":72}},{"value":"/             // events whose targets start with `metrics`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103809,"byte_end":103870,"line_start":628,"line_end":628,"column_start":1,"column_end":62}},{"value":"/             .with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103871,"byte_end":103930,"line_start":629,"line_end":629,"column_start":1,"column_end":60}},{"value":"/                 !metadata.target().starts_with(\"metrics\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103931,"byte_end":103992,"line_start":630,"line_end":630,"column_start":1,"column_end":62}},{"value":"/             }))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":103993,"byte_end":104012,"line_start":631,"line_end":631,"column_start":1,"column_end":20}},{"value":"/     )","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104013,"byte_end":104022,"line_start":632,"line_end":632,"column_start":1,"column_end":10}},{"value":"/     .with(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104023,"byte_end":104037,"line_start":633,"line_end":633,"column_start":1,"column_end":15}},{"value":"/         // Add a filter to the metrics label that *only* enables","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104038,"byte_end":104106,"line_start":634,"line_end":634,"column_start":1,"column_end":69}},{"value":"/         // events whose targets start with `metrics`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104107,"byte_end":104164,"line_start":635,"line_end":635,"column_start":1,"column_end":58}},{"value":"/         metrics_layer.with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104165,"byte_end":104233,"line_start":636,"line_end":636,"column_start":1,"column_end":69}},{"value":"/             metadata.target().starts_with(\"metrics\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104234,"byte_end":104290,"line_start":637,"line_end":637,"column_start":1,"column_end":57}},{"value":"/         }))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104291,"byte_end":104306,"line_start":638,"line_end":638,"column_start":1,"column_end":16}},{"value":"/     )","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104307,"byte_end":104316,"line_start":639,"line_end":639,"column_start":1,"column_end":10}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104317,"byte_end":104333,"line_start":640,"line_end":640,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104334,"byte_end":104337,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ // This event will *only* be recorded by the metrics layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104338,"byte_end":104401,"line_start":642,"line_end":642,"column_start":1,"column_end":64}},{"value":"/ tracing::info!(target: \"metrics::cool_stuff_count\", value = 42);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104402,"byte_end":104470,"line_start":643,"line_end":643,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104471,"byte_end":104474,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ // This event will only be seen by the debug log file layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104475,"byte_end":104539,"line_start":645,"line_end":645,"column_start":1,"column_end":65}},{"value":"/ tracing::debug!(\"this is a message, and part of a system of messages\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104540,"byte_end":104615,"line_start":646,"line_end":646,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104616,"byte_end":104619,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ // This event will be seen by both the stdout log layer *and*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104620,"byte_end":104685,"line_start":648,"line_end":648,"column_start":1,"column_end":66}},{"value":"/ // the debug log file layer, but not by the metrics layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104686,"byte_end":104748,"line_start":649,"line_end":649,"column_start":1,"column_end":63}},{"value":"/ tracing::warn!(\"the message is a warning about danger!\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104749,"byte_end":104810,"line_start":650,"line_end":650,"column_start":1,"column_end":62}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104811,"byte_end":104825,"line_start":651,"line_end":651,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104826,"byte_end":104833,"line_start":652,"line_end":652,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104834,"byte_end":104837,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::subscriber::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104838,"byte_end":104894,"line_start":654,"line_end":654,"column_start":1,"column_end":57}},{"value":"/ [span IDs]: tracing_core::span::Id","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104895,"byte_end":104933,"line_start":655,"line_end":655,"column_start":1,"column_end":39}},{"value":"/ [the current span]: Context::current_span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104934,"byte_end":104979,"line_start":656,"line_end":656,"column_start":1,"column_end":46}},{"value":"/ [`register_callsite`]: Layer::register_callsite","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":104980,"byte_end":105031,"line_start":657,"line_end":657,"column_start":1,"column_end":52}},{"value":"/ [`enabled`]: Layer::enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105032,"byte_end":105063,"line_start":658,"line_end":658,"column_start":1,"column_end":32}},{"value":"/ [`event_enabled`]: Layer::event_enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105064,"byte_end":105107,"line_start":659,"line_end":659,"column_start":1,"column_end":44}},{"value":"/ [`on_enter`]: Layer::on_enter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105108,"byte_end":105141,"line_start":660,"line_end":660,"column_start":1,"column_end":34}},{"value":"/ [`Layer::register_callsite`]: Layer::register_callsite","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105142,"byte_end":105200,"line_start":661,"line_end":661,"column_start":1,"column_end":59}},{"value":"/ [`Layer::enabled`]: Layer::enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105201,"byte_end":105239,"line_start":662,"line_end":662,"column_start":1,"column_end":39}},{"value":"/ [`Interest::never()`]: tracing_core::subscriber::Interest::never()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105240,"byte_end":105310,"line_start":663,"line_end":663,"column_start":1,"column_end":71}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105311,"byte_end":105352,"line_start":664,"line_end":664,"column_start":1,"column_end":42}},{"value":"/ [`filter`]: crate::filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105353,"byte_end":105382,"line_start":665,"line_end":665,"column_start":1,"column_end":30}},{"value":"/ [`Targets`]: crate::filter::Targets","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105383,"byte_end":105422,"line_start":666,"line_end":666,"column_start":1,"column_end":40}},{"value":"/ [`FilterFn`]: crate::filter::FilterFn","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105423,"byte_end":105464,"line_start":667,"line_end":667,"column_start":1,"column_end":42}},{"value":"/ [`DynFilterFn`]: crate::filter::DynFilterFn","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105465,"byte_end":105512,"line_start":668,"line_end":668,"column_start":1,"column_end":48}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105513,"byte_end":105545,"line_start":669,"line_end":669,"column_start":1,"column_end":33}},{"value":"/ [`INFO`]: tracing_core::Level::INFO","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105546,"byte_end":105585,"line_start":670,"line_end":670,"column_start":1,"column_end":40}},{"value":"/ [`DEBUG`]: tracing_core::Level::DEBUG","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105586,"byte_end":105627,"line_start":671,"line_end":671,"column_start":1,"column_end":42}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105628,"byte_end":105672,"line_start":672,"line_end":672,"column_start":1,"column_end":45}},{"value":"/ [`LevelFilter`]: crate::filter::LevelFilter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105673,"byte_end":105720,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ [feat]: crate#feature-flags","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":105721,"byte_end":105752,"line_start":674,"line_end":674,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149957,"byte_end":149964,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Context","qualname":"::layer::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912}],"decl_id":null,"docs":" Represents information about the current context provided to [`Layer`]s by the\n wrapped [`Subscriber`].","sig":null,"attributes":[{"value":"/ Represents information about the current context provided to [`Layer`]s by the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149203,"byte_end":149285,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/ wrapped [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149286,"byte_end":149313,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149314,"byte_end":149317,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ To access [stored data] keyed by a span ID, implementors of the `Layer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149318,"byte_end":149393,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ trait should ensure that the `Subscriber` type parameter is *also* bound by the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149394,"byte_end":149477,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ [`LookupSpan`]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149478,"byte_end":149497,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149498,"byte_end":149501,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149502,"byte_end":149513,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use tracing::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149514,"byte_end":149542,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ use tracing_subscriber::{Layer, registry::LookupSpan};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149543,"byte_end":149601,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149602,"byte_end":149605,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149606,"byte_end":149629,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149630,"byte_end":149633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for MyLayer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149634,"byte_end":149666,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149667,"byte_end":149676,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> LookupSpan<'a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149677,"byte_end":149724,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149725,"byte_end":149730,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149731,"byte_end":149745,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149746,"byte_end":149751,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149752,"byte_end":149759,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149760,"byte_end":149763,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149764,"byte_end":149791,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149792,"byte_end":149836,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149837,"byte_end":149880,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`LookupSpan`]: crate::registry::LookupSpan","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":149881,"byte_end":149928,"line_start":31,"line_end":31,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151021,"byte_end":151033,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Context>::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped subscriber's view of the current span.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped subscriber's view of the current span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":150933,"byte_end":150995,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151000,"byte_end":151009,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151430,"byte_end":151437,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Context>::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wrapped subscriber would enable the current span.\n","sig":null,"attributes":[{"value":"/ Returns whether the wrapped subscriber would enable the current span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151331,"byte_end":151404,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151409,"byte_end":151418,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153074,"byte_end":153079,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"event","qualname":"<Context>::event","value":"pub fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records the provided `event` with the wrapped subscriber.","sig":null,"attributes":[{"value":"/ Records the provided `event` with the wrapped subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151909,"byte_end":151970,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151975,"byte_end":151978,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151983,"byte_end":151994,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":151999,"byte_end":152002,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - The subscriber is free to expect that the event's callsite has been","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152007,"byte_end":152080,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/   [registered][register], and may panic or fail to observe the event if this is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152085,"byte_end":152168,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/   not the case. The `tracing` crate's macros ensure that all events are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152173,"byte_end":152248,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/   registered, but if the event is constructed through other means, the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152253,"byte_end":152327,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/   user is responsible for ensuring that [`register_callsite`][register]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152332,"byte_end":152407,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/   has been called prior to calling this method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152412,"byte_end":152463,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ - This does _not_ call [`enabled`] on the inner subscriber. If the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152468,"byte_end":152538,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/   caller wishes to apply the wrapped subscriber's filter before choosing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152543,"byte_end":152619,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   whether to record the event, it may first call [`Context::enabled`] to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152624,"byte_end":152700,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/   check whether the event would be enabled. This allows `Layer`s to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152705,"byte_end":152776,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/   elide constructing the event if it would not be recorded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152781,"byte_end":152844,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152849,"byte_end":152852,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [register]: tracing_core::subscriber::Subscriber::register_callsite()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152857,"byte_end":152930,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ [`enabled`]: tracing_core::subscriber::Subscriber::enabled()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":152935,"byte_end":152999,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ [`Context::enabled`]: Context::enabled()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153004,"byte_end":153048,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153053,"byte_end":153062,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155574,"byte_end":155584,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"event_span","qualname":"<Context>::event_span","value":"pub fn event_span(&Self, &Event) -> Option<SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SpanRef`] for the parent span of the given [`Event`], if\n it has a parent.","sig":null,"attributes":[{"value":"/ Returns a [`SpanRef`] for the parent span of the given [`Event`], if","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153218,"byte_end":153290,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ it has a parent.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153295,"byte_end":153315,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153320,"byte_end":153323,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If the event has an explicitly overridden parent, this method returns","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153328,"byte_end":153401,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ a reference to that span. If the event's parent is the current span,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153406,"byte_end":153478,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ this returns a reference to the current span, if there is one. If this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153483,"byte_end":153557,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ returns `None`, then either the event's parent was explicitly set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153562,"byte_end":153634,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ `None`, or the event's parent was defined contextually, but no span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153639,"byte_end":153710,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ is currently entered.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153715,"byte_end":153740,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153745,"byte_end":153748,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Compared to [`Context::current_span`] and [`Context::lookup_current`],","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153753,"byte_end":153827,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ this respects overrides provided by the [`Event`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153832,"byte_end":153886,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153891,"byte_end":153894,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Compared to [`Event::parent`], this automatically falls back to the contextual","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153899,"byte_end":153981,"line_start":125,"line_end":125,"column_start":5,"column_end":87}},{"value":"/ span, if required.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":153986,"byte_end":154008,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154013,"byte_end":154016,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154021,"byte_end":154032,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ use tracing::{Event, Subscriber};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154037,"byte_end":154074,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154079,"byte_end":154108,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/     layer::{Context, Layer},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154113,"byte_end":154145,"line_start":131,"line_end":131,"column_start":5,"column_end":37}},{"value":"/     prelude::*,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154150,"byte_end":154169,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/     registry::LookupSpan,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154174,"byte_end":154203,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154208,"byte_end":154214,"line_start":134,"line_end":134,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154219,"byte_end":154222,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ struct PrintingLayer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154227,"byte_end":154252,"line_start":136,"line_end":136,"column_start":5,"column_end":30}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154257,"byte_end":154295,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154300,"byte_end":154309,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154314,"byte_end":154371,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154376,"byte_end":154381,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/     fn on_event(&self, event: &Event, ctx: Context<S>) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154386,"byte_end":154446,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.event_span(event);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154451,"byte_end":154496,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         println!(\"Event in span: {:?}\", span.map(|s| s.name()));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154501,"byte_end":154569,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154574,"byte_end":154583,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154588,"byte_end":154593,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154598,"byte_end":154601,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154606,"byte_end":154700,"line_start":147,"line_end":147,"column_start":5,"column_end":99}},{"value":"/     tracing::info!(\"no span\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154705,"byte_end":154739,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/     // Prints: Event in span: None","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154744,"byte_end":154782,"line_start":149,"line_end":149,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154787,"byte_end":154790,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     let span = tracing::info_span!(\"span\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154795,"byte_end":154842,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/     tracing::info!(parent: &span, \"explicitly specified\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154847,"byte_end":154909,"line_start":152,"line_end":152,"column_start":5,"column_end":67}},{"value":"/     // Prints: Event in span: Some(\"span\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154914,"byte_end":154960,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154965,"byte_end":154968,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     let _guard = span.enter();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":154973,"byte_end":155007,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/     tracing::info!(\"contextual span\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155012,"byte_end":155054,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/     // Prints: Event in span: Some(\"span\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155059,"byte_end":155105,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ });","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155110,"byte_end":155117,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155122,"byte_end":155129,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155134,"byte_end":155137,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155142,"byte_end":155207,"line_start":161,"line_end":161,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155212,"byte_end":155282,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155287,"byte_end":155359,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155364,"byte_end":155425,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155430,"byte_end":155492,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155497,"byte_end":155533,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155538,"byte_end":155548,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155553,"byte_end":155562,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156191,"byte_end":156199,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Context>::metadata","value":"pub fn metadata(&Self, &span::Id) -> Option<&'static Metadata> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns metadata for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns metadata for the span with the given `id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":155972,"byte_end":156040,"line_start":183,"line_end":183,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156045,"byte_end":156048,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156053,"byte_end":156127,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156132,"byte_end":156165,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156170,"byte_end":156179,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157096,"byte_end":157100,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"span","qualname":"<Context>::span","value":"pub fn span(&Self, &span::Id) -> Option<registry::SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span with the given `id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156397,"byte_end":156470,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156475,"byte_end":156478,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156483,"byte_end":156557,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156562,"byte_end":156595,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156600,"byte_end":156603,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156608,"byte_end":156673,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156678,"byte_end":156748,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156753,"byte_end":156825,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156830,"byte_end":156891,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156896,"byte_end":156958,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":156963,"byte_end":156999,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157004,"byte_end":157014,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157019,"byte_end":157022,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157027,"byte_end":157070,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157075,"byte_end":157084,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157967,"byte_end":157973,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"exists","qualname":"<Context>::exists","value":"pub fn exists(&Self, &span::Id) -> bool where S: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an active span exists for the given `Id`.","sig":null,"attributes":[{"value":"/ Returns `true` if an active span exists for the given `Id`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157459,"byte_end":157522,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157527,"byte_end":157530,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157535,"byte_end":157600,"line_start":226,"line_end":226,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157605,"byte_end":157675,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157680,"byte_end":157752,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157757,"byte_end":157818,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157823,"byte_end":157885,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157890,"byte_end":157926,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157931,"byte_end":157941,"line_start":232,"line_end":232,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":157946,"byte_end":157955,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158829,"byte_end":158843,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"lookup_current","qualname":"<Context>::lookup_current","value":"pub fn lookup_current(&Self) -> Option<registry::SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span that the wrapped subscriber considers\n to be the current.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span that the wrapped subscriber considers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158144,"byte_end":158220,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/ to be the current.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158225,"byte_end":158247,"line_start":242,"line_end":242,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158252,"byte_end":158255,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then we are not currently within a span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158260,"byte_end":158328,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158333,"byte_end":158336,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158341,"byte_end":158406,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158411,"byte_end":158481,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158486,"byte_end":158558,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158563,"byte_end":158624,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158629,"byte_end":158691,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158696,"byte_end":158732,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158737,"byte_end":158747,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158752,"byte_end":158755,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158760,"byte_end":158803,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":158808,"byte_end":158817,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162353,"byte_end":162363,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"span_scope","qualname":"<Context>::span_scope","value":"pub fn span_scope(&Self, &span::Id) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the specified span and ending with the\n root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161247,"byte_end":161318,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the specified span and ending with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161323,"byte_end":161396,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ root of the trace tree and ending with the current span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161401,"byte_end":161461,"line_start":319,"line_end":319,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161466,"byte_end":161469,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161474,"byte_end":161539,"line_start":321,"line_end":321,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161544,"byte_end":161634,"line_start":322,"line_end":322,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161639,"byte_end":161702,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161707,"byte_end":161801,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161806,"byte_end":161851,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161856,"byte_end":161866,"line_start":326,"line_end":326,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161871,"byte_end":161874,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161879,"byte_end":161944,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":161949,"byte_end":162019,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162024,"byte_end":162096,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162101,"byte_end":162162,"line_start":331,"line_end":331,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162167,"byte_end":162229,"line_start":332,"line_end":332,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162234,"byte_end":162270,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162275,"byte_end":162285,"line_start":334,"line_end":334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162290,"byte_end":162293,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162298,"byte_end":162341,"line_start":336,"line_end":336,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163656,"byte_end":163667,"line_start":364,"line_end":364,"column_start":12,"column_end":23},"name":"event_scope","qualname":"<Context>::event_scope","value":"pub fn event_scope(&Self, &Event) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the parent span of the specified event,\n and ending with the root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162529,"byte_end":162600,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the parent span of the specified event,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162605,"byte_end":162679,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ and ending with the root of the trace tree and ending with the current span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162684,"byte_end":162764,"line_start":346,"line_end":346,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162769,"byte_end":162772,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162777,"byte_end":162842,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162847,"byte_end":162937,"line_start":349,"line_end":349,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":162942,"byte_end":163005,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163010,"byte_end":163104,"line_start":351,"line_end":351,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163109,"byte_end":163154,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163159,"byte_end":163169,"line_start":353,"line_end":353,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163174,"byte_end":163177,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163182,"byte_end":163247,"line_start":355,"line_end":355,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163252,"byte_end":163322,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163327,"byte_end":163399,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163404,"byte_end":163465,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163470,"byte_end":163532,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163537,"byte_end":163573,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163578,"byte_end":163588,"line_start":361,"line_end":361,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163593,"byte_end":163596,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":163601,"byte_end":163644,"line_start":363,"line_end":363,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1917},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166368,"byte_end":166375,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Layered","qualname":"::layer::layered::Layered","value":"Layered {  }","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926}],"decl_id":null,"docs":" A [`Subscriber`] composed of a `Subscriber` wrapped by one or more\n [`Layer`]s.","sig":null,"attributes":[{"value":"/ A [`Subscriber`] composed of a `Subscriber` wrapped by one or more","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166176,"byte_end":166246,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ [`Layer`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166247,"byte_end":166262,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166263,"byte_end":166266,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166267,"byte_end":166294,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":166295,"byte_end":166339,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":167989,"byte_end":167991,"line_start":76,"line_end":76,"column_start":12,"column_end":14},"name":"is","qualname":"<Layered<L, S>>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this [`Subscriber`] is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this [`Subscriber`] is the same type as `T`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":167911,"byte_end":167977,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":168191,"byte_end":168203,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Layered<L, S>>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this [`Subscriber`] value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this [`Subscriber`] value if it is of type `T`,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":168071,"byte_end":168148,"line_start":80,"line_end":80,"column_start":5,"column_end":82}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":168153,"byte_end":168179,"line_start":81,"line_end":81,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":674},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106596,"byte_end":106601,"line_start":709,"line_end":709,"column_start":11,"column_end":16},"name":"Layer","qualname":"::layer::Layer","value":"Layer<S>","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695}],"decl_id":null,"docs":" A composable handler for `tracing` events.","sig":null,"attributes":[{"value":"/ A composable handler for `tracing` events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106226,"byte_end":106272,"line_start":701,"line_end":701,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106273,"byte_end":106276,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ A `Layer` implements a behavior for recording or collecting traces that can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106277,"byte_end":106356,"line_start":703,"line_end":703,"column_start":1,"column_end":80}},{"value":"/ be composed together with other `Layer`s to build a [`Subscriber`]. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106357,"byte_end":106436,"line_start":704,"line_end":704,"column_start":1,"column_end":80}},{"value":"/ [module-level documentation](crate::layer) for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106437,"byte_end":106496,"line_start":705,"line_end":705,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106497,"byte_end":106500,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106501,"byte_end":106545,"line_start":707,"line_end":707,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108160,"byte_end":108168,"line_start":741,"line_end":741,"column_start":8,"column_end":16},"name":"on_layer","qualname":"::layer::Layer::on_layer","value":"pub fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Performs late initialization when attaching a `Layer` to a\n [`Subscriber`].","sig":null,"attributes":[{"value":"/ Performs late initialization when attaching a `Layer` to a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106655,"byte_end":106717,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106722,"byte_end":106741,"line_start":715,"line_end":715,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106746,"byte_end":106749,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is a callback that is called when the `Layer` is added to a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106754,"byte_end":106822,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ [`Subscriber`] (e.g. in [`Layer::with_subscriber`] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106827,"byte_end":106885,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/ [`SubscriberExt::with`]). Since this can only occur before the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106890,"byte_end":106956,"line_start":719,"line_end":719,"column_start":5,"column_end":71}},{"value":"/ [`Subscriber`] has been set as the default, both the `Layer` and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":106961,"byte_end":107029,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ [`Subscriber`] are passed to this method _mutably_. This gives the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107034,"byte_end":107104,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ `Layer` the opportunity to set any of its own fields with values","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107109,"byte_end":107177,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/ recieved by method calls on the [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107182,"byte_end":107233,"line_start":723,"line_end":723,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107238,"byte_end":107241,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ For example, [`Filtered`] layers implement `on_layer` to call the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107246,"byte_end":107315,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ [`Subscriber`]'s [`register_filter`] method, and store the returned","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107320,"byte_end":107391,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ [`FilterId`] as a field.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107396,"byte_end":107424,"line_start":727,"line_end":727,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107429,"byte_end":107432,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ **Note** In most cases, `Layer` implementations will not need to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107437,"byte_end":107505,"line_start":729,"line_end":729,"column_start":5,"column_end":73}},{"value":"/ implement this method. However, in cases where a type implementing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107510,"byte_end":107580,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ `Layer` wraps one or more other types that implement `Layer`, like the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107585,"byte_end":107659,"line_start":731,"line_end":731,"column_start":5,"column_end":79}},{"value":"/ [`Layered`] and [`Filtered`] types in this crate, that type MUST ensure","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107664,"byte_end":107739,"line_start":732,"line_end":732,"column_start":5,"column_end":80}},{"value":"/ that the inner `Layer`s' `on_layer` methods are called. Otherwise,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107744,"byte_end":107814,"line_start":733,"line_end":733,"column_start":5,"column_end":75}},{"value":"/ functionality that relies on `on_layer`, such as [per-layer filtering],","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107819,"byte_end":107894,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ may not work correctly.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107899,"byte_end":107926,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107931,"byte_end":107934,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107939,"byte_end":107980,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ [`register_filter`]: crate::registry::LookupSpan::register_filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":107985,"byte_end":108054,"line_start":738,"line_end":738,"column_start":5,"column_end":74}},{"value":"/ [per-layer filtering]: #per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108059,"byte_end":108106,"line_start":739,"line_end":739,"column_start":5,"column_end":52}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108111,"byte_end":108152,"line_start":740,"line_end":740,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110461,"byte_end":110478,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::layer::Layer::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Registers a new callsite with this layer, returning whether or not\n the layer is interested in being notified about the callsite, similarly\n to [`Subscriber::register_callsite`].","sig":null,"attributes":[{"value":"/ Registers a new callsite with this layer, returning whether or not","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108241,"byte_end":108311,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ the layer is interested in being notified about the callsite, similarly","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108316,"byte_end":108391,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ to [`Subscriber::register_callsite`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108396,"byte_end":108437,"line_start":747,"line_end":747,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108442,"byte_end":108445,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ By default, this returns [`Interest::always()`] if [`self.enabled`] returns","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108450,"byte_end":108529,"line_start":749,"line_end":749,"column_start":5,"column_end":84}},{"value":"/ true, or [`Interest::never()`] if it returns false.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108534,"byte_end":108589,"line_start":750,"line_end":750,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108594,"byte_end":108597,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108602,"byte_end":108667,"line_start":752,"line_end":752,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This method (and <a href=\"#method.enabled\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108672,"byte_end":108742,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ <code>Layer::enabled</code></a>) determine whether a span or event is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108747,"byte_end":108820,"line_start":754,"line_end":754,"column_start":5,"column_end":78}},{"value":"/ globally enabled, <em>not</em> whether the individual layer will be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108825,"byte_end":108896,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ notified about that span or event. This is intended to be used","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108901,"byte_end":108967,"line_start":756,"line_end":756,"column_start":5,"column_end":71}},{"value":"/ by layers that implement filtering for the entire stack. Layers which do","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":108972,"byte_end":109048,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ not wish to be notified about certain spans or events but do not wish to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109053,"byte_end":109129,"line_start":758,"line_end":758,"column_start":5,"column_end":81}},{"value":"/ globally disable them should ignore those spans or events in their","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109134,"byte_end":109204,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ <a href=\"#method.on_event\"><code>on_event</code></a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109209,"byte_end":109266,"line_start":760,"line_end":760,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_enter\"><code>on_enter</code></a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109271,"byte_end":109328,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_exit\"><code>on_exit</code></a>, and other notification","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109333,"byte_end":109411,"line_start":762,"line_end":762,"column_start":5,"column_end":83}},{"value":"/ methods.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109416,"byte_end":109428,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109433,"byte_end":109443,"line_start":764,"line_end":764,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109448,"byte_end":109451,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109456,"byte_end":109529,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109534,"byte_end":109552,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109557,"byte_end":109560,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Layers may also implement this method to perform any behaviour that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109565,"byte_end":109636,"line_start":769,"line_end":769,"column_start":5,"column_end":76}},{"value":"/ should be run once per callsite. If the layer wishes to use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109641,"byte_end":109704,"line_start":770,"line_end":770,"column_start":5,"column_end":68}},{"value":"/ `register_callsite` for per-callsite behaviour, but does not want to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109709,"byte_end":109781,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/ globally enable or disable those callsites, it should always return","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109786,"byte_end":109857,"line_start":772,"line_end":772,"column_start":5,"column_end":76}},{"value":"/ [`Interest::always()`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109862,"byte_end":109889,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109894,"byte_end":109897,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109902,"byte_end":109942,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ [`Subscriber::register_callsite`]: tracing_core::Subscriber::register_callsite()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":109947,"byte_end":110031,"line_start":776,"line_end":776,"column_start":5,"column_end":89}},{"value":"/ [`Interest::never()`]: tracing_core::subscriber::Interest::never()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110036,"byte_end":110106,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ [`Interest::always()`]: tracing_core::subscriber::Interest::always()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110111,"byte_end":110183,"line_start":778,"line_end":778,"column_start":5,"column_end":77}},{"value":"/ [`self.enabled`]: Layer::enabled()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110188,"byte_end":110226,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/ [`Layer::enabled`]: Layer::enabled()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110231,"byte_end":110271,"line_start":780,"line_end":780,"column_start":5,"column_end":45}},{"value":"/ [`on_event`]: Layer::on_event()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110276,"byte_end":110311,"line_start":781,"line_end":781,"column_start":5,"column_end":40}},{"value":"/ [`on_enter`]: Layer::on_enter()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110316,"byte_end":110351,"line_start":782,"line_end":782,"column_start":5,"column_end":40}},{"value":"/ [`on_exit`]: Layer::on_exit()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110356,"byte_end":110389,"line_start":783,"line_end":783,"column_start":5,"column_end":38}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110394,"byte_end":110453,"line_start":784,"line_end":784,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112358,"byte_end":112365,"line_start":825,"line_end":825,"column_start":8,"column_end":15},"name":"enabled","qualname":"::layer::Layer::enabled","value":"pub fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Returns `true` if this layer is interested in a span or event with the\n given `metadata` in the current [`Context`], similarly to\n [`Subscriber::enabled`].","sig":null,"attributes":[{"value":"/ Returns `true` if this layer is interested in a span or event with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110690,"byte_end":110764,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ given `metadata` in the current [`Context`], similarly to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110769,"byte_end":110830,"line_start":794,"line_end":794,"column_start":5,"column_end":66}},{"value":"/ [`Subscriber::enabled`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110835,"byte_end":110863,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110868,"byte_end":110871,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ By default, this always returns `true`, allowing the wrapped subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110876,"byte_end":110951,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ to choose to disable the span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110956,"byte_end":110990,"line_start":798,"line_end":798,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":110995,"byte_end":110998,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111003,"byte_end":111068,"line_start":800,"line_end":800,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This method (and <a href=\"#method.register_callsite\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111073,"byte_end":111153,"line_start":801,"line_end":801,"column_start":5,"column_end":85}},{"value":"/ <code>Layer::register_callsite</code></a>) determine whether a span or event is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111158,"byte_end":111241,"line_start":802,"line_end":802,"column_start":5,"column_end":88}},{"value":"/ globally enabled, <em>not</em> whether the individual layer will be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111246,"byte_end":111317,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ notified about that span or event. This is intended to be used","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111322,"byte_end":111388,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/ by layers that implement filtering for the entire stack. Layers which do","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111393,"byte_end":111469,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/ not wish to be notified about certain spans or events but do not wish to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111474,"byte_end":111550,"line_start":806,"line_end":806,"column_start":5,"column_end":81}},{"value":"/ globally disable them should ignore those spans or events in their","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111555,"byte_end":111625,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ <a href=\"#method.on_event\"><code>on_event</code></a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111630,"byte_end":111687,"line_start":808,"line_end":808,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_enter\"><code>on_enter</code></a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111692,"byte_end":111749,"line_start":809,"line_end":809,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_exit\"><code>on_exit</code></a>, and other notification","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111754,"byte_end":111832,"line_start":810,"line_end":810,"column_start":5,"column_end":83}},{"value":"/ methods.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111837,"byte_end":111849,"line_start":811,"line_end":811,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111854,"byte_end":111864,"line_start":812,"line_end":812,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111869,"byte_end":111872,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111877,"byte_end":111880,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111885,"byte_end":111958,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111963,"byte_end":111981,"line_start":816,"line_end":816,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111986,"byte_end":111989,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":111994,"byte_end":112034,"line_start":818,"line_end":818,"column_start":5,"column_end":45}},{"value":"/ [`Subscriber::enabled`]: tracing_core::Subscriber::enabled()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112039,"byte_end":112103,"line_start":819,"line_end":819,"column_start":5,"column_end":69}},{"value":"/ [`Layer::register_callsite`]: Layer::register_callsite()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112108,"byte_end":112168,"line_start":820,"line_end":820,"column_start":5,"column_end":65}},{"value":"/ [`on_event`]: Layer::on_event()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112173,"byte_end":112208,"line_start":821,"line_end":821,"column_start":5,"column_end":40}},{"value":"/ [`on_enter`]: Layer::on_enter()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112213,"byte_end":112248,"line_start":822,"line_end":822,"column_start":5,"column_end":40}},{"value":"/ [`on_exit`]: Layer::on_exit()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112253,"byte_end":112286,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112291,"byte_end":112350,"line_start":824,"line_end":824,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112595,"byte_end":112606,"line_start":832,"line_end":832,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"::layer::Layer::on_new_span","value":"pub fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a new span was constructed with the given\n `Attributes` and `Id`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a new span was constructed with the given","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112486,"byte_end":112556,"line_start":830,"line_end":830,"column_start":5,"column_end":75}},{"value":"/ `Attributes` and `Id`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112561,"byte_end":112587,"line_start":831,"line_end":831,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":112958,"byte_end":112972,"line_start":840,"line_end":840,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::layer::Layer::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113379,"byte_end":113388,"line_start":849,"line_end":849,"column_start":8,"column_end":17},"name":"on_record","qualname":"::layer::Layer::on_record","value":"pub fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the given `Id` recorded the given\n `values`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the given `Id` recorded the given","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113029,"byte_end":113103,"line_start":844,"line_end":844,"column_start":5,"column_end":79}},{"value":"/ `values`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113108,"byte_end":113121,"line_start":845,"line_end":845,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113854,"byte_end":113869,"line_start":856,"line_end":856,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"::layer::Layer::on_follows_from","value":"pub fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the ID `span` recorded that it\n follows from the span with the ID `follows`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the ID `span` recorded that it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113472,"byte_end":113543,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ follows from the span with the ID `follows`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113548,"byte_end":113596,"line_start":852,"line_end":852,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114983,"byte_end":114996,"line_start":879,"line_end":879,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"::layer::Layer::event_enabled","value":"pub fn event_enabled(&Self, &Event, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Called before [`on_event`], to determine if `on_event` should be called.","sig":null,"attributes":[{"value":"/ Called before [`on_event`], to determine if `on_event` should be called.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":113946,"byte_end":114022,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114027,"byte_end":114030,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114035,"byte_end":114094,"line_start":860,"line_end":860,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114099,"byte_end":114164,"line_start":861,"line_end":861,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114169,"byte_end":114172,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ **Note**: This method determines whether an event is globally enabled,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114177,"byte_end":114251,"line_start":863,"line_end":863,"column_start":5,"column_end":79}},{"value":"/ *not* whether the individual `Layer` will be notified about the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114256,"byte_end":114323,"line_start":864,"line_end":864,"column_start":5,"column_end":72}},{"value":"/ event. This is intended to be used by `Layer`s that implement","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114328,"byte_end":114393,"line_start":865,"line_end":865,"column_start":5,"column_end":70}},{"value":"/ filtering for the entire stack. `Layer`s which do not wish to be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114398,"byte_end":114466,"line_start":866,"line_end":866,"column_start":5,"column_end":73}},{"value":"/ notified about certain events but do not wish to globally disable them","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114471,"byte_end":114545,"line_start":867,"line_end":867,"column_start":5,"column_end":79}},{"value":"/ should ignore those events in their [on_event][Self::on_event].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114550,"byte_end":114617,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114622,"byte_end":114625,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ </pre></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114630,"byte_end":114646,"line_start":870,"line_end":870,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114651,"byte_end":114654,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114659,"byte_end":114732,"line_start":872,"line_end":872,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114737,"byte_end":114755,"line_start":873,"line_end":873,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114760,"byte_end":114763,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ [`on_event`]: Self::on_event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114768,"byte_end":114800,"line_start":875,"line_end":875,"column_start":5,"column_end":37}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114805,"byte_end":114845,"line_start":876,"line_end":876,"column_start":5,"column_end":45}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114850,"byte_end":114909,"line_start":877,"line_end":877,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":114914,"byte_end":114923,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115139,"byte_end":115147,"line_start":884,"line_end":884,"column_start":8,"column_end":16},"name":"on_event","qualname":"::layer::Layer::on_event","value":"pub fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that an event has occurred.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that an event has occurred.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115080,"byte_end":115131,"line_start":883,"line_end":883,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115279,"byte_end":115287,"line_start":887,"line_end":887,"column_start":8,"column_end":16},"name":"on_enter","qualname":"::layer::Layer::on_enter","value":"pub fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the given ID was entered.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the given ID was entered.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115205,"byte_end":115271,"line_start":886,"line_end":886,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115416,"byte_end":115423,"line_start":890,"line_end":890,"column_start":8,"column_end":15},"name":"on_exit","qualname":"::layer::Layer::on_exit","value":"pub fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that the span with the given ID was exited.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that the span with the given ID was exited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115341,"byte_end":115408,"line_start":889,"line_end":889,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115557,"byte_end":115565,"line_start":893,"line_end":893,"column_start":8,"column_end":16},"name":"on_close","qualname":"::layer::Layer::on_close","value":"pub fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that the span with the given ID has been closed.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that the span with the given ID has been closed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115477,"byte_end":115549,"line_start":892,"line_end":892,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115738,"byte_end":115750,"line_start":897,"line_end":897,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"::layer::Layer::on_id_change","value":"pub fn on_id_change(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span ID has been cloned, and that the\n subscriber returned a different ID.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span ID has been cloned, and that the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115618,"byte_end":115686,"line_start":895,"line_end":895,"column_start":5,"column_end":73}},{"value":"/ subscriber returned a different ID.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115691,"byte_end":115730,"line_start":896,"line_end":896,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119062,"byte_end":119070,"line_start":996,"line_end":996,"column_start":8,"column_end":16},"name":"and_then","qualname":"::layer::Layer::and_then","value":"pub fn and_then<L>(Self, L) -> Layered<L, Self, S> where L: Layer<S>,\nSelf: Sized","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Composes this layer around the given `Layer`, returning a `Layered`\n struct implementing `Layer`.","sig":null,"attributes":[{"value":"/ Composes this layer around the given `Layer`, returning a `Layered`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115822,"byte_end":115893,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ struct implementing `Layer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115898,"byte_end":115930,"line_start":900,"line_end":900,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115935,"byte_end":115938,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ The returned `Layer` will call the methods on this `Layer` and then","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":115943,"byte_end":116014,"line_start":902,"line_end":902,"column_start":5,"column_end":76}},{"value":"/ those of the new `Layer`, before calling the methods on the subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116019,"byte_end":116093,"line_start":903,"line_end":903,"column_start":5,"column_end":79}},{"value":"/ it wraps. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116098,"byte_end":116124,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116129,"byte_end":116132,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116137,"byte_end":116148,"line_start":906,"line_end":906,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116153,"byte_end":116196,"line_start":907,"line_end":907,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116201,"byte_end":116236,"line_start":908,"line_end":908,"column_start":5,"column_end":40}},{"value":"/ pub struct FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116241,"byte_end":116266,"line_start":909,"line_end":909,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116271,"byte_end":116285,"line_start":910,"line_end":910,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116290,"byte_end":116295,"line_start":911,"line_end":911,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116300,"byte_end":116303,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ pub struct BarLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116308,"byte_end":116333,"line_start":913,"line_end":913,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116338,"byte_end":116352,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116357,"byte_end":116362,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116367,"byte_end":116370,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116375,"byte_end":116404,"line_start":917,"line_end":917,"column_start":5,"column_end":34}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116409,"byte_end":116423,"line_start":918,"line_end":918,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116428,"byte_end":116433,"line_start":919,"line_end":919,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116438,"byte_end":116441,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116446,"byte_end":116493,"line_start":921,"line_end":921,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116498,"byte_end":116512,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116517,"byte_end":116522,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116527,"byte_end":116530,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for BarLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116535,"byte_end":116582,"line_start":925,"line_end":925,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116587,"byte_end":116601,"line_start":926,"line_end":926,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116606,"byte_end":116611,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116616,"byte_end":116619,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # impl FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116624,"byte_end":116645,"line_start":929,"line_end":929,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116650,"byte_end":116684,"line_start":930,"line_end":930,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116689,"byte_end":116696,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ # impl BarLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116701,"byte_end":116722,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116727,"byte_end":116761,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116766,"byte_end":116773,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116778,"byte_end":116803,"line_start":935,"line_end":935,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116808,"byte_end":116842,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116847,"byte_end":116854,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116859,"byte_end":116933,"line_start":938,"line_end":938,"column_start":5,"column_end":79}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116938,"byte_end":116992,"line_start":939,"line_end":939,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":116997,"byte_end":117065,"line_start":940,"line_end":940,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117070,"byte_end":117117,"line_start":941,"line_end":941,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117122,"byte_end":117159,"line_start":942,"line_end":942,"column_start":5,"column_end":42}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117164,"byte_end":117220,"line_start":943,"line_end":943,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117225,"byte_end":117282,"line_start":944,"line_end":944,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117287,"byte_end":117321,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117326,"byte_end":117359,"line_start":946,"line_end":946,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117364,"byte_end":117371,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117376,"byte_end":117412,"line_start":948,"line_end":948,"column_start":5,"column_end":41}},{"value":"/     .and_then(BarLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117417,"byte_end":117451,"line_start":949,"line_end":949,"column_start":5,"column_end":39}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117456,"byte_end":117502,"line_start":950,"line_end":950,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117507,"byte_end":117514,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117519,"byte_end":117522,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Multiple layers may be composed in this manner:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117527,"byte_end":117578,"line_start":953,"line_end":953,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117583,"byte_end":117586,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117591,"byte_end":117602,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117607,"byte_end":117650,"line_start":956,"line_end":956,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117655,"byte_end":117690,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/ # pub struct FooLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117695,"byte_end":117723,"line_start":958,"line_end":958,"column_start":5,"column_end":33}},{"value":"/ # pub struct BarLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117728,"byte_end":117756,"line_start":959,"line_end":959,"column_start":5,"column_end":33}},{"value":"/ # pub struct MySubscriber {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117761,"byte_end":117793,"line_start":960,"line_end":960,"column_start":5,"column_end":37}},{"value":"/ # impl<S: Subscriber> Layer<S> for FooLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117798,"byte_end":117848,"line_start":961,"line_end":961,"column_start":5,"column_end":55}},{"value":"/ # impl<S: Subscriber> Layer<S> for BarLayer {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117853,"byte_end":117903,"line_start":962,"line_end":962,"column_start":5,"column_end":55}},{"value":"/ # impl FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117908,"byte_end":117929,"line_start":963,"line_end":963,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117934,"byte_end":117968,"line_start":964,"line_end":964,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117973,"byte_end":117980,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ # impl BarLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":117985,"byte_end":118006,"line_start":966,"line_end":966,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118011,"byte_end":118045,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118050,"byte_end":118057,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118062,"byte_end":118087,"line_start":969,"line_end":969,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118092,"byte_end":118126,"line_start":970,"line_end":970,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118131,"byte_end":118138,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118143,"byte_end":118217,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118222,"byte_end":118276,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118281,"byte_end":118349,"line_start":974,"line_end":974,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118354,"byte_end":118401,"line_start":975,"line_end":975,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118406,"byte_end":118443,"line_start":976,"line_end":976,"column_start":5,"column_end":42}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118448,"byte_end":118504,"line_start":977,"line_end":977,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118509,"byte_end":118566,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118571,"byte_end":118605,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118610,"byte_end":118643,"line_start":980,"line_end":980,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118648,"byte_end":118655,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ pub struct BazLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118660,"byte_end":118685,"line_start":982,"line_end":982,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118690,"byte_end":118704,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118709,"byte_end":118714,"line_start":984,"line_end":984,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118719,"byte_end":118722,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for BazLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118727,"byte_end":118774,"line_start":986,"line_end":986,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118779,"byte_end":118793,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118798,"byte_end":118803,"line_start":988,"line_end":988,"column_start":5,"column_end":10}},{"value":"/ # impl BazLayer { fn new() -> Self { BazLayer {} } }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118808,"byte_end":118864,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118869,"byte_end":118872,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118877,"byte_end":118913,"line_start":991,"line_end":991,"column_start":5,"column_end":41}},{"value":"/     .and_then(BarLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118918,"byte_end":118952,"line_start":992,"line_end":992,"column_start":5,"column_end":39}},{"value":"/     .and_then(BazLayer::new())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118957,"byte_end":118991,"line_start":993,"line_end":993,"column_start":5,"column_end":39}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":118996,"byte_end":119042,"line_start":994,"line_end":994,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119047,"byte_end":119054,"line_start":995,"line_end":995,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120780,"byte_end":120795,"line_start":1048,"line_end":1048,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::layer::Layer::with_subscriber","value":"pub fn with_subscriber(Self, S) -> Layered<Self, S> where Self: Sized","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Composes this `Layer` with the given [`Subscriber`], returning a\n `Layered` struct that implements [`Subscriber`].","sig":null,"attributes":[{"value":"/ Composes this `Layer` with the given [`Subscriber`], returning a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119307,"byte_end":119375,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}},{"value":"/ `Layered` struct that implements [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119380,"byte_end":119432,"line_start":1006,"line_end":1006,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119437,"byte_end":119440,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ The returned `Layered` subscriber will call the methods on this `Layer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119445,"byte_end":119520,"line_start":1008,"line_end":1008,"column_start":5,"column_end":80}},{"value":"/ and then those of the wrapped subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119525,"byte_end":119570,"line_start":1009,"line_end":1009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119575,"byte_end":119578,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119583,"byte_end":119599,"line_start":1011,"line_end":1011,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119604,"byte_end":119615,"line_start":1012,"line_end":1012,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119620,"byte_end":119663,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119668,"byte_end":119703,"line_start":1014,"line_end":1014,"column_start":5,"column_end":40}},{"value":"/ pub struct FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119708,"byte_end":119733,"line_start":1015,"line_end":1015,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119738,"byte_end":119752,"line_start":1016,"line_end":1016,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119757,"byte_end":119762,"line_start":1017,"line_end":1017,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119767,"byte_end":119770,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119775,"byte_end":119804,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119809,"byte_end":119823,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119828,"byte_end":119833,"line_start":1021,"line_end":1021,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119838,"byte_end":119841,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119846,"byte_end":119893,"line_start":1023,"line_end":1023,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119898,"byte_end":119912,"line_start":1024,"line_end":1024,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119917,"byte_end":119922,"line_start":1025,"line_end":1025,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119927,"byte_end":119930,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # impl FooLayer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119935,"byte_end":119956,"line_start":1027,"line_end":1027,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":119961,"byte_end":119995,"line_start":1028,"line_end":1028,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120000,"byte_end":120007,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120012,"byte_end":120037,"line_start":1030,"line_end":1030,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120042,"byte_end":120076,"line_start":1031,"line_end":1031,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120081,"byte_end":120088,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120093,"byte_end":120160,"line_start":1033,"line_end":1033,"column_start":5,"column_end":72}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120165,"byte_end":120219,"line_start":1034,"line_end":1034,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120224,"byte_end":120292,"line_start":1035,"line_end":1035,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120297,"byte_end":120344,"line_start":1036,"line_end":1036,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &tracing_core::Event) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120349,"byte_end":120400,"line_start":1037,"line_end":1037,"column_start":5,"column_end":56}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120405,"byte_end":120461,"line_start":1038,"line_end":1038,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120466,"byte_end":120523,"line_start":1039,"line_end":1039,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120528,"byte_end":120562,"line_start":1040,"line_end":1040,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120567,"byte_end":120600,"line_start":1041,"line_end":1041,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120605,"byte_end":120612,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120617,"byte_end":120653,"line_start":1043,"line_end":1043,"column_start":5,"column_end":41}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120658,"byte_end":120704,"line_start":1044,"line_end":1044,"column_start":5,"column_end":51}},{"value":"/```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120709,"byte_end":120715,"line_start":1045,"line_end":1045,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120720,"byte_end":120723,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":120728,"byte_end":120772,"line_start":1047,"line_end":1047,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121555,"byte_end":121566,"line_start":1067,"line_end":1067,"column_start":8,"column_end":19},"name":"with_filter","qualname":"::layer::Layer::with_filter","value":"pub fn with_filter<F>(Self, F) -> filter::Filtered<Self, F, S> where\nSelf: Sized, F: Filter<S>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Combines `self` with a [`Filter`], returning a [`Filtered`] layer.","sig":null,"attributes":[{"value":"/ Combines `self` with a [`Filter`], returning a [`Filtered`] layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121054,"byte_end":121124,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121129,"byte_end":121132,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ The [`Filter`] will control which spans and events are enabled for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121137,"byte_end":121207,"line_start":1059,"line_end":1059,"column_start":5,"column_end":75}},{"value":"/ this layer. See [the trait-level documentation][plf] for details on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121212,"byte_end":121283,"line_start":1060,"line_end":1060,"column_start":5,"column_end":76}},{"value":"/ per-layer filtering.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121288,"byte_end":121312,"line_start":1061,"line_end":1061,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121317,"byte_end":121320,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121325,"byte_end":121366,"line_start":1063,"line_end":1063,"column_start":5,"column_end":46}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121371,"byte_end":121414,"line_start":1064,"line_end":1064,"column_start":5,"column_end":48}},{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121419,"byte_end":121469,"line_start":1065,"line_end":1065,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126343,"byte_end":126348,"line_start":1191,"line_end":1191,"column_start":8,"column_end":13},"name":"boxed","qualname":"::layer::Layer::boxed","value":"pub fn boxed(Self) -> Box<dyn Layer<S> + Send + Sync + 'static> where\nSelf: Sized, Self: Layer<S> + Send + Sync + 'static, S: Subscriber","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Erases the type of this [`Layer`], returning a [`Box`]ed `dyn\n Layer` trait object.","sig":null,"attributes":[{"value":"/ Erases the type of this [`Layer`], returning a [`Box`]ed `dyn","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121733,"byte_end":121798,"line_start":1075,"line_end":1075,"column_start":5,"column_end":70}},{"value":"/ Layer` trait object.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121803,"byte_end":121827,"line_start":1076,"line_end":1076,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121832,"byte_end":121835,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ This can be used when a function returns a `Layer` which may be of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121840,"byte_end":121910,"line_start":1078,"line_end":1078,"column_start":5,"column_end":75}},{"value":"/ one of several types, or when a `Layer` subscriber has a very long type","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121915,"byte_end":121990,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ signature.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":121995,"byte_end":122009,"line_start":1080,"line_end":1080,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122014,"byte_end":122017,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122022,"byte_end":122036,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122041,"byte_end":122044,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ The following example will *not* compile, because the value assigned to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122049,"byte_end":122124,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ `log_layer` may have one of several different types:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122129,"byte_end":122185,"line_start":1085,"line_end":1085,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122190,"byte_end":122193,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122198,"byte_end":122217,"line_start":1087,"line_end":1087,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122222,"byte_end":122281,"line_start":1088,"line_end":1088,"column_start":5,"column_end":64}},{"value":"/ use tracing_subscriber::{Layer, filter::LevelFilter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122286,"byte_end":122355,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ use std::{path::PathBuf, fs::File, io};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122360,"byte_end":122403,"line_start":1090,"line_end":1090,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122408,"byte_end":122411,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ /// Configures whether logs are emitted to a file, to stdout, or to stderr.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122416,"byte_end":122495,"line_start":1092,"line_end":1092,"column_start":5,"column_end":84}},{"value":"/ pub enum LogConfig {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122500,"byte_end":122524,"line_start":1093,"line_end":1093,"column_start":5,"column_end":29}},{"value":"/     File(PathBuf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122529,"byte_end":122551,"line_start":1094,"line_end":1094,"column_start":5,"column_end":27}},{"value":"/     Stdout,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122556,"byte_end":122571,"line_start":1095,"line_end":1095,"column_start":5,"column_end":20}},{"value":"/     Stderr,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122576,"byte_end":122591,"line_start":1096,"line_end":1096,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122596,"byte_end":122601,"line_start":1097,"line_end":1097,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122606,"byte_end":122609,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let config = // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122614,"byte_end":122637,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}},{"value":"/     # LogConfig::Stdout;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122642,"byte_end":122670,"line_start":1100,"line_end":1100,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122675,"byte_end":122678,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ // Depending on the config, construct a layer of one of several types.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122683,"byte_end":122757,"line_start":1102,"line_end":1102,"column_start":5,"column_end":79}},{"value":"/ let log_layer = match config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122762,"byte_end":122796,"line_start":1103,"line_end":1103,"column_start":5,"column_end":39}},{"value":"/     // If logging to a file, use a maximally-verbose configuration.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122801,"byte_end":122872,"line_start":1104,"line_end":1104,"column_start":5,"column_end":76}},{"value":"/     LogConfig::File(path) => {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122877,"byte_end":122911,"line_start":1105,"line_end":1105,"column_start":5,"column_end":39}},{"value":"/         let file = File::create(path)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122916,"byte_end":122959,"line_start":1106,"line_end":1106,"column_start":5,"column_end":48}},{"value":"/         tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":122964,"byte_end":123008,"line_start":1107,"line_end":1107,"column_start":5,"column_end":49}},{"value":"/             .with_thread_ids(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123013,"byte_end":123051,"line_start":1108,"line_end":1108,"column_start":5,"column_end":43}},{"value":"/             .with_thread_names(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123056,"byte_end":123096,"line_start":1109,"line_end":1109,"column_start":5,"column_end":45}},{"value":"/             // Selecting the JSON logging format changes the layer's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123101,"byte_end":123173,"line_start":1110,"line_end":1110,"column_start":5,"column_end":77}},{"value":"/             // type.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123178,"byte_end":123202,"line_start":1111,"line_end":1111,"column_start":5,"column_end":29}},{"value":"/             .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123207,"byte_end":123230,"line_start":1112,"line_end":1112,"column_start":5,"column_end":28}},{"value":"/             .with_span_list(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123235,"byte_end":123272,"line_start":1113,"line_end":1113,"column_start":5,"column_end":42}},{"value":"/             // Setting the writer to use our log file changes the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123277,"byte_end":123346,"line_start":1114,"line_end":1114,"column_start":5,"column_end":74}},{"value":"/             // layer's type again.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123351,"byte_end":123389,"line_start":1115,"line_end":1115,"column_start":5,"column_end":43}},{"value":"/             .with_writer(file)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123394,"byte_end":123428,"line_start":1116,"line_end":1116,"column_start":5,"column_end":39}},{"value":"/     },","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123433,"byte_end":123443,"line_start":1117,"line_end":1117,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123448,"byte_end":123451,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/     // If logging to stdout, use a pretty, human-readable configuration.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123456,"byte_end":123532,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/     LogConfig::Stdout => tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123537,"byte_end":123598,"line_start":1120,"line_end":1120,"column_start":5,"column_end":66}},{"value":"/         // Selecting the \"pretty\" logging format changes the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123603,"byte_end":123667,"line_start":1121,"line_end":1121,"column_start":5,"column_end":69}},{"value":"/         // layer's type!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123672,"byte_end":123700,"line_start":1122,"line_end":1122,"column_start":5,"column_end":33}},{"value":"/         .pretty()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123705,"byte_end":123726,"line_start":1123,"line_end":1123,"column_start":5,"column_end":26}},{"value":"/         .with_writer(io::stdout)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123731,"byte_end":123767,"line_start":1124,"line_end":1124,"column_start":5,"column_end":41}},{"value":"/         // Add a filter based on the RUST_LOG environment variable;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123772,"byte_end":123843,"line_start":1125,"line_end":1125,"column_start":5,"column_end":76}},{"value":"/         // this changes the type too!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123848,"byte_end":123889,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/         .and_then(tracing_subscriber::EnvFilter::from_default_env()),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123894,"byte_end":123967,"line_start":1127,"line_end":1127,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123972,"byte_end":123975,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/     // If logging to stdout, only log errors and warnings.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":123980,"byte_end":124042,"line_start":1129,"line_end":1129,"column_start":5,"column_end":67}},{"value":"/     LogConfig::Stderr => tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124047,"byte_end":124108,"line_start":1130,"line_end":1130,"column_start":5,"column_end":66}},{"value":"/         // Changing the writer changes the layer's type","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124113,"byte_end":124172,"line_start":1131,"line_end":1131,"column_start":5,"column_end":64}},{"value":"/         .with_writer(io::stderr)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124177,"byte_end":124213,"line_start":1132,"line_end":1132,"column_start":5,"column_end":41}},{"value":"/         // Only log the `WARN` and `ERROR` levels. Adding a filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124218,"byte_end":124288,"line_start":1133,"line_end":1133,"column_start":5,"column_end":75}},{"value":"/         // changes the layer's type to `Filtered<LevelFilter, ...>`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124293,"byte_end":124365,"line_start":1134,"line_end":1134,"column_start":5,"column_end":77}},{"value":"/         .with_filter(LevelFilter::WARN),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124370,"byte_end":124414,"line_start":1135,"line_end":1135,"column_start":5,"column_end":49}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124419,"byte_end":124425,"line_start":1136,"line_end":1136,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124430,"byte_end":124433,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124438,"byte_end":124472,"line_start":1138,"line_end":1138,"column_start":5,"column_end":39}},{"value":"/     .with(log_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124477,"byte_end":124501,"line_start":1139,"line_end":1139,"column_start":5,"column_end":29}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124506,"byte_end":124522,"line_start":1140,"line_end":1140,"column_start":5,"column_end":21}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124527,"byte_end":124541,"line_start":1141,"line_end":1141,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124546,"byte_end":124553,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124558,"byte_end":124561,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ However, adding a call to `.boxed()` after each match arm erases the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124566,"byte_end":124638,"line_start":1144,"line_end":1144,"column_start":5,"column_end":77}},{"value":"/ layer's type, so this code *does* compile:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124643,"byte_end":124689,"line_start":1145,"line_end":1145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124694,"byte_end":124697,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124702,"byte_end":124709,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124714,"byte_end":124773,"line_start":1148,"line_end":1148,"column_start":5,"column_end":64}},{"value":"/ # use tracing_subscriber::{Layer, filter::LevelFilter, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124778,"byte_end":124849,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ # use std::{path::PathBuf, fs::File, io};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124854,"byte_end":124899,"line_start":1150,"line_end":1150,"column_start":5,"column_end":50}},{"value":"/ # pub enum LogConfig {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124904,"byte_end":124930,"line_start":1151,"line_end":1151,"column_start":5,"column_end":31}},{"value":"/ #    File(PathBuf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124935,"byte_end":124958,"line_start":1152,"line_end":1152,"column_start":5,"column_end":28}},{"value":"/ #    Stdout,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124963,"byte_end":124979,"line_start":1153,"line_end":1153,"column_start":5,"column_end":21}},{"value":"/ #    Stderr,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":124984,"byte_end":125000,"line_start":1154,"line_end":1154,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125005,"byte_end":125012,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}},{"value":"/ # let config = LogConfig::Stdout;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125017,"byte_end":125054,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ let log_layer = match config {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125059,"byte_end":125093,"line_start":1157,"line_end":1157,"column_start":5,"column_end":39}},{"value":"/     LogConfig::File(path) => {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125098,"byte_end":125132,"line_start":1158,"line_end":1158,"column_start":5,"column_end":39}},{"value":"/         let file = File::create(path)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125137,"byte_end":125180,"line_start":1159,"line_end":1159,"column_start":5,"column_end":48}},{"value":"/         tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125185,"byte_end":125229,"line_start":1160,"line_end":1160,"column_start":5,"column_end":49}},{"value":"/             .with_thread_ids(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125234,"byte_end":125272,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/             .with_thread_names(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125277,"byte_end":125317,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}},{"value":"/             .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125322,"byte_end":125345,"line_start":1163,"line_end":1163,"column_start":5,"column_end":28}},{"value":"/             .with_span_list(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125350,"byte_end":125387,"line_start":1164,"line_end":1164,"column_start":5,"column_end":42}},{"value":"/             .with_writer(file)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125392,"byte_end":125426,"line_start":1165,"line_end":1165,"column_start":5,"column_end":39}},{"value":"/             // Erase the type by boxing the layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125431,"byte_end":125484,"line_start":1166,"line_end":1166,"column_start":5,"column_end":58}},{"value":"/             .boxed()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125489,"byte_end":125513,"line_start":1167,"line_end":1167,"column_start":5,"column_end":29}},{"value":"/     },","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125518,"byte_end":125528,"line_start":1168,"line_end":1168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125533,"byte_end":125536,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/     LogConfig::Stdout => tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125541,"byte_end":125602,"line_start":1170,"line_end":1170,"column_start":5,"column_end":66}},{"value":"/         .pretty()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125607,"byte_end":125628,"line_start":1171,"line_end":1171,"column_start":5,"column_end":26}},{"value":"/         .with_writer(io::stdout)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125633,"byte_end":125669,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"/         .and_then(tracing_subscriber::EnvFilter::from_default_env())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125674,"byte_end":125746,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/         // Erase the type by boxing the layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125751,"byte_end":125800,"line_start":1174,"line_end":1174,"column_start":5,"column_end":54}},{"value":"/         .boxed(),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125805,"byte_end":125826,"line_start":1175,"line_end":1175,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125831,"byte_end":125834,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/     LogConfig::Stderr => tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125839,"byte_end":125900,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}},{"value":"/         .with_writer(io::stderr)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125905,"byte_end":125941,"line_start":1178,"line_end":1178,"column_start":5,"column_end":41}},{"value":"/         .with_filter(LevelFilter::WARN)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125946,"byte_end":125989,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/         // Erase the type by boxing the layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":125994,"byte_end":126043,"line_start":1180,"line_end":1180,"column_start":5,"column_end":54}},{"value":"/         .boxed(),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126048,"byte_end":126069,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126074,"byte_end":126080,"line_start":1182,"line_end":1182,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126085,"byte_end":126088,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126093,"byte_end":126127,"line_start":1184,"line_end":1184,"column_start":5,"column_end":39}},{"value":"/     .with(log_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126132,"byte_end":126156,"line_start":1185,"line_end":1185,"column_start":5,"column_end":29}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126161,"byte_end":126177,"line_start":1186,"line_end":1186,"column_start":5,"column_end":21}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126182,"byte_end":126196,"line_start":1187,"line_end":1187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126201,"byte_end":126208,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126213,"byte_end":126260,"line_start":1189,"line_end":1189,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":126571,"byte_end":126583,"line_start":1201,"line_end":1201,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::layer::Layer::downcast_raw","value":"pub unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1932},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":127151,"byte_end":127157,"line_start":1220,"line_end":1220,"column_start":15,"column_end":21},"name":"Filter","qualname":"::layer::Filter","value":"Filter<S>","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941}],"decl_id":null,"docs":" A per-[`Layer`] filter that determines whether a span or event is enabled\n for an individual layer.","sig":null,"attributes":[{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":128032,"byte_end":128039,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"name":"enabled","qualname":"::layer::Filter::enabled","value":"pub fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Returns `true` if this layer is interested in a span or event with the\n given [`Metadata`] in the current [`Context`], similarly to\n [`Subscriber::enabled`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":134213,"byte_end":134229,"line_start":1350,"line_end":1350,"column_start":12,"column_end":28},"name":"callsite_enabled","qualname":"::layer::Filter::callsite_enabled","value":"pub fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Returns an [`Interest`] indicating whether this layer will [always],\n [sometimes], or [never] be interested in the given [`Metadata`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":135993,"byte_end":136007,"line_start":1384,"line_end":1384,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"::layer::Filter::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Returns an optional hint of the highest [verbosity level][level] that\n this `Filter` will enable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":136383,"byte_end":136394,"line_start":1394,"line_end":1394,"column_start":12,"column_end":23},"name":"on_new_span","qualname":"::layer::Filter::on_new_span","value":"pub fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Notifies this filter that a new span was constructed with the given\n `Attributes` and `Id`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":136826,"byte_end":136835,"line_start":1405,"line_end":1405,"column_start":12,"column_end":21},"name":"on_record","qualname":"::layer::Filter::on_record","value":"pub fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given `Id` recorded the given\n `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":137218,"byte_end":137226,"line_start":1413,"line_end":1413,"column_start":12,"column_end":20},"name":"on_enter","qualname":"::layer::Filter::on_enter","value":"pub fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID was entered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":137572,"byte_end":137579,"line_start":1421,"line_end":1421,"column_start":12,"column_end":19},"name":"on_exit","qualname":"::layer::Filter::on_exit","value":"pub fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID was exited.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":137930,"byte_end":137938,"line_start":1429,"line_end":1429,"column_start":12,"column_end":20},"name":"on_close","qualname":"::layer::Filter::on_close","value":"pub fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID has been closed.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":696},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138115,"byte_end":138128,"line_start":1436,"line_end":1436,"column_start":11,"column_end":24},"name":"SubscriberExt","qualname":"::layer::SubscriberExt","value":"SubscriberExt: Subscriber + crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":697}],"decl_id":null,"docs":" Extension trait adding a `with(Layer)` combinator to `Subscriber`s.\n","sig":null,"attributes":[{"value":"/ Extension trait adding a `with(Layer)` combinator to `Subscriber`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138033,"byte_end":138104,"line_start":1435,"line_end":1435,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138222,"byte_end":138226,"line_start":1438,"line_end":1438,"column_start":8,"column_end":12},"name":"with","qualname":"::layer::SubscriberExt::with","value":"pub fn with<L>(Self, L) -> Layered<L, Self> where L: Layer<Self>, Self: Sized","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Wraps `self` with the provided `layer`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with the provided `layer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138171,"byte_end":138214,"line_start":1437,"line_end":1437,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1942},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138447,"byte_end":138455,"line_start":1449,"line_end":1449,"column_start":12,"column_end":20},"name":"Identity","qualname":"::layer::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":1943}],"decl_id":null,"docs":" A layer that does nothing.\n","sig":null,"attributes":[{"value":"/ A layer that does nothing.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138372,"byte_end":138402,"line_start":1447,"line_end":1447,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148923,"byte_end":148926,"line_start":1795,"line_end":1795,"column_start":12,"column_end":15},"name":"new","qualname":"<Identity>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Identity` layer.\n","sig":null,"attributes":[{"value":"/ Returns a new `Identity` layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148876,"byte_end":148911,"line_start":1794,"line_end":1794,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":725},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754}],"decl_id":null,"docs":" Extension traits and other utilities to make working with subscribers more\n ergonomic.\n","sig":null,"attributes":[{"value":"/ Extension traits and other utilities to make working with subscribers more","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183550,"byte_end":183628,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ ergonomic.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183629,"byte_end":183643,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":739},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184667,"byte_end":184684,"line_start":23,"line_end":23,"column_start":11,"column_end":28},"name":"SubscriberInitExt","qualname":"::util::SubscriberInitExt","value":"SubscriberInitExt","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Extension trait adding utility methods for subscriber initialization.","sig":null,"attributes":[{"value":"/ Extension trait adding utility methods for subscriber initialization.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183811,"byte_end":183884,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183885,"byte_end":183888,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait provides extension methods to make configuring and setting a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183889,"byte_end":183964,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ [default subscriber] more ergonomic. It is automatically implemented for all","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":183965,"byte_end":184045,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ types that can be converted into a [trace dispatcher]. Since `Dispatch`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184046,"byte_end":184121,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ implements `From<T>` for all `T: Subscriber`, all `Subscriber`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184122,"byte_end":184188,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ implementations will implement this extension trait as well. Types which","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184189,"byte_end":184265,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ can be converted into `Subscriber`s, such as builders that construct a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184266,"byte_end":184340,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `Subscriber`, may implement `Into<Dispatch>`, and will also receive an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184341,"byte_end":184415,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ implementation of this trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184416,"byte_end":184449,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184450,"byte_end":184453,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184454,"byte_end":184571,"line_start":21,"line_end":21,"column_start":1,"column_end":118}},{"value":"/ [trace dispatcher]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184572,"byte_end":184656,"line_start":22,"line_end":22,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185331,"byte_end":185342,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"set_default","qualname":"::util::SubscriberInitExt::set_default","value":"pub fn set_default(Self) -> dispatcher::DefaultGuard","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" Sets `self` as the [default subscriber] in the current scope, returning a\n guard that will unset it when dropped.","sig":null,"attributes":[{"value":"/ Sets `self` as the [default subscriber] in the current scope, returning a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184723,"byte_end":184800,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/ guard that will unset it when dropped.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184805,"byte_end":184847,"line_start":28,"line_end":28,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184852,"byte_end":184855,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also initialize","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184860,"byte_end":184935,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ a [`log`] compatibility layer. This allows the subscriber to consume","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":184940,"byte_end":185012,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185017,"byte_end":185075,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185080,"byte_end":185083,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185088,"byte_end":185205,"line_start":34,"line_end":34,"column_start":5,"column_end":122}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185210,"byte_end":185244,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185249,"byte_end":185272,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":186282,"byte_end":186290,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"try_init","qualname":"::util::SubscriberInitExt::try_init","value":"pub fn try_init(Self) -> Result<(), TryInitError>","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" Attempts to set `self` as the [global default subscriber] in the current\n scope, returning an error if one is already set.","sig":null,"attributes":[{"value":"/ Attempts to set `self` as the [global default subscriber] in the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185525,"byte_end":185601,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ scope, returning an error if one is already set.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185606,"byte_end":185658,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185663,"byte_end":185666,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also attempt to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185671,"byte_end":185746,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ initialize a [`log`] compatibility layer. This allows the subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185751,"byte_end":185826,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ consume `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185831,"byte_end":185897,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185902,"byte_end":185905,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if a global default subscriber has already","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185910,"byte_end":185985,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ been set, or if a `log` logger has already been set (when the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":185990,"byte_end":186055,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ \"tracing-log\" feature is enabled).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":186060,"byte_end":186098,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":186103,"byte_end":186106,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [global default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":186111,"byte_end":186235,"line_start":56,"line_end":56,"column_start":5,"column_end":129}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":186240,"byte_end":186274,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187792,"byte_end":187796,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"init","qualname":"::util::SubscriberInitExt::init","value":"pub fn init(Self)","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" Attempts to set `self` as the [global default subscriber] in the current\n scope, panicking if this fails.","sig":null,"attributes":[{"value":"/ Attempts to set `self` as the [global default subscriber] in the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187062,"byte_end":187138,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ scope, panicking if this fails.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187143,"byte_end":187178,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187183,"byte_end":187186,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also attempt to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187191,"byte_end":187266,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ initialize a [`log`] compatibility layer. This allows the subscriber to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187271,"byte_end":187346,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ consume `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187351,"byte_end":187417,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187422,"byte_end":187425,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method panics if a global default subscriber has already been set,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187430,"byte_end":187505,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ or if a `log` logger has already been set (when the \"tracing-log\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187510,"byte_end":187579,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ feature is enabled).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187584,"byte_end":187608,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187613,"byte_end":187616,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [global default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187621,"byte_end":187745,"line_start":87,"line_end":87,"column_start":5,"column_end":129}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187750,"byte_end":187784,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188093,"byte_end":188105,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"TryInitError","qualname":"::util::TryInitError","value":"TryInitError {  }","parent":null,"children":[{"krate":0,"index":746}],"decl_id":null,"docs":" Error returned by [`try_init`](SubscriberInitExt::try_init) if a global default subscriber could not be initialized.\n","sig":null,"attributes":[{"value":"/ Error returned by [`try_init`](SubscriberInitExt::try_init) if a global default subscriber could not be initialized.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187961,"byte_end":188081,"line_start":97,"line_end":97,"column_start":1,"column_end":121}}]},{"kind":"Mod","id":{"krate":0,"index":2004},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reload","qualname":"::reload","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2127},{"krate":0,"index":2132},{"krate":0,"index":2136},{"krate":0,"index":2141},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2154},{"krate":0,"index":2051},{"krate":0,"index":2067},{"krate":0,"index":2078},{"krate":0,"index":2083},{"krate":0,"index":2095},{"krate":0,"index":2099},{"krate":0,"index":2103},{"krate":0,"index":2105}],"decl_id":null,"docs":" Wrapper for a `Layer` to allow it to be dynamically reloaded.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ Wrapper for a `Layer` to allow it to be dynamically reloaded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13322763,"byte_end":13322828,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13322829,"byte_end":13322832,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Layer` type] implementing the [`Layer` trait] or [`Filter` trait]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13322833,"byte_end":13322927,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ which wraps another type implementing the corresponding trait. This","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13322928,"byte_end":13322999,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows the wrapped type to be replaced with another","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323000,"byte_end":13323055,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/ instance of that type at runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323056,"byte_end":13323093,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323094,"byte_end":13323097,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This can be used in cases where a subset of `Layer` or `Filter` functionality","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323098,"byte_end":13323179,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ should be dynamically reconfigured, such as when filtering directives may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323180,"byte_end":13323257,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ change at runtime. Note that this layer introduces a (relatively small)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323258,"byte_end":13323333,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ amount of overhead, and should thus only be used as needed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323334,"byte_end":13323397,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323398,"byte_end":13323401,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323402,"byte_end":13323416,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323417,"byte_end":13323420,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Reloading a [global filtering](crate::layer#global-filtering) layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323421,"byte_end":13323493,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323494,"byte_end":13323497,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323498,"byte_end":13323509,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323510,"byte_end":13323534,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ use tracing_subscriber::{filter, fmt, reload, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323535,"byte_end":13323597,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ let filter = filter::LevelFilter::WARN;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323598,"byte_end":13323641,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ let (filter, reload_handle) = reload::Layer::new(filter);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323642,"byte_end":13323703,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323704,"byte_end":13323738,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/   .with(filter)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323739,"byte_end":13323758,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/   .with(fmt::Layer::default())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323759,"byte_end":13323793,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/   .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323794,"byte_end":13323808,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323809,"byte_end":13323814,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323815,"byte_end":13323864,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ # let _: &reload::Handle<filter::LevelFilter, tracing_subscriber::Registry> = &reload_handle;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323865,"byte_end":13323962,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323963,"byte_end":13323968,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13323969,"byte_end":13324003,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ reload_handle.modify(|filter| *filter = filter::LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324004,"byte_end":13324075,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324076,"byte_end":13324109,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324110,"byte_end":13324117,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324118,"byte_end":13324121,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Reloading a [`Filtered`](crate::filter::Filtered) layer:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324122,"byte_end":13324182,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324183,"byte_end":13324186,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324187,"byte_end":13324198,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324199,"byte_end":13324223,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ use tracing_subscriber::{filter, fmt, reload, prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324224,"byte_end":13324286,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let filtered_layer = fmt::Layer::default().with_filter(filter::LevelFilter::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324287,"byte_end":13324373,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324374,"byte_end":13324451,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324452,"byte_end":13324457,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324458,"byte_end":13324507,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<tracing_subscriber::Registry>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324508,"byte_end":13324595,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ # filter::LevelFilter, tracing_subscriber::Registry>,tracing_subscriber::Registry>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324596,"byte_end":13324682,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ # = &reload_handle;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324683,"byte_end":13324706,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324707,"byte_end":13324712,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324713,"byte_end":13324747,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/   .with(filtered_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324748,"byte_end":13324775,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/   .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324776,"byte_end":13324790,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324791,"byte_end":13324825,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ reload_handle.modify(|layer| *layer.filter_mut() = filter::LevelFilter::INFO);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324826,"byte_end":13324908,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324909,"byte_end":13324942,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324943,"byte_end":13324950,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324951,"byte_end":13324954,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324955,"byte_end":13324966,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324967,"byte_end":13324970,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The [`Layer`] implementation is unable to implement downcasting functionality,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13324971,"byte_end":13325053,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ so certain [`Layer`] will fail to downcast if wrapped in a `reload::Layer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325054,"byte_end":13325133,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325134,"byte_end":13325137,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you only want to be able to dynamically change the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325138,"byte_end":13325195,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/ `Filter` on a layer, prefer wrapping that `Filter` in the `reload::Layer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325196,"byte_end":13325274,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325275,"byte_end":13325278,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Filter` trait]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325279,"byte_end":13325321,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/ [`Layer` type]: Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325322,"byte_end":13325347,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/ [`Layer` trait]: super::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325348,"byte_end":13325388,"line_start":66,"line_end":66,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2127},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325741,"byte_end":13325746,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Layer","qualname":"::reload::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" Wraps a `Layer` or `Filter`, allowing it to be reloaded dynamically at runtime.\n","sig":null,"attributes":[{"value":"/ Wraps a `Layer` or `Filter`, allowing it to be reloaded dynamically at runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13325629,"byte_end":13325712,"line_start":81,"line_end":81,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":2136},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326204,"byte_end":13326210,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"Handle","qualname":"::reload::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140}],"decl_id":null,"docs":" Allows reloading the state of an associated [`Layer`](crate::layer::Layer).\n","sig":null,"attributes":[{"value":"/ Allows reloading the state of an associated [`Layer`](crate::layer::Layer).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326096,"byte_end":13326175,"line_start":92,"line_end":92,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326367,"byte_end":13326372,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"Error","qualname":"::reload::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2146}],"decl_id":null,"docs":" Indicates that an error occurred when reloading a layer.\n","sig":null,"attributes":[{"value":"/ Indicates that an error occurred when reloading a layer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326278,"byte_end":13326338,"line_start":99,"line_end":99,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330666,"byte_end":13330669,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<L, S>>::new","value":"pub fn new(L) -> (Self, Handle<L, S>)","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given [`Layer`] or [`Filter`], returning a `reload::Layer`\n and a `Handle` that allows the inner value to be modified at runtime.","sig":null,"attributes":[{"value":"/ Wraps the given [`Layer`] or [`Filter`], returning a `reload::Layer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330416,"byte_end":13330488,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ and a `Handle` that allows the inner value to be modified at runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330493,"byte_end":13330566,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330571,"byte_end":13330574,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330579,"byte_end":13330613,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330618,"byte_end":13330654,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331078,"byte_end":13331084,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"handle","qualname":"<Layer<L, S>>::handle","value":"pub fn handle(&Self) -> Handle<L, S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` that can be used to reload the wrapped [`Layer`] or [`Filter`].","sig":null,"attributes":[{"value":"/ Returns a `Handle` that can be used to reload the wrapped [`Layer`] or [`Filter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330891,"byte_end":13330977,"line_start":248,"line_end":248,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330982,"byte_end":13330985,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330990,"byte_end":13331024,"line_start":250,"line_end":250,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::filter::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331029,"byte_end":13331066,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331880,"byte_end":13331886,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"reload","qualname":"<Handle<L, S>>::reload","value":"pub fn reload<impl Into<L>: Into<L>>(&Self, impl Into<L>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current [`Layer`] or [`Filter`] with the provided `new_value`.","sig":null,"attributes":[{"value":"/ Replace the current [`Layer`] or [`Filter`] with the provided `new_value`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331281,"byte_end":13331359,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331364,"byte_end":13331367,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`Handle::reload`] cannot be used with the [`Filtered`] layer; use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331372,"byte_end":13331442,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ [`Handle::modify`] instead (see [this issue] for additional details).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331447,"byte_end":13331520,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331525,"byte_end":13331528,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ However, if the _only_ the [`Filter`]  needs to be modified, use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331533,"byte_end":13331601,"line_start":268,"line_end":268,"column_start":5,"column_end":73}},{"value":"/ `reload::Layer` to wrap the `Filter` directly.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331606,"byte_end":13331656,"line_start":269,"line_end":269,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331661,"byte_end":13331664,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331669,"byte_end":13331703,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331708,"byte_end":13331744,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331749,"byte_end":13331790,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331795,"byte_end":13331798,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [this issue]: https://github.com/tokio-rs/tracing/issues/1629","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331803,"byte_end":13331868,"line_start":275,"line_end":275,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332168,"byte_end":13332174,"line_start":284,"line_end":284,"column_start":12,"column_end":18},"name":"modify","qualname":"<Handle<L, S>>::modify","value":"pub fn modify<impl FnOnce(&mut L): FnOnce(&mut L) ->\n              ()>(&Self, impl FnOnce(&mut L)) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a closure with a mutable reference to the current layer or filter,\n allowing it to be modified in place.\n","sig":null,"attributes":[{"value":"/ Invokes a closure with a mutable reference to the current layer or filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332033,"byte_end":13332111,"line_start":282,"line_end":282,"column_start":5,"column_end":83}},{"value":"/ allowing it to be modified in place.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332116,"byte_end":13332156,"line_start":283,"line_end":283,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332822,"byte_end":13332835,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"clone_current","qualname":"<Handle<L, S>>::clone_current","value":"pub fn clone_current(&Self) -> Option<L> where L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of the layer or filter's current value if it still exists.\n Otherwise, if the subscriber has been dropped, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns a clone of the layer or filter's current value if it still exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332661,"byte_end":13332739,"line_start":299,"line_end":299,"column_start":5,"column_end":83}},{"value":"/ Otherwise, if the subscriber has been dropped, returns `None`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332744,"byte_end":13332810,"line_start":300,"line_end":300,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333112,"byte_end":13333124,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"with_current","qualname":"<Handle<L, S>>::with_current","value":"pub fn with_current<T, impl FnOnce(&L) -> T: FnOnce(&L) ->\n                    T>(&Self, impl FnOnce(&L) -> T) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a closure with a borrowed reference to the current layer or filter,\n returning the result (or an error if the subscriber no longer exists).\n","sig":null,"attributes":[{"value":"/ Invokes a closure with a borrowed reference to the current layer or filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13332942,"byte_end":13333021,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/ returning the result (or an error if the subscriber no longer exists).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333026,"byte_end":13333100,"line_start":309,"line_end":309,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333843,"byte_end":13333854,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<Error>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error occurred because the layer was poisoned by\n a panic on another thread.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error occurred because the layer was poisoned by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333721,"byte_end":13333796,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ a panic on another thread.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333801,"byte_end":13333831,"line_start":338,"line_end":338,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334063,"byte_end":13334073,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"is_dropped","qualname":"<Error>::is_dropped","value":"pub fn is_dropped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error occurred because the `Subscriber`\n containing the reloadable layer was dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error occurred because the `Subscriber`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333932,"byte_end":13333998,"line_start":343,"line_end":343,"column_start":5,"column_end":71}},{"value":"/ containing the reloadable layer was dropped.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334003,"byte_end":13334051,"line_start":344,"line_end":344,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":2156},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fmt","qualname":"::fmt","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2429},{"krate":0,"index":2743},{"krate":0,"index":2787},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3478},{"krate":0,"index":3484},{"krate":0,"index":3032},{"krate":0,"index":3490},{"krate":0,"index":3497},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3066},{"krate":0,"index":3074},{"krate":0,"index":3076},{"krate":0,"index":3089},{"krate":0,"index":3097},{"krate":0,"index":3116},{"krate":0,"index":3147},{"krate":0,"index":3163}],"decl_id":null,"docs":" A `Subscriber` for formatting and logging `tracing` data.","sig":null,"attributes":[{"value":"cfg(all(feature = \"fmt\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ A `Subscriber` for formatting and logging `tracing` data.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336481,"byte_end":13336542,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336543,"byte_end":13336546,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336547,"byte_end":13336561,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336562,"byte_end":13336565,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs with context-aware,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336566,"byte_end":13336648,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ structured, event-based diagnostic information. This crate provides an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336649,"byte_end":13336723,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ implementation of the [`Subscriber`] trait that records `tracing`'s `Event`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336724,"byte_end":13336804,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ and `Span`s by formatting them as text and logging them to stdout.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336805,"byte_end":13336875,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336876,"byte_end":13336879,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336880,"byte_end":13336891,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336892,"byte_end":13336895,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml` file:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336896,"byte_end":13336942,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336943,"byte_end":13336946,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336947,"byte_end":13336958,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336959,"byte_end":13336977,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ tracing-subscriber = \"0.3\"","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13336978,"byte_end":13337008,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337009,"byte_end":13337016,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337017,"byte_end":13337020,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337021,"byte_end":13337075,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337076,"byte_end":13337079,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [msrv]: super#supported-rust-versions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337080,"byte_end":13337121,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337122,"byte_end":13337125,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Add the following to your executable to initialize the default subscriber:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337126,"byte_end":13337204,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337205,"byte_end":13337216,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337217,"byte_end":13337244,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337245,"byte_end":13337248,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::fmt::init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337249,"byte_end":13337285,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337286,"byte_end":13337293,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337294,"byte_end":13337297,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Filtering Events with Environment Variables","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337298,"byte_end":13337348,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337349,"byte_end":13337352,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The default subscriber installed by `init` enables you to filter events","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337353,"byte_end":13337428,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ at runtime using environment variables (using the [`EnvFilter`]).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337429,"byte_end":13337498,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337499,"byte_end":13337502,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The filter syntax is a superset of the [`env_logger`] syntax.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337503,"byte_end":13337568,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337569,"byte_end":13337572,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337573,"byte_end":13337589,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ - Setting `RUST_LOG=debug` enables all `Span`s and `Event`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337590,"byte_end":13337653,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/     set to the log level `DEBUG` or higher","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337654,"byte_end":13337700,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ - Setting `RUST_LOG=my_crate=trace` enables `Span`s and `Event`s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337701,"byte_end":13337769,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/     in `my_crate` at all log levels","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337770,"byte_end":13337809,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337810,"byte_end":13337813,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **Note**: This should **not** be called by libraries. Libraries should use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337814,"byte_end":13337892,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ [`tracing`] to publish `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337893,"byte_end":13337939,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337940,"byte_end":13337943,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Configuration","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337944,"byte_end":13337963,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337964,"byte_end":13337967,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ You can configure a subscriber instead of using the defaults with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13337968,"byte_end":13338037,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the following functions:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338038,"byte_end":13338066,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338067,"byte_end":13338070,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338071,"byte_end":13338089,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338090,"byte_end":13338093,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`FmtSubscriber`] formats and records `tracing` events as line-oriented logs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338094,"byte_end":13338179,"line_start":53,"line_end":53,"column_start":1,"column_end":86}},{"value":"/ You can create one by calling:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338180,"byte_end":13338214,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338215,"byte_end":13338218,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338219,"byte_end":13338230,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338231,"byte_end":13338277,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/     // ... add configuration","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338278,"byte_end":13338310,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338311,"byte_end":13338329,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338330,"byte_end":13338337,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338338,"byte_end":13338341,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ You can find the configuration methods for [`FmtSubscriber`] in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338342,"byte_end":13338409,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ [`SubscriberBuilder`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338410,"byte_end":13338436,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338437,"byte_end":13338440,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Formatters","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338441,"byte_end":13338458,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338459,"byte_end":13338462,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The output format used by the layer and subscriber in this module is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338463,"byte_end":13338535,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ represented by implementing the [`FormatEvent`] trait, and can be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338536,"byte_end":13338605,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ customized. This module provides a number of formatter implementations:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338606,"byte_end":13338681,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338682,"byte_end":13338685,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ * [`format::Full`]: The default formatter. This emits human-readable,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338686,"byte_end":13338759,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/   single-line logs for each event that occurs, with the current span context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338760,"byte_end":13338840,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/   displayed before the formatted representation of the event. See","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338841,"byte_end":13338910,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/   [here](format::Full#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338911,"byte_end":13338971,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338972,"byte_end":13338975,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * [`format::Compact`]: A variant of the default formatter, optimized for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13338976,"byte_end":13339052,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/   short line lengths. Fields from the current span context are appended to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339053,"byte_end":13339131,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/   the fields of the formatted event. See","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339132,"byte_end":13339176,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/   [here](format::Compact#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339177,"byte_end":13339240,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339241,"byte_end":13339244,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * [`format::Pretty`]: Emits excessively pretty, multi-line logs, optimized","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339245,"byte_end":13339323,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/   for human readability. This is primarily intended to be used in local","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339324,"byte_end":13339399,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/   development and debugging, or for command-line applications, where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339400,"byte_end":13339472,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/   automated analysis and compact storage of logs is less of a priority than","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339473,"byte_end":13339552,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/   readability and visual appeal. See [here](format::Pretty#example-output)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339553,"byte_end":13339631,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/   for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339632,"byte_end":13339656,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339657,"byte_end":13339660,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * [`format::Json`]: Outputs newline-delimited JSON logs. This is intended","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339661,"byte_end":13339738,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/   for production use with systems where structured logs are consumed as JSON","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339739,"byte_end":13339819,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/   by analysis and viewing tools. The JSON output is not optimized for human","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339820,"byte_end":13339899,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/   readability. See [here](format::Json#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339900,"byte_end":13339977,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339978,"byte_end":13339981,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ### Customizing Formatters","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13339982,"byte_end":13340012,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340013,"byte_end":13340016,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The formatting of log lines for spans and events is controlled by two","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340017,"byte_end":13340090,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/ traits, [`FormatEvent`] and [`FormatFields`]. The [`FormatEvent`] trait","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340091,"byte_end":13340166,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ determines the overall formatting of the log line, such as what information","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340167,"byte_end":13340246,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ from the event's metadata and span context is included and in what order.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340247,"byte_end":13340324,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ The [`FormatFields`] trait determines how fields &mdash; both the event's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340325,"byte_end":13340402,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ fields and fields on spans &mdash; are formatted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340403,"byte_end":13340456,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340457,"byte_end":13340460,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The [`fmt::format`] module provides several types which implement these traits,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340461,"byte_end":13340544,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/ many of which expose additional configuration options to customize their","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340545,"byte_end":13340621,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ output. The [`format::Format`] type implements common configuration used by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340622,"byte_end":13340701,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ all the formatters provided in this crate, and can be used as a builder to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340702,"byte_end":13340780,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ set specific formatting settings. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340781,"byte_end":13340831,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340832,"byte_end":13340835,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340836,"byte_end":13340843,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340844,"byte_end":13340876,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340877,"byte_end":13340880,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // Configure a custom event formatter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340881,"byte_end":13340922,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ let format = fmt::format()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340923,"byte_end":13340953,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/    .with_level(false) // don't include levels in formatted output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13340954,"byte_end":13341023,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/    .with_target(false) // don't include targets","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341024,"byte_end":13341075,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/    .with_thread_ids(true) // include the thread ID of the current thread","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341076,"byte_end":13341152,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/    .with_thread_names(true) // include the name of the current thread","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341153,"byte_end":13341226,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/    .compact(); // use the `Compact` formatting style.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341227,"byte_end":13341284,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341285,"byte_end":13341288,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ // Create a `fmt` subscriber that uses our custom event format, and set it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341289,"byte_end":13341367,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ // as the default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341368,"byte_end":13341390,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341391,"byte_end":13341420,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/     .event_format(format)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341421,"byte_end":13341450,"line_start":122,"line_end":122,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341451,"byte_end":13341467,"line_start":123,"line_end":123,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341468,"byte_end":13341475,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341476,"byte_end":13341479,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ However, if a specific output format is needed, other crates can","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341480,"byte_end":13341548,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ also implement [`FormatEvent`] and [`FormatFields`]. See those traits'","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341549,"byte_end":13341623,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ documentation for details on how to implement them.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341624,"byte_end":13341679,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341680,"byte_end":13341683,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ## Filters","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341684,"byte_end":13341698,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341699,"byte_end":13341702,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ If you want to filter the `tracing` `Events` based on environment","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341703,"byte_end":13341772,"line_start":132,"line_end":132,"column_start":1,"column_end":70}},{"value":"/ variables, you can use the [`EnvFilter`] as follows:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341773,"byte_end":13341829,"line_start":133,"line_end":133,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341830,"byte_end":13341833,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341834,"byte_end":13341845,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::EnvFilter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341846,"byte_end":13341884,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341885,"byte_end":13341888,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let filter = EnvFilter::from_default_env();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341889,"byte_end":13341936,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341937,"byte_end":13341944,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341945,"byte_end":13341948,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ As mentioned above, the [`EnvFilter`] allows `Span`s and `Event`s to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13341949,"byte_end":13342021,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/ be filtered at runtime by setting the `RUST_LOG` environment variable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342022,"byte_end":13342096,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342097,"byte_end":13342100,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ You can find the other available [`filter`]s in the documentation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342101,"byte_end":13342171,"line_start":144,"line_end":144,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342172,"byte_end":13342175,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ### Using Your Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342176,"byte_end":13342205,"line_start":146,"line_end":146,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342206,"byte_end":13342209,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Finally, once you have configured your `Subscriber`, you need to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342210,"byte_end":13342278,"line_start":148,"line_end":148,"column_start":1,"column_end":69}},{"value":"/ configure your executable to use it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342279,"byte_end":13342319,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342320,"byte_end":13342323,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ A subscriber can be installed globally using:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342324,"byte_end":13342373,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342374,"byte_end":13342385,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/ use tracing;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342386,"byte_end":13342402,"line_start":153,"line_end":153,"column_start":1,"column_end":17}},{"value":"/ use tracing_subscriber::FmtSubscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342403,"byte_end":13342445,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342446,"byte_end":13342449,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let subscriber = FmtSubscriber::new();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342450,"byte_end":13342492,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342493,"byte_end":13342496,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342497,"byte_end":13342552,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/     .map_err(|_err| eprintln!(\"Unable to set global default subscriber\"));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342553,"byte_end":13342631,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ // Note this will only fail if you try to set the global default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342632,"byte_end":13342700,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ // subscriber multiple times","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342701,"byte_end":13342733,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342734,"byte_end":13342741,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342742,"byte_end":13342745,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ### Composing Layers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342746,"byte_end":13342770,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342771,"byte_end":13342774,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Composing an [`EnvFilter`] `Layer` and a [format `Layer`][super::fmt::Layer]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342775,"byte_end":13342856,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342857,"byte_end":13342860,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342861,"byte_end":13342872,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, EnvFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342873,"byte_end":13342918,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342919,"byte_end":13342958,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342959,"byte_end":13342962,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342963,"byte_end":13342995,"line_start":172,"line_end":172,"column_start":1,"column_end":33}},{"value":"/     .with_target(false);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13342996,"byte_end":13343024,"line_start":173,"line_end":173,"column_start":1,"column_end":29}},{"value":"/ let filter_layer = EnvFilter::try_from_default_env()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343025,"byte_end":13343081,"line_start":174,"line_end":174,"column_start":1,"column_end":57}},{"value":"/     .or_else(|_| EnvFilter::try_new(\"info\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343082,"byte_end":13343130,"line_start":175,"line_end":175,"column_start":1,"column_end":49}},{"value":"/     .unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343131,"byte_end":13343149,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343150,"byte_end":13343153,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343154,"byte_end":13343188,"line_start":178,"line_end":178,"column_start":1,"column_end":35}},{"value":"/     .with(filter_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343189,"byte_end":13343216,"line_start":179,"line_end":179,"column_start":1,"column_end":28}},{"value":"/     .with(fmt_layer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343217,"byte_end":13343241,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343242,"byte_end":13343258,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343259,"byte_end":13343266,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343267,"byte_end":13343270,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`EnvFilter`]: super::filter::EnvFilter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343271,"byte_end":13343314,"line_start":184,"line_end":184,"column_start":1,"column_end":44}},{"value":"/ [`env_logger`]: https://docs.rs/env_logger/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343315,"byte_end":13343362,"line_start":185,"line_end":185,"column_start":1,"column_end":48}},{"value":"/ [`filter`]: super::filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343363,"byte_end":13343392,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ [`FmtSubscriber`]: Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343393,"byte_end":13343426,"line_start":187,"line_end":187,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343427,"byte_end":13343446,"line_start":188,"line_end":188,"column_start":1,"column_end":20}},{"value":"/     https://docs.rs/tracing/latest/tracing/trait.Subscriber.html","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343447,"byte_end":13343515,"line_start":189,"line_end":189,"column_start":1,"column_end":69}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343516,"byte_end":13343565,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/ [`fmt::format`]: mod@crate::fmt::format","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343566,"byte_end":13343609,"line_start":191,"line_end":191,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3170},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382474,"byte_end":13382479,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"Layer","qualname":"::fmt::fmt_layer::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180}],"decl_id":null,"docs":" A [`Layer`] that logs formatted representations of `tracing` events.","sig":null,"attributes":[{"value":"/ A [`Layer`] that logs formatted representations of `tracing` events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13380981,"byte_end":13381053,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381054,"byte_end":13381057,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381058,"byte_end":13381073,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381074,"byte_end":13381077,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Constructing a layer with the default configuration:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381078,"byte_end":13381134,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381135,"byte_end":13381138,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381139,"byte_end":13381150,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, Registry};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381151,"byte_end":13381195,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381196,"byte_end":13381235,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381236,"byte_end":13381239,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381240,"byte_end":13381280,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/     .with(fmt::Layer::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381281,"byte_end":13381318,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381319,"byte_end":13381322,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381323,"byte_end":13381388,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381389,"byte_end":13381396,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381397,"byte_end":13381400,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Overriding the layer's behavior:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381401,"byte_end":13381437,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381438,"byte_end":13381441,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381442,"byte_end":13381453,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, Registry};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381454,"byte_end":13381498,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381499,"byte_end":13381538,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381539,"byte_end":13381542,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381543,"byte_end":13381575,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/    .with_target(false) // don't include event targets when logging","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381576,"byte_end":13381646,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/    .with_level(false); // don't include event levels when logging","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381647,"byte_end":13381716,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381717,"byte_end":13381720,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default().with(fmt_layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381721,"byte_end":13381778,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ # tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381779,"byte_end":13381846,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381847,"byte_end":13381854,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381855,"byte_end":13381858,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Setting a custom event formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381859,"byte_end":13381896,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381897,"byte_end":13381900,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381901,"byte_end":13381912,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::{self, format, time};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381913,"byte_end":13381967,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13381968,"byte_end":13382007,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382008,"byte_end":13382011,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let fmt = format().with_timer(time::Uptime::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382012,"byte_end":13382071,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382072,"byte_end":13382104,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     .event_format(fmt)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382105,"byte_end":13382131,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     .with_target(false);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382132,"byte_end":13382160,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ # let subscriber = fmt_layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382161,"byte_end":13382261,"line_start":55,"line_end":55,"column_start":1,"column_end":101}},{"value":"/ # tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382262,"byte_end":13382329,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382330,"byte_end":13382337,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382338,"byte_end":13382341,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::layer::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382342,"byte_end":13382376,"line_start":59,"line_end":59,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382844,"byte_end":13382847,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<S>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`][self::Layer] with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`][self::Layer] with the default configuration.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382760,"byte_end":13382832,"line_start":77,"line_end":77,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384090,"byte_end":13384102,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"event_format","qualname":"<Layer<S, N, E, W>>::event_format","value":"pub fn event_format<E2>(Self, E2) -> Layer<S, N, E2, W> where\nE2: FormatEvent<S, N> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [event formatter][`FormatEvent`] that the layer being built will\n use to format events.","sig":null,"attributes":[{"value":"/ Sets the [event formatter][`FormatEvent`] that the layer being built will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383190,"byte_end":13383267,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ use to format events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383272,"byte_end":13383297,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383302,"byte_end":13383305,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The event formatter may be any type implementing the [`FormatEvent`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383310,"byte_end":13383382,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ trait, which is implemented for all functions taking a [`FmtContext`], a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383387,"byte_end":13383463,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ [`Writer`], and an [`Event`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383468,"byte_end":13383501,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383506,"byte_end":13383509,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383514,"byte_end":13383528,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383533,"byte_end":13383536,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Setting a type implementing [`FormatEvent`] as the formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383541,"byte_end":13383606,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383611,"byte_end":13383622,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::{self, format};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383627,"byte_end":13383675,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383680,"byte_end":13383683,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383688,"byte_end":13383716,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     .event_format(format().compact());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383721,"byte_end":13383763,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383768,"byte_end":13383814,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383819,"byte_end":13383860,"line_start":106,"line_end":106,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383865,"byte_end":13383952,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383957,"byte_end":13383964,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ [`FormatEvent`]: format::FormatEvent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383969,"byte_end":13384009,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/ [`Event`]: tracing::Event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384014,"byte_end":13384043,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/ [`Writer`]: format::Writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384048,"byte_end":13384078,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385048,"byte_end":13385064,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"map_event_format","qualname":"<Layer<S, N, E, W>>::map_event_format","value":"pub fn map_event_format<E2, impl FnOnce(E) -> E2: FnOnce(E) ->\n                        E2>(Self, impl FnOnce(E) -> E2) -> Layer<S, N, E2, W>\nwhere E2: FormatEvent<S, N> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the event formatter by applying a function to the existing event formatter.","sig":null,"attributes":[{"value":"/ Updates the event formatter by applying a function to the existing event formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384451,"byte_end":13384538,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384543,"byte_end":13384546,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This sets the event formatter that the layer being built will use to record fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384551,"byte_end":13384638,"line_start":128,"line_end":128,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384643,"byte_end":13384646,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384651,"byte_end":13384665,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384670,"byte_end":13384673,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Updating an event formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384678,"byte_end":13384710,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384715,"byte_end":13384718,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384723,"byte_end":13384734,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/ let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384739,"byte_end":13384787,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/     .map_event_format(|e| e.compact());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384792,"byte_end":13384835,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384840,"byte_end":13384886,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384891,"byte_end":13384932,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13384937,"byte_end":13385024,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385029,"byte_end":13385036,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386122,"byte_end":13386133,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"with_writer","qualname":"<Layer<S, N, E, W>>::with_writer","value":"pub fn with_writer<W2>(Self, W2) -> Layer<S, N, E, W2> where\nW2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`MakeWriter`] that the layer being built will use to write events.","sig":null,"attributes":[{"value":"/ Sets the [`MakeWriter`] that the layer being built will use to write events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385588,"byte_end":13385668,"line_start":158,"line_end":158,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385673,"byte_end":13385676,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385681,"byte_end":13385695,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385700,"byte_end":13385703,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Using `stderr` rather than `stdout`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385708,"byte_end":13385748,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385753,"byte_end":13385756,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385761,"byte_end":13385772,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385777,"byte_end":13385793,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385798,"byte_end":13385830,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385835,"byte_end":13385838,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385843,"byte_end":13385871,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/     .with_writer(io::stderr);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385876,"byte_end":13385909,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385914,"byte_end":13385960,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385965,"byte_end":13386006,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386011,"byte_end":13386098,"line_start":172,"line_end":172,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386103,"byte_end":13386110,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386595,"byte_end":13386601,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"writer","qualname":"<Layer<S, N, E, W>>::writer","value":"pub fn writer(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [writer] for this [`Layer`].","sig":null,"attributes":[{"value":"/ Borrows the [writer] for this [`Layer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386502,"byte_end":13386546,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386551,"byte_end":13386554,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [writer]: MakeWriter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386559,"byte_end":13386583,"line_start":190,"line_end":190,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387714,"byte_end":13387724,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"writer_mut","qualname":"<Layer<S, N, E, W>>::writer_mut","value":"pub fn writer_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the [writer] for this [`Layer`].","sig":null,"attributes":[{"value":"/ Mutably borrows the [writer] for this [`Layer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386654,"byte_end":13386706,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386711,"byte_end":13386714,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This method is primarily expected to be used with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386719,"byte_end":13386776,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386781,"byte_end":13386850,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386855,"byte_end":13386858,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386863,"byte_end":13386877,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386882,"byte_end":13386885,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386890,"byte_end":13386897,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386902,"byte_end":13386926,"line_start":203,"line_end":203,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{fmt,reload,Registry,prelude::*};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386931,"byte_end":13386994,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ # fn non_blocking<T: std::io::Write>(writer: T) -> (fn() -> std::io::Stdout) {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13386999,"byte_end":13387081,"line_start":205,"line_end":205,"column_start":5,"column_end":87}},{"value":"/ #   std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387086,"byte_end":13387109,"line_start":206,"line_end":206,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387114,"byte_end":13387121,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387126,"byte_end":13387143,"line_start":208,"line_end":208,"column_start":5,"column_end":22}},{"value":"/ let layer = fmt::layer().with_writer(non_blocking(std::io::stderr()));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387148,"byte_end":13387222,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ let (layer, reload_handle) = reload::Layer::new(layer);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387227,"byte_end":13387286,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387291,"byte_end":13387296,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387301,"byte_end":13387350,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<fmt::Layer<Registry, _, _, _>, Registry> = &reload_handle;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387355,"byte_end":13387442,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/ #","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387447,"byte_end":13387452,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be logged to stderr\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387457,"byte_end":13387500,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/ reload_handle.modify(|layer| *layer.writer_mut() = non_blocking(std::io::stdout()));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387505,"byte_end":13387593,"line_start":216,"line_end":216,"column_start":5,"column_end":93}},{"value":"/ info!(\"This will be logged to stdout\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387598,"byte_end":13387641,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387646,"byte_end":13387653,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387658,"byte_end":13387665,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387670,"byte_end":13387673,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [writer]: MakeWriter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13387678,"byte_end":13387702,"line_start":221,"line_end":221,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389039,"byte_end":13389055,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"with_test_writer","qualname":"<Layer<S, N, E, W>>::with_test_writer","value":"pub fn with_test_writer(Self) -> Layer<S, N, E, TestWriter>","parent":null,"children":[],"decl_id":null,"docs":" Configures the layer to support [`libtest`'s output capturing][capturing] when used in\n unit tests.","sig":null,"attributes":[{"value":"/ Configures the layer to support [`libtest`'s output capturing][capturing] when used in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388235,"byte_end":13388325,"line_start":238,"line_end":238,"column_start":5,"column_end":95}},{"value":"/ unit tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388330,"byte_end":13388345,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388350,"byte_end":13388353,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ See [`TestWriter`] for additional details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388358,"byte_end":13388404,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388409,"byte_end":13388412,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388417,"byte_end":13388431,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388436,"byte_end":13388439,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Using [`TestWriter`] to let `cargo test` capture test output:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388444,"byte_end":13388509,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388514,"byte_end":13388517,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388522,"byte_end":13388533,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388538,"byte_end":13388554,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388559,"byte_end":13388591,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388596,"byte_end":13388599,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388604,"byte_end":13388632,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     .with_test_writer();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388637,"byte_end":13388665,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388670,"byte_end":13388716,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388721,"byte_end":13388762,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388767,"byte_end":13388854,"line_start":255,"line_end":255,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388859,"byte_end":13388866,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ [capturing]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388871,"byte_end":13388887,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388892,"byte_end":13388977,"line_start":258,"line_end":258,"column_start":5,"column_end":90}},{"value":"/ [`TestWriter`]: super::writer::TestWriter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13388982,"byte_end":13389027,"line_start":259,"line_end":259,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390396,"byte_end":13390406,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"map_writer","qualname":"<Layer<S, N, E, W>>::map_writer","value":"pub fn map_writer<W2, impl FnOnce(W) -> W2: FnOnce(W) ->\n                  W2>(Self, impl FnOnce(W) -> W2) -> Layer<S, N, E, W2> where\nW2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389630,"byte_end":13389715,"line_start":281,"line_end":281,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389720,"byte_end":13389723,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This sets the [`MakeWriter`] that the layer being built will use to write events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389728,"byte_end":13389813,"line_start":283,"line_end":283,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389818,"byte_end":13389821,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389826,"byte_end":13389840,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389845,"byte_end":13389848,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Redirect output to stderr if level is <= WARN:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389853,"byte_end":13389903,"line_start":287,"line_end":287,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389908,"byte_end":13389911,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389916,"byte_end":13389927,"line_start":289,"line_end":289,"column_start":5,"column_end":16}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389932,"byte_end":13389955,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::{self, writer::MakeWriterExt};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13389960,"byte_end":13390023,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390028,"byte_end":13390031,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390036,"byte_end":13390097,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390102,"byte_end":13390130,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/     .map_writer(move |w| stderr.or_else(w));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390135,"byte_end":13390183,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390188,"byte_end":13390234,"line_start":296,"line_end":296,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390239,"byte_end":13390280,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390285,"byte_end":13390372,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390377,"byte_end":13390384,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391545,"byte_end":13391555,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_timer","value":"pub fn with_timer<T2>(Self, T2) -> Layer<S, N, format::Format<L, T2>, W>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for span and event timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for span and event timestamps.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390924,"byte_end":13390982,"line_start":319,"line_end":319,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390987,"byte_end":13390990,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See the [`time` module] for the provided timer implementations.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390995,"byte_end":13391062,"line_start":321,"line_end":321,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391067,"byte_end":13391070,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time`\"\" feature flag enables the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391075,"byte_end":13391133,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391138,"byte_end":13391213,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391218,"byte_end":13391287,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391292,"byte_end":13391304,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391309,"byte_end":13391312,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: super::time::FormatTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391317,"byte_end":13391355,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/ [`time` module]: mod@super::time","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391360,"byte_end":13391396,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/ [`UtcTime`]: super::time::UtcTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391401,"byte_end":13391438,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ [`LocalTime`]: super::time::LocalTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391443,"byte_end":13391484,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391489,"byte_end":13391533,"line_start":332,"line_end":332,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391963,"byte_end":13391975,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"without_time","qualname":"<Layer<S, N, format::Format<L, T>, W>>::without_time","value":"pub fn without_time(Self) -> Layer<S, N, format::Format<L, ()>, W>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with spans and event.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with spans and event.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13391903,"byte_end":13391951,"line_start":344,"line_end":344,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394435,"byte_end":13394451,"line_start":397,"line_end":397,"column_start":12,"column_end":28},"name":"with_span_events","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_span_events","value":"pub fn with_span_events(Self, FmtSpan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures how synthesized events are emitted at points in the [span\n lifecycle][lifecycle].","sig":null,"attributes":[{"value":"/ Configures how synthesized events are emitted at points in the [span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392320,"byte_end":13392392,"line_start":356,"line_end":356,"column_start":5,"column_end":77}},{"value":"/ lifecycle][lifecycle].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392397,"byte_end":13392423,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392428,"byte_end":13392431,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The following options are available:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392436,"byte_end":13392476,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392481,"byte_end":13392484,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ - `FmtSpan::NONE`: No events will be synthesized when spans are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392489,"byte_end":13392556,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/    created, entered, exited, or closed. Data from spans will still be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392561,"byte_end":13392634,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/    included as the context for formatted events. This is the default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392639,"byte_end":13392712,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ - `FmtSpan::NEW`: An event will be synthesized when spans are created.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392717,"byte_end":13392791,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::ENTER`: An event will be synthesized when spans are entered.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392796,"byte_end":13392872,"line_start":365,"line_end":365,"column_start":5,"column_end":81}},{"value":"/ - `FmtSpan::EXIT`: An event will be synthesized when spans are exited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392877,"byte_end":13392951,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::CLOSE`: An event will be synthesized when a span closes. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13392956,"byte_end":13393031,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/    [timestamps are enabled][time] for this formatter, the generated","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393036,"byte_end":13393107,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/    event will contain fields with the span's _busy time_ (the total","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393112,"byte_end":13393183,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/    time for which it was entered) and _idle time_ (the total time that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393188,"byte_end":13393262,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/    the span existed but was not entered).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393267,"byte_end":13393312,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ - `FmtSpan::ACTIVE`: Events will be synthesized when spans are entered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393317,"byte_end":13393391,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/    or exited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393396,"byte_end":13393413,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/ - `FmtSpan::FULL`: Events will be synthesized whenever a span is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393418,"byte_end":13393486,"line_start":374,"line_end":374,"column_start":5,"column_end":73}},{"value":"/    created, entered, exited, or closed. If timestamps are enabled, the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393491,"byte_end":13393565,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/    close event will contain the span's busy and idle time, as","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393570,"byte_end":13393635,"line_start":376,"line_end":376,"column_start":5,"column_end":70}},{"value":"/    described above.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393640,"byte_end":13393663,"line_start":377,"line_end":377,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393668,"byte_end":13393671,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The options can be enabled in any combination. For instance, the following","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393676,"byte_end":13393754,"line_start":379,"line_end":379,"column_start":5,"column_end":83}},{"value":"/ will synthesize events whenever spans are created and closed:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393759,"byte_end":13393824,"line_start":380,"line_end":380,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393829,"byte_end":13393832,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393837,"byte_end":13393848,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393853,"byte_end":13393885,"line_start":383,"line_end":383,"column_start":5,"column_end":37}},{"value":"/ use tracing_subscriber::fmt::format::FmtSpan;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393890,"byte_end":13393939,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393944,"byte_end":13393947,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393952,"byte_end":13393978,"line_start":386,"line_end":386,"column_start":5,"column_end":31}},{"value":"/     .with_span_events(FmtSpan::NEW | FmtSpan::CLOSE)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13393983,"byte_end":13394039,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394044,"byte_end":13394062,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394067,"byte_end":13394074,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394079,"byte_end":13394082,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Note that the generated events will only be part of the log output by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394087,"byte_end":13394160,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ this formatter; they will not be recorded by other `Subscriber`s or by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394165,"byte_end":13394239,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ `Layer`s added to this subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394244,"byte_end":13394282,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394287,"byte_end":13394290,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [lifecycle]: https://docs.rs/tracing/latest/tracing/span/index.html#the-span-lifecycle","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394295,"byte_end":13394385,"line_start":395,"line_end":395,"column_start":5,"column_end":95}},{"value":"/ [time]: Layer::without_time()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394390,"byte_end":13394423,"line_start":396,"line_end":396,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394659,"byte_end":13394670,"line_start":405,"line_end":405,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_target","value":"pub fn with_target(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394592,"byte_end":13394647,"line_start":404,"line_end":404,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395014,"byte_end":13395023,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"with_file","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_file","value":"pub fn with_file(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394863,"byte_end":13394930,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394935,"byte_end":13394949,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394954,"byte_end":13394957,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13394962,"byte_end":13395002,"line_start":414,"line_end":414,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395372,"byte_end":13395388,"line_start":426,"line_end":426,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_line_number","value":"pub fn with_line_number(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395219,"byte_end":13395288,"line_start":422,"line_end":422,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395293,"byte_end":13395307,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395312,"byte_end":13395315,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395320,"byte_end":13395360,"line_start":425,"line_end":425,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395686,"byte_end":13395696,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"with_level","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_level","value":"pub fn with_level(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395620,"byte_end":13395674,"line_start":436,"line_end":436,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396056,"byte_end":13396071,"line_start":448,"line_end":448,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_thread_ids","value":"pub fn with_thread_ids(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395887,"byte_end":13395961,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395966,"byte_end":13395993,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13395998,"byte_end":13396001,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396006,"byte_end":13396044,"line_start":447,"line_end":447,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396441,"byte_end":13396458,"line_start":459,"line_end":459,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_thread_names","value":"pub fn with_thread_names(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396277,"byte_end":13396346,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396351,"byte_end":13396378,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396383,"byte_end":13396386,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396391,"byte_end":13396429,"line_start":458,"line_end":458,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396794,"byte_end":13396801,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"compact","qualname":"<Layer<S, N, format::Format<L, T>, W>>::compact","value":"pub fn compact(Self) -> Layer<S, N, format::Format<format::Compact, T>, W>\nwhere N: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the layer being built to use a [less verbose formatter][super::format::Compact].\n","sig":null,"attributes":[{"value":"/ Sets the layer being built to use a [less verbose formatter][super::format::Compact].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13396693,"byte_end":13396782,"line_start":469,"line_end":469,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400617,"byte_end":13400627,"line_start":580,"line_end":580,"column_start":12,"column_end":22},"name":"fmt_fields","qualname":"<Layer<S, N, E, W>>::fmt_fields","value":"pub fn fmt_fields<N2>(Self, N2) -> Layer<S, N2, E, W> where\nN2: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the field formatter that the layer being built will use to record\n fields.\n","sig":null,"attributes":[{"value":"/ Sets the field formatter that the layer being built will use to record","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400515,"byte_end":13400589,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400594,"byte_end":13400605,"line_start":579,"line_end":579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401642,"byte_end":13401656,"line_start":610,"line_end":610,"column_start":12,"column_end":26},"name":"map_fmt_fields","qualname":"<Layer<S, N, E, W>>::map_fmt_fields","value":"pub fn map_fmt_fields<N2, impl FnOnce(N) -> N2: FnOnce(N) ->\n                      N2>(Self, impl FnOnce(N) -> N2) -> Layer<S, N2, E, W>\nwhere N2: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the field formatter by applying a function to the existing field formatter.","sig":null,"attributes":[{"value":"/ Updates the field formatter by applying a function to the existing field formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400998,"byte_end":13401085,"line_start":594,"line_end":594,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401090,"byte_end":13401093,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This sets the field formatter that the layer being built will use to record fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401098,"byte_end":13401185,"line_start":596,"line_end":596,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401190,"byte_end":13401193,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401198,"byte_end":13401212,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401217,"byte_end":13401220,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Updating a field formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401225,"byte_end":13401256,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401261,"byte_end":13401264,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401269,"byte_end":13401280,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::field::MakeExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401285,"byte_end":13401328,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401333,"byte_end":13401381,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/     .map_fmt_fields(|f| f.debug_alt());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401386,"byte_end":13401429,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401434,"byte_end":13401480,"line_start":606,"line_end":606,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401485,"byte_end":13401526,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401531,"byte_end":13401618,"line_start":608,"line_end":608,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13401623,"byte_end":13401630,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3187},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403379,"byte_end":13403394,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"FormattedFields","qualname":"::fmt::fmt_layer::FormattedFields","value":"FormattedFields { fields }","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191}],"decl_id":null,"docs":" A formatted representation of a span's fields stored in its [extensions].","sig":null,"attributes":[{"value":"/ A formatted representation of a span's fields stored in its [extensions].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402884,"byte_end":13402961,"line_start":655,"line_end":655,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402962,"byte_end":13402965,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ Because `FormattedFields` is generic over the type of the formatter that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402966,"byte_end":13403042,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ produced it, multiple versions of a span's formatted fields can be stored in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403043,"byte_end":13403123,"line_start":658,"line_end":658,"column_start":1,"column_end":81}},{"value":"/ the [`Extensions`][extensions] type-map. This means that when multiple","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403124,"byte_end":13403198,"line_start":659,"line_end":659,"column_start":1,"column_end":75}},{"value":"/ formatters are in use, each can store its own formatted representation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403199,"byte_end":13403273,"line_start":660,"line_end":660,"column_start":1,"column_end":75}},{"value":"/ without conflicting.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403274,"byte_end":13403298,"line_start":661,"line_end":661,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403299,"byte_end":13403302,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ [extensions]: crate::registry::Extensions","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403303,"byte_end":13403348,"line_start":663,"line_end":663,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3191},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403516,"byte_end":13403522,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"name":"fields","qualname":"::fmt::fmt_layer::FormattedFields::fields","value":"std::string::String","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":" The formatted fields of a span.\n","sig":null,"attributes":[{"value":"/ The formatted fields of a span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403472,"byte_end":13403507,"line_start":668,"line_end":668,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403624,"byte_end":13403627,"line_start":674,"line_end":674,"column_start":12,"column_end":15},"name":"new","qualname":"<FormattedFields<E>>::new","value":"pub fn new(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `FormattedFields`.\n","sig":null,"attributes":[{"value":"/ Returns a new `FormattedFields`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403576,"byte_end":13403612,"line_start":673,"line_end":673,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403984,"byte_end":13403993,"line_start":686,"line_end":686,"column_start":12,"column_end":21},"name":"as_writer","qualname":"<FormattedFields<E>>::as_writer","value":"pub fn as_writer(&mut Self) -> format::Writer","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`format::Writer`] for writing to this `FormattedFields`.","sig":null,"attributes":[{"value":"/ Returns a new [`format::Writer`] for writing to this `FormattedFields`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403780,"byte_end":13403855,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403860,"byte_end":13403863,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ The returned [`format::Writer`] can be used with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403868,"byte_end":13403924,"line_start":684,"line_end":684,"column_start":5,"column_end":61}},{"value":"/ [`FormatFields::format_fields`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403929,"byte_end":13403972,"line_start":685,"line_end":685,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2379},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412244,"byte_end":13412254,"line_start":921,"line_end":921,"column_start":12,"column_end":22},"name":"FmtContext","qualname":"::fmt::fmt_layer::FmtContext","value":"FmtContext {  }","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385}],"decl_id":null,"docs":" Provides the current span context to a formatter.\n","sig":null,"attributes":[{"value":"/ Provides the current span context to a formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412179,"byte_end":13412232,"line_start":920,"line_end":920,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413350,"byte_end":13413361,"line_start":957,"line_end":957,"column_start":12,"column_end":23},"name":"visit_spans","qualname":"<FmtContext>::visit_spans","value":"pub fn visit_spans<E, F>(&Self, F) -> Result<(), E> where\nF: FnMut(&SpanRef<, S>) -> Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" Visits every span in the current context with a closure.","sig":null,"attributes":[{"value":"/ Visits every span in the current context with a closure.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413078,"byte_end":13413138,"line_start":952,"line_end":952,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413143,"byte_end":13413146,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called first with the current span,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413151,"byte_end":13413219,"line_start":954,"line_end":954,"column_start":5,"column_end":73}},{"value":"/ and then with that span's parent, and then that span's parent,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413224,"byte_end":13413290,"line_start":955,"line_end":955,"column_start":5,"column_end":71}},{"value":"/ and so on until a root span is reached.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413295,"byte_end":13413338,"line_start":956,"line_end":956,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413899,"byte_end":13413907,"line_start":975,"line_end":975,"column_start":12,"column_end":20},"name":"metadata","qualname":"<FmtContext>::metadata","value":"pub fn metadata(&Self, &Id) -> Option<&'static Metadata> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns metadata for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns metadata for the span with the given `id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413680,"byte_end":13413748,"line_start":970,"line_end":970,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413753,"byte_end":13413756,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413761,"byte_end":13413835,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413840,"byte_end":13413873,"line_start":973,"line_end":973,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13413878,"byte_end":13413887,"line_start":974,"line_end":974,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414344,"byte_end":13414348,"line_start":989,"line_end":989,"column_start":12,"column_end":16},"name":"span","qualname":"<FmtContext>::span","value":"pub fn span(&Self, &Id) -> Option<SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span with the given `id`, if it exists.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414064,"byte_end":13414137,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414142,"byte_end":13414145,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414150,"byte_end":13414224,"line_start":984,"line_end":984,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414229,"byte_end":13414262,"line_start":985,"line_end":985,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414267,"byte_end":13414270,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414275,"byte_end":13414318,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414323,"byte_end":13414332,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414578,"byte_end":13414584,"line_start":998,"line_end":998,"column_start":12,"column_end":18},"name":"exists","qualname":"<FmtContext>::exists","value":"pub fn exists(&Self, &Id) -> bool where S: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an active span exists for the given `Id`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if an active span exists for the given `Id`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414489,"byte_end":13414552,"line_start":996,"line_end":996,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414557,"byte_end":13414566,"line_start":997,"line_end":997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414975,"byte_end":13414989,"line_start":1012,"line_end":1012,"column_start":12,"column_end":26},"name":"lookup_current","qualname":"<FmtContext>::lookup_current","value":"pub fn lookup_current(&Self) -> Option<SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span that the wrapped subscriber considers\n to be the current.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span that the wrapped subscriber considers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414709,"byte_end":13414785,"line_start":1005,"line_end":1005,"column_start":5,"column_end":81}},{"value":"/ to be the current.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414790,"byte_end":13414812,"line_start":1006,"line_end":1006,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414817,"byte_end":13414820,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then we are not currently within a span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414825,"byte_end":13414893,"line_start":1008,"line_end":1008,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414898,"byte_end":13414901,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414906,"byte_end":13414949,"line_start":1010,"line_end":1010,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13414954,"byte_end":13414963,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415189,"byte_end":13415201,"line_start":1020,"line_end":1020,"column_start":12,"column_end":24},"name":"current_span","qualname":"<FmtContext>::current_span","value":"pub fn current_span(&Self) -> Current","parent":null,"children":[],"decl_id":null,"docs":" Returns the current span for this formatter.\n","sig":null,"attributes":[{"value":"/ Returns the current span for this formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415129,"byte_end":13415177,"line_start":1019,"line_end":1019,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415651,"byte_end":13415662,"line_start":1032,"line_end":1032,"column_start":12,"column_end":23},"name":"parent_span","qualname":"<FmtContext>::parent_span","value":"pub fn parent_span(&Self) -> Option<SpanRef<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the parent span of the event currently being\n formatted.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the parent span of the event currently being","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415265,"byte_end":13415339,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/ formatted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415344,"byte_end":13415358,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415363,"byte_end":13415366,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ If the event has a contextual parent, this will return the current span. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415371,"byte_end":13415450,"line_start":1027,"line_end":1027,"column_start":5,"column_end":84}},{"value":"/ the event has an explicit parent span, this will return that span. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415455,"byte_end":13415528,"line_start":1028,"line_end":1028,"column_start":5,"column_end":78}},{"value":"/ the event does not have a parent span, this will return `None`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415533,"byte_end":13415600,"line_start":1029,"line_end":1029,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415605,"byte_end":13415608,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ [stored data]: SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415613,"byte_end":13415639,"line_start":1031,"line_end":1031,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417185,"byte_end":13417195,"line_start":1062,"line_end":1062,"column_start":12,"column_end":22},"name":"span_scope","qualname":"<FmtContext>::span_scope","value":"pub fn span_scope(&Self, &Id) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the specified span and ending with the\n root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415749,"byte_end":13415820,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the specified span and ending with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415825,"byte_end":13415898,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ root of the trace tree and ending with the current span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415903,"byte_end":13415963,"line_start":1038,"line_end":1038,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415968,"byte_end":13415971,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Context::span_scope`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13415976,"byte_end":13416037,"line_start":1040,"line_end":1040,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416042,"byte_end":13416045,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416050,"byte_end":13416079,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416084,"byte_end":13416175,"line_start":1043,"line_end":1043,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416180,"byte_end":13416190,"line_start":1044,"line_end":1044,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416195,"byte_end":13416254,"line_start":1045,"line_end":1045,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416259,"byte_end":13416324,"line_start":1046,"line_end":1046,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416329,"byte_end":13416419,"line_start":1047,"line_end":1047,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416424,"byte_end":13416487,"line_start":1048,"line_end":1048,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416492,"byte_end":13416586,"line_start":1049,"line_end":1049,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416591,"byte_end":13416636,"line_start":1050,"line_end":1050,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416641,"byte_end":13416657,"line_start":1051,"line_end":1051,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416662,"byte_end":13416665,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416670,"byte_end":13416729,"line_start":1053,"line_end":1053,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416734,"byte_end":13416799,"line_start":1054,"line_end":1054,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This requires the wrapped subscriber to implement the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416804,"byte_end":13416884,"line_start":1055,"line_end":1055,"column_start":5,"column_end":85}},{"value":"/ <a href=\"../registry/trait.LookupSpan.html\"><code>LookupSpan</code></a> trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416889,"byte_end":13416971,"line_start":1056,"line_end":1056,"column_start":5,"column_end":87}},{"value":"/ See the documentation on <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13416976,"byte_end":13417059,"line_start":1057,"line_end":1057,"column_start":5,"column_end":88}},{"value":"/ declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417064,"byte_end":13417096,"line_start":1058,"line_end":1058,"column_start":5,"column_end":37}},{"value":"/ </pre></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417101,"byte_end":13417117,"line_start":1059,"line_end":1059,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417122,"byte_end":13417125,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417130,"byte_end":13417173,"line_start":1061,"line_end":1061,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418675,"byte_end":13418686,"line_start":1093,"line_end":1093,"column_start":12,"column_end":23},"name":"event_scope","qualname":"<FmtContext>::event_scope","value":"pub fn event_scope(&Self) -> Option<registry::Scope<, S>> where\nS: for<'lookup> registry::LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n event's span context, starting with its parent span and ending with the\n root of the trace tree.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417350,"byte_end":13417421,"line_start":1069,"line_end":1069,"column_start":5,"column_end":76}},{"value":"/ event's span context, starting with its parent span and ending with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417426,"byte_end":13417501,"line_start":1070,"line_end":1070,"column_start":5,"column_end":80}},{"value":"/ root of the trace tree.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417506,"byte_end":13417533,"line_start":1071,"line_end":1071,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417538,"byte_end":13417541,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Context::event_scope`] method and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417546,"byte_end":13417619,"line_start":1073,"line_end":1073,"column_start":5,"column_end":78}},{"value":"/ passing the event currently being formatted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417624,"byte_end":13417672,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417677,"byte_end":13417680,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417685,"byte_end":13417744,"line_start":1076,"line_end":1076,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417749,"byte_end":13417814,"line_start":1077,"line_end":1077,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417819,"byte_end":13417909,"line_start":1078,"line_end":1078,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417914,"byte_end":13417977,"line_start":1079,"line_end":1079,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13417982,"byte_end":13418076,"line_start":1080,"line_end":1080,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418081,"byte_end":13418126,"line_start":1081,"line_end":1081,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418131,"byte_end":13418147,"line_start":1082,"line_end":1082,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418152,"byte_end":13418155,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418160,"byte_end":13418219,"line_start":1084,"line_end":1084,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418224,"byte_end":13418289,"line_start":1085,"line_end":1085,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This requires the wrapped subscriber to implement the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418294,"byte_end":13418374,"line_start":1086,"line_end":1086,"column_start":5,"column_end":85}},{"value":"/ <a href=\"../registry/trait.LookupSpan.html\"><code>LookupSpan</code></a> trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418379,"byte_end":13418461,"line_start":1087,"line_end":1087,"column_start":5,"column_end":87}},{"value":"/ See the documentation on <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418466,"byte_end":13418549,"line_start":1088,"line_end":1088,"column_start":5,"column_end":88}},{"value":"/ declaration</a> for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418554,"byte_end":13418586,"line_start":1089,"line_end":1089,"column_start":5,"column_end":37}},{"value":"/ </pre></div>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418591,"byte_end":13418607,"line_start":1090,"line_end":1090,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418612,"byte_end":13418615,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418620,"byte_end":13418663,"line_start":1092,"line_end":1092,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419134,"byte_end":13419146,"line_start":1107,"line_end":1107,"column_start":12,"column_end":24},"name":"field_format","qualname":"<FmtContext>::field_format","value":"pub fn field_format(&Self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Returns the [field formatter] configured by the subscriber invoking\n `format_event`.","sig":null,"attributes":[{"value":"/ Returns the [field formatter] configured by the subscriber invoking","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418851,"byte_end":13418922,"line_start":1100,"line_end":1100,"column_start":5,"column_end":76}},{"value":"/ `format_event`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418927,"byte_end":13418946,"line_start":1101,"line_end":1101,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418951,"byte_end":13418954,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ The event formatter may use the returned field formatter to format the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13418959,"byte_end":13419033,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"/ fields of any events it records.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419038,"byte_end":13419074,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419079,"byte_end":13419082,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ [field formatter]: FormatFields","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419087,"byte_end":13419122,"line_start":1106,"line_end":1106,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2429},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::fmt::format","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2505},{"krate":0,"index":2511},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":3570},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":2523},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3519},{"krate":0,"index":3532},{"krate":0,"index":3536},{"krate":0,"index":2529},{"krate":0,"index":2542},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2566},{"krate":0,"index":2573},{"krate":0,"index":2580},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3507},{"krate":0,"index":3512},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2593},{"krate":0,"index":2597},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2621},{"krate":0,"index":2629},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2694},{"krate":0,"index":2698},{"krate":0,"index":2702},{"krate":0,"index":2706},{"krate":0,"index":3199},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":2710},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2741}],"decl_id":null,"docs":" Formatters for logging `tracing` events.","sig":null,"attributes":[{"value":"/ Formatters for logging `tracing` events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13427869,"byte_end":13427913,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13427914,"byte_end":13427917,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides several formatter implementations, as well as utilities","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13427918,"byte_end":13427998,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for implementing custom formatters.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13427999,"byte_end":13428038,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428039,"byte_end":13428042,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Formatters","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428043,"byte_end":13428059,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/ This module provides a number of formatter implementations:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428060,"byte_end":13428123,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428124,"byte_end":13428127,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`Full`]: The default formatter. This emits human-readable,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428128,"byte_end":13428193,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/   single-line logs for each event that occurs, with the current span context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428194,"byte_end":13428274,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   displayed before the formatted representation of the event. See","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428275,"byte_end":13428344,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   [here](Full#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428345,"byte_end":13428397,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428398,"byte_end":13428401,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`Compact`]: A variant of the default formatter, optimized for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428402,"byte_end":13428470,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/   short line lengths. Fields from the current span context are appended to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428471,"byte_end":13428549,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   the fields of the formatted event, and span names are not shown; the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428550,"byte_end":13428624,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/   verbosity level is abbreviated to a single character. See","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428625,"byte_end":13428688,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/   [here](Compact#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428689,"byte_end":13428744,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428745,"byte_end":13428748,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * [`Pretty`]: Emits excessively pretty, multi-line logs, optimized","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428749,"byte_end":13428819,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/   for human readability. This is primarily intended to be used in local","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428820,"byte_end":13428895,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/   development and debugging, or for command-line applications, where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428896,"byte_end":13428968,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/   automated analysis and compact storage of logs is less of a priority than","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13428969,"byte_end":13429048,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/   readability and visual appeal. See [here](Pretty#example-output)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429049,"byte_end":13429119,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/   for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429120,"byte_end":13429144,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429145,"byte_end":13429148,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * [`Json`]: Outputs newline-delimited JSON logs. This is intended","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429149,"byte_end":13429218,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/   for production use with systems where structured logs are consumed as JSON","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429219,"byte_end":13429299,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   by analysis and viewing tools. The JSON output is not optimized for human","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429300,"byte_end":13429379,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/   readability. See [here](Json#example-output) for sample output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13429380,"byte_end":13429449,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":2499},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435611,"byte_end":13435622,"line_start":195,"line_end":195,"column_start":11,"column_end":22},"name":"FormatEvent","qualname":"::fmt::format::FormatEvent","value":"FormatEvent<S, N>","parent":null,"children":[{"krate":0,"index":2504}],"decl_id":null,"docs":" A type that can format a tracing [`Event`] to a [`Writer`].","sig":null,"attributes":[{"value":"/ A type that can format a tracing [`Event`] to a [`Writer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430198,"byte_end":13430261,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430262,"byte_end":13430265,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ `FormatEvent` is primarily used in the context of [`fmt::Subscriber`] or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430266,"byte_end":13430342,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ [`fmt::Layer`]. Each time an event is dispatched to [`fmt::Subscriber`] or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430343,"byte_end":13430421,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ [`fmt::Layer`], the subscriber or layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430422,"byte_end":13430465,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ forwards it to its associated `FormatEvent` to emit a log message.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430466,"byte_end":13430536,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430537,"byte_end":13430540,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This trait is already implemented for function pointers with the same","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430541,"byte_end":13430614,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ signature as `format_event`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430615,"byte_end":13430647,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430648,"byte_end":13430651,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430652,"byte_end":13430667,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430668,"byte_end":13430671,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The following arguments are passed to `FormatEvent::format_event`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430672,"byte_end":13430742,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430743,"byte_end":13430746,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ * A [`FmtContext`]. This is an extension of the [`layer::Context`] type,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430747,"byte_end":13430823,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/   which can be used for accessing stored information such as the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430824,"byte_end":13430900,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   span context an event occurred in.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430901,"byte_end":13430941,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430942,"byte_end":13430945,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/   In addition, [`FmtContext`] exposes access to the [`FormatFields`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13430946,"byte_end":13431018,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/   implementation that the subscriber was configured to use via the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431019,"byte_end":13431089,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/   [`FmtContext::field_format`] method. This can be used when the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431090,"byte_end":13431158,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/   [`FormatEvent`] implementation needs to format the event's fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431159,"byte_end":13431231,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431232,"byte_end":13431235,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/   For convenience, [`FmtContext`] also [implements `FormatFields`],","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431236,"byte_end":13431307,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/   forwarding to the configured [`FormatFields`] type.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431308,"byte_end":13431365,"line_start":87,"line_end":87,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431366,"byte_end":13431369,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ * A [`Writer`] to which the formatted representation of the event is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431370,"byte_end":13431442,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/   written. This type implements the [`std::fmt::Write`] trait, and therefore","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431443,"byte_end":13431523,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/   can be used with the [`std::write!`] and [`std::writeln!`] macros, as well","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431524,"byte_end":13431604,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/   as calling [`std::fmt::Write`] methods directly.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431605,"byte_end":13431659,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431660,"byte_end":13431663,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/   The [`Writer`] type also implements additional methods that provide","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431664,"byte_end":13431737,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/   information about how the event should be formatted. The","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431738,"byte_end":13431800,"line_start":95,"line_end":95,"column_start":1,"column_end":63}},{"value":"/   [`Writer::has_ansi_escapes`] method indicates whether [ANSI terminal","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431801,"byte_end":13431875,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/   escape codes] are supported by the underlying I/O writer that the event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431876,"byte_end":13431953,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/   will be written to. If this returns `true`, the formatter is permitted to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13431954,"byte_end":13432033,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/   use ANSI escape codes to add colors and other text formatting to its","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432034,"byte_end":13432108,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/   output. If it returns `false`, the event will be written to an output that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432109,"byte_end":13432189,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/   does not support ANSI escape codes (such as a log file), and they should","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432190,"byte_end":13432268,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   not be emitted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432269,"byte_end":13432290,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432291,"byte_end":13432294,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/   Crates like [`ansi_term`] and [`owo-colors`] can be used to add ANSI","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432295,"byte_end":13432369,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/   escape codes to formatted output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432370,"byte_end":13432409,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432410,"byte_end":13432413,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ * The actual [`Event`] to be formatted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432414,"byte_end":13432457,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432458,"byte_end":13432461,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432462,"byte_end":13432476,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432477,"byte_end":13432480,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This example re-implements a simiplified version of this crate's [default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432481,"byte_end":13432558,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ formatter]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432559,"byte_end":13432574,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432575,"byte_end":13432578,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432579,"byte_end":13432590,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ use std::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432591,"byte_end":13432608,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/ use tracing_core::{Subscriber, Event};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432609,"byte_end":13432651,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/ use tracing_subscriber::fmt::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432652,"byte_end":13432686,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/     format::{self, FormatEvent, FormatFields},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432687,"byte_end":13432737,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/     FmtContext,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432738,"byte_end":13432757,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/     FormattedFields,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432758,"byte_end":13432782,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432783,"byte_end":13432789,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/ use tracing_subscriber::registry::LookupSpan;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432790,"byte_end":13432839,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432840,"byte_end":13432843,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ struct MyFormatter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432844,"byte_end":13432867,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432868,"byte_end":13432871,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ impl<S, N> FormatEvent<S, N> for MyFormatter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432872,"byte_end":13432920,"line_start":126,"line_end":126,"column_start":1,"column_end":49}},{"value":"/ where","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432921,"byte_end":13432930,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> LookupSpan<'a>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432931,"byte_end":13432978,"line_start":128,"line_end":128,"column_start":1,"column_end":48}},{"value":"/     N: for<'a> FormatFields<'a> + 'static,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13432979,"byte_end":13433025,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433026,"byte_end":13433031,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/     fn format_event(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433032,"byte_end":13433056,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/         &self,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433057,"byte_end":13433075,"line_start":132,"line_end":132,"column_start":1,"column_end":19}},{"value":"/         ctx: &FmtContext<'_, S, N>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433076,"byte_end":13433115,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/         mut writer: format::Writer<'_>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433116,"byte_end":13433159,"line_start":134,"line_end":134,"column_start":1,"column_end":44}},{"value":"/         event: &Event<'_>,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433160,"byte_end":13433190,"line_start":135,"line_end":135,"column_start":1,"column_end":31}},{"value":"/     ) -> fmt::Result {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433191,"byte_end":13433217,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/         // Format values from the event's's metadata:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433218,"byte_end":13433275,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/         let metadata = event.metadata();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433276,"byte_end":13433320,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/         write!(&mut writer, \"{} {}: \", metadata.level(), metadata.target())?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433321,"byte_end":13433402,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433403,"byte_end":13433406,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/         // Format all the spans in the event's span context.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433407,"byte_end":13433471,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/         if let Some(scope) = ctx.event_scope() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433472,"byte_end":13433524,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/             for span in scope.from_root() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433525,"byte_end":13433572,"line_start":143,"line_end":143,"column_start":1,"column_end":48}},{"value":"/                 write!(writer, \"{}\", span.name())?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433573,"byte_end":13433628,"line_start":144,"line_end":144,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433629,"byte_end":13433632,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/                 // `FormattedFields` is a formatted representation of the span's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433633,"byte_end":13433717,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/                 // fields, which is stored in its extensions by the `fmt` layer's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433718,"byte_end":13433803,"line_start":147,"line_end":147,"column_start":1,"column_end":86}},{"value":"/                 // `new_span` method. The fields will have been formatted","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433804,"byte_end":13433881,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/                 // by the same field formatter that's provided to the event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433882,"byte_end":13433961,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/                 // formatter in the `FmtContext`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13433962,"byte_end":13434015,"line_start":150,"line_end":150,"column_start":1,"column_end":54}},{"value":"/                 let ext = span.extensions();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434016,"byte_end":13434064,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/                 let fields = &ext","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434065,"byte_end":13434102,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/                     .get::<FormattedFields<N>>()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434103,"byte_end":13434155,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/                     .expect(\"will never be `None`\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434156,"byte_end":13434212,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434213,"byte_end":13434216,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/                 // Skip formatting the fields if the span had no fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434217,"byte_end":13434293,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/                 if !fields.is_empty() {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434294,"byte_end":13434337,"line_start":157,"line_end":157,"column_start":1,"column_end":44}},{"value":"/                     write!(writer, \"{{{}}}\", fields)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434338,"byte_end":13434396,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434397,"byte_end":13434418,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/                 write!(writer, \": \")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434419,"byte_end":13434461,"line_start":160,"line_end":160,"column_start":1,"column_end":43}},{"value":"/             }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434462,"byte_end":13434479,"line_start":161,"line_end":161,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434480,"byte_end":13434493,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434494,"byte_end":13434497,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/         // Write fields on the event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434498,"byte_end":13434538,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/         ctx.field_format().format_fields(writer.by_ref(), event)?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434539,"byte_end":13434609,"line_start":165,"line_end":165,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434610,"byte_end":13434613,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/         writeln!(writer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434614,"byte_end":13434642,"line_start":167,"line_end":167,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434643,"byte_end":13434652,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434653,"byte_end":13434658,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434659,"byte_end":13434662,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let _subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434663,"byte_end":13434710,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/     .event_format(MyFormatter)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434711,"byte_end":13434745,"line_start":172,"line_end":172,"column_start":1,"column_end":35}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434746,"byte_end":13434762,"line_start":173,"line_end":173,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434763,"byte_end":13434766,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ let _span = tracing::info_span!(\"my_span\", answer = 42).entered();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434767,"byte_end":13434837,"line_start":175,"line_end":175,"column_start":1,"column_end":71}},{"value":"/ tracing::info!(question = \"life, the universe, and everything\", \"hello world\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434838,"byte_end":13434921,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434922,"byte_end":13434929,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434930,"byte_end":13434933,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This formatter will print events like this:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434934,"byte_end":13434981,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434982,"byte_end":13434985,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434986,"byte_end":13434997,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ DEBUG yak_shaving::shaver: some-span{field-on-span=foo}: started shaving yak","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13434998,"byte_end":13435078,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435079,"byte_end":13435086,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435087,"byte_end":13435090,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`layer::Context`]: crate::layer::Context","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435091,"byte_end":13435136,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/ [`fmt::Layer`]: super::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435137,"byte_end":13435169,"line_start":186,"line_end":186,"column_start":1,"column_end":33}},{"value":"/ [`fmt::Subscriber`]: super::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435170,"byte_end":13435212,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/ [`Event`]: tracing::Event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435213,"byte_end":13435242,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/ [implements `FormatFields`]: super::FmtContext#impl-FormatFields<'writer>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435243,"byte_end":13435320,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ [ANSI terminal escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435321,"byte_end":13435401,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ [`Writer::has_ansi_escapes`]: Writer::has_ansi_escapes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435402,"byte_end":13435460,"line_start":191,"line_end":191,"column_start":1,"column_end":59}},{"value":"/ [`ansi_term`]: https://crates.io/crates/ansi_term","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435461,"byte_end":13435514,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"/ [`owo-colors`]: https://crates.io/crates/owo-colors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435515,"byte_end":13435570,"line_start":193,"line_end":193,"column_start":1,"column_end":56}},{"value":"/ [default formatter]: Full","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435571,"byte_end":13435600,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435809,"byte_end":13435821,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"format_event","qualname":"::fmt::format::FormatEvent::format_event","value":"pub fn format_event(&Self, &FmtContext<, S, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" Write a log message for `Event` in `Context` to the given [`Writer`].\n","sig":null,"attributes":[{"value":"/ Write a log message for `Event` in `Context` to the given [`Writer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13435728,"byte_end":13435801,"line_start":200,"line_end":200,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":2511},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436743,"byte_end":13436755,"line_start":232,"line_end":232,"column_start":11,"column_end":23},"name":"FormatFields","qualname":"::fmt::format::FormatFields","value":"FormatFields<'writer>","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2515}],"decl_id":null,"docs":" A type that can format a [set of fields] to a [`Writer`].","sig":null,"attributes":[{"value":"/ A type that can format a [set of fields] to a [`Writer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436350,"byte_end":13436411,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436412,"byte_end":13436415,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ `FormatFields` is primarily used in the context of [`FmtSubscriber`]. Each","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436416,"byte_end":13436494,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ time a span or event with fields is recorded, the subscriber will format","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436495,"byte_end":13436571,"line_start":227,"line_end":227,"column_start":1,"column_end":77}},{"value":"/ those fields with its associated `FormatFields` implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436572,"byte_end":13436639,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436640,"byte_end":13436643,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ [set of fields]: crate::field::RecordFields","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436644,"byte_end":13436691,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/ [`FmtSubscriber`]: super::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436692,"byte_end":13436732,"line_start":231,"line_end":231,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436859,"byte_end":13436872,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"format_fields","qualname":"::fmt::format::FormatFields::format_fields","value":"pub fn format_fields<R: RecordFields>(&Self, Writer, R) -> fmt::Result","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" Format the provided `fields` to the provided [`Writer`], returning a result.\n","sig":null,"attributes":[{"value":"/ Format the provided `fields` to the provided [`Writer`], returning a result.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436771,"byte_end":13436851,"line_start":233,"line_end":233,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437260,"byte_end":13437270,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"add_fields","qualname":"::fmt::format::FormatFields::add_fields","value":"pub fn add_fields(&Self, &'writer mut FormattedFields<Self>, &span::Record)\n-> fmt::Result","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":" Record additional field(s) on an existing span.","sig":null,"attributes":[{"value":"/ Record additional field(s) on an existing span.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13436954,"byte_end":13437005,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437010,"byte_end":13437013,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ By default, this appends a space to the current set of fields if it is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437018,"byte_end":13437092,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ non-empty, and then calls `self.format_fields`. If different behavior is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437097,"byte_end":13437173,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ required, the default implementation of this method can be overridden.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437178,"byte_end":13437252,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":2516},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438212,"byte_end":13438218,"line_start":270,"line_end":270,"column_start":8,"column_end":14},"name":"format","qualname":"::fmt::format::format","value":"pub fn format() -> Format","parent":null,"children":[],"decl_id":null,"docs":" Returns the default configuration for an [event formatter].","sig":null,"attributes":[{"value":"/ Returns the default configuration for an [event formatter].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437551,"byte_end":13437614,"line_start":253,"line_end":253,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437615,"byte_end":13437618,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Methods on the returned event formatter can be used for further","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437619,"byte_end":13437686,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ configuration. For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437687,"byte_end":13437718,"line_start":256,"line_end":256,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437719,"byte_end":13437722,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437723,"byte_end":13437734,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ let format = tracing_subscriber::fmt::format()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437735,"byte_end":13437785,"line_start":259,"line_end":259,"column_start":1,"column_end":51}},{"value":"/     .without_time()         // Don't include timestamps","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437786,"byte_end":13437845,"line_start":260,"line_end":260,"column_start":1,"column_end":60}},{"value":"/     .with_target(false)     // Don't include event targets.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437846,"byte_end":13437909,"line_start":261,"line_end":261,"column_start":1,"column_end":64}},{"value":"/     .with_level(false)      // Don't include event levels.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437910,"byte_end":13437972,"line_start":262,"line_end":262,"column_start":1,"column_end":63}},{"value":"/     .compact();             // Use a more compact, abbreviated format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13437973,"byte_end":13438047,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438048,"byte_end":13438051,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ // Use the configured formatter when building a new subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438052,"byte_end":13438119,"line_start":265,"line_end":265,"column_start":1,"column_end":68}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438120,"byte_end":13438149,"line_start":266,"line_end":266,"column_start":1,"column_end":30}},{"value":"/     .event_format(format)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438150,"byte_end":13438179,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438180,"byte_end":13438196,"line_start":268,"line_end":268,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438197,"byte_end":13438204,"line_start":269,"line_end":269,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2517},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438575,"byte_end":13438583,"line_start":284,"line_end":284,"column_start":8,"column_end":16},"name":"debug_fn","qualname":"::fmt::format::debug_fn","value":"pub fn debug_fn<F>(F) -> FieldFn<F> where\nF: Fn(&mut Writer, &Field, &dyn fmt::Debug) -> fmt::Result + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`FormatFields`] implementation that formats fields using the\n provided function or closure.","sig":null,"attributes":[{"value":"/ Returns a [`FormatFields`] implementation that formats fields using the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438454,"byte_end":13438529,"line_start":281,"line_end":281,"column_start":1,"column_end":76}},{"value":"/ provided function or closure.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438530,"byte_end":13438563,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438564,"byte_end":13438567,"line_start":283,"line_end":283,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439441,"byte_end":13439447,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"Writer","qualname":"::fmt::format::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522}],"decl_id":null,"docs":" A writer to which formatted representations of spans and events are written.","sig":null,"attributes":[{"value":"/ A writer to which formatted representations of spans and events are written.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438709,"byte_end":13438789,"line_start":291,"line_end":291,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438790,"byte_end":13438793,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This type is provided as input to the [`FormatEvent::format_event`] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438794,"byte_end":13438869,"line_start":293,"line_end":293,"column_start":1,"column_end":76}},{"value":"/ [`FormatFields::format_fields`] methods, which will write formatted","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438870,"byte_end":13438941,"line_start":294,"line_end":294,"column_start":1,"column_end":72}},{"value":"/ representations of [`Event`]s and [fields] to the `Writer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13438942,"byte_end":13439005,"line_start":295,"line_end":295,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439006,"byte_end":13439009,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This type implements the [`std::fmt::Write`] trait, allowing it to be used","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439010,"byte_end":13439088,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ with any function that takes an instance of [`std::fmt::Write`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439089,"byte_end":13439157,"line_start":298,"line_end":298,"column_start":1,"column_end":69}},{"value":"/ Additionally, it can be used with the standard library's [`std::write!`] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439158,"byte_end":13439238,"line_start":299,"line_end":299,"column_start":1,"column_end":81}},{"value":"/ [`std::writeln!`] macros.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439239,"byte_end":13439268,"line_start":300,"line_end":300,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439269,"byte_end":13439272,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Additionally, a `Writer` may expose additional `tracing`-specific","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439273,"byte_end":13439342,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ information to the formatter implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439343,"byte_end":13439391,"line_start":303,"line_end":303,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439392,"byte_end":13439395,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439396,"byte_end":13439429,"line_start":305,"line_end":305,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439694,"byte_end":13439701,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"FieldFn","qualname":"::fmt::format::FieldFn","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`FormatFields`] implementation that formats fields by calling a function\n or closure.","sig":null,"attributes":[{"value":"/ A [`FormatFields`] implementation that formats fields by calling a function","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439559,"byte_end":13439638,"line_start":312,"line_end":312,"column_start":1,"column_end":80}},{"value":"/ or closure.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439639,"byte_end":13439654,"line_start":313,"line_end":313,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439655,"byte_end":13439658,"line_start":314,"line_end":314,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439896,"byte_end":13439910,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"FieldFnVisitor","qualname":"::fmt::format::FieldFnVisitor","value":"FieldFnVisitor {  }","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528}],"decl_id":null,"docs":" The [visitor] produced by [`FieldFn`]'s [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ The [visitor] produced by [`FieldFn`]'s [`MakeVisitor`] implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439709,"byte_end":13439784,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439785,"byte_end":13439788,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [visitor]: super::super::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439789,"byte_end":13439830,"line_start":319,"line_end":319,"column_start":1,"column_end":42}},{"value":"/ [`MakeVisitor`]: super::super::field::MakeVisitor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439831,"byte_end":13439884,"line_start":320,"line_end":320,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3555},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446038,"byte_end":13446045,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"Compact","qualname":"::fmt::format::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker for [`Format`] that indicates that the compact log format should be used.","sig":null,"attributes":[{"value":"/ Marker for [`Format`] that indicates that the compact log format should be used.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13439981,"byte_end":13440065,"line_start":326,"line_end":326,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440066,"byte_end":13440069,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ The compact format includes fields from all currently entered spans, after","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440070,"byte_end":13440148,"line_start":328,"line_end":328,"column_start":1,"column_end":79}},{"value":"/ the event's fields. Span names are listed in order before fields are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440149,"byte_end":13440221,"line_start":329,"line_end":329,"column_start":1,"column_end":73}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440222,"byte_end":13440236,"line_start":330,"line_end":330,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440237,"byte_end":13440240,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Example Output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440241,"byte_end":13440261,"line_start":332,"line_end":332,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440262,"byte_end":13440265,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ <pre><font color=\"#4E9A06\"><b>:;</b></font> <font color=\"#4E9A06\">cargo</font> run --example fmt-compact","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440266,"byte_end":13440374,"line_start":334,"line_end":334,"column_start":1,"column_end":109}},{"value":"/ <font color=\"#4E9A06\"><b>    Finished</b></font> dev [unoptimized + debuginfo] target(s) in 0.08s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440375,"byte_end":13440476,"line_start":335,"line_end":335,"column_start":1,"column_end":102}},{"value":"/ <font color=\"#4E9A06\"><b>     Running</b></font> `target/debug/examples/fmt-compact`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440477,"byte_end":13440565,"line_start":336,"line_end":336,"column_start":1,"column_end":89}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809287Z </font><font color=\"#4E9A06\"> INFO</font> <b>fmt_compact</b><font color=\"#AAAAAA\">: preparing to shave yaks </font><i>number_of_yaks</i><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440566,"byte_end":13440787,"line_start":337,"line_end":337,"column_start":1,"column_end":222}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809367Z </font><font color=\"#4E9A06\"> INFO</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: shaving yaks </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13440788,"byte_end":13441049,"line_start":338,"line_end":338,"column_start":1,"column_end":262}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809414Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13441050,"byte_end":13441480,"line_start":339,"line_end":339,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809443Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: yak shaved successfully </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13441481,"byte_end":13441837,"line_start":340,"line_end":340,"column_start":1,"column_end":357}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809477Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=1 </font><i>shaved</i><font color=\"#AAAAAA\">=true </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13441838,"byte_end":13442164,"line_start":341,"line_end":341,"column_start":1,"column_end":327}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809500Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=1 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13442165,"byte_end":13442463,"line_start":342,"line_end":342,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809531Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13442464,"byte_end":13442894,"line_start":343,"line_end":343,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809554Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: yak shaved successfully </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13442895,"byte_end":13443251,"line_start":344,"line_end":344,"column_start":1,"column_end":357}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809581Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=2 </font><i>shaved</i><font color=\"#AAAAAA\">=true </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13443252,"byte_end":13443578,"line_start":345,"line_end":345,"column_start":1,"column_end":327}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809606Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13443579,"byte_end":13443877,"line_start":346,"line_end":346,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809635Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13443878,"byte_end":13444308,"line_start":347,"line_end":347,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809664Z </font><font color=\"#C4A000\"> WARN</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: could not locate yak </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13444309,"byte_end":13444662,"line_start":348,"line_end":348,"column_start":1,"column_end":354}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809693Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>shaved</i><font color=\"#AAAAAA\">=false </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13444663,"byte_end":13444990,"line_start":349,"line_end":349,"column_start":1,"column_end":328}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809717Z </font><font color=\"#CC0000\">ERROR</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: failed to shave yak </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>error</i><font color=\"#AAAAAA\">=missing yak </font><i>error.sources</i><font color=\"#AAAAAA\">=[out of space, out of cash] </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13444991,"byte_end":13445433,"line_start":350,"line_end":350,"column_start":1,"column_end":443}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809743Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13445434,"byte_end":13445732,"line_start":351,"line_end":351,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809768Z </font><font color=\"#4E9A06\"> INFO</font> <b>fmt_compact</b><font color=\"#AAAAAA\">: yak shaving completed </font><i>all_yaks_shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13445733,"byte_end":13445957,"line_start":352,"line_end":352,"column_start":1,"column_end":225}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13445958,"byte_end":13445961,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13445962,"byte_end":13445972,"line_start":354,"line_end":354,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451527,"byte_end":13451531,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"Full","qualname":"::fmt::format::Full","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker for [`Format`] that indicates that the default log format should be used.","sig":null,"attributes":[{"value":"/ Marker for [`Format`] that indicates that the default log format should be used.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446048,"byte_end":13446132,"line_start":358,"line_end":358,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446133,"byte_end":13446136,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ This formatter shows the span context before printing event data. Spans are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446137,"byte_end":13446216,"line_start":360,"line_end":360,"column_start":1,"column_end":80}},{"value":"/ displayed including their names and fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446217,"byte_end":13446264,"line_start":361,"line_end":361,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446265,"byte_end":13446268,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ # Example Output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446269,"byte_end":13446289,"line_start":363,"line_end":363,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446290,"byte_end":13446293,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ <pre><font color=\"#4E9A06\"><b>:;</b></font> <font color=\"#4E9A06\">cargo</font> run --example fmt","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446294,"byte_end":13446394,"line_start":365,"line_end":365,"column_start":1,"column_end":101}},{"value":"/ <font color=\"#4E9A06\"><b>    Finished</b></font> dev [unoptimized + debuginfo] target(s) in 0.08s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446395,"byte_end":13446496,"line_start":366,"line_end":366,"column_start":1,"column_end":102}},{"value":"/ <font color=\"#4E9A06\"><b>     Running</b></font> `target/debug/examples/fmt`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446497,"byte_end":13446577,"line_start":367,"line_end":367,"column_start":1,"column_end":81}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.289898Z </font><font color=\"#4E9A06\"> INFO</font> fmt: preparing to shave yaks <i>number_of_yaks</i><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446578,"byte_end":13446755,"line_start":368,"line_end":368,"column_start":1,"column_end":178}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.289974Z </font><font color=\"#4E9A06\"> INFO</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: shaving yaks</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446756,"byte_end":13446981,"line_start":369,"line_end":369,"column_start":1,"column_end":226}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290011Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=1</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13446982,"byte_end":13447384,"line_start":370,"line_end":370,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290038Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=1</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: yak shaved successfully</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13447385,"byte_end":13447713,"line_start":371,"line_end":371,"column_start":1,"column_end":329}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290070Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=1 </font><i>shaved</i><font color=\"#AAAAAA\">=true</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13447714,"byte_end":13448012,"line_start":372,"line_end":372,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290089Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13448013,"byte_end":13448275,"line_start":373,"line_end":373,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290114Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=2</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13448276,"byte_end":13448678,"line_start":374,"line_end":374,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290134Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=2</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: yak shaved successfully</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13448679,"byte_end":13449007,"line_start":375,"line_end":375,"column_start":1,"column_end":329}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290157Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=2 </font><i>shaved</i><font color=\"#AAAAAA\">=true</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13449008,"byte_end":13449306,"line_start":376,"line_end":376,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290174Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13449307,"byte_end":13449569,"line_start":377,"line_end":377,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290198Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13449570,"byte_end":13449972,"line_start":378,"line_end":378,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290222Z </font><font color=\"#C4A000\"> WARN</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: could not locate yak</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13449973,"byte_end":13450298,"line_start":379,"line_end":379,"column_start":1,"column_end":326}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290247Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13450299,"byte_end":13450598,"line_start":380,"line_end":380,"column_start":1,"column_end":300}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290268Z </font><font color=\"#CC0000\">ERROR</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: failed to shave yak </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>error</i><font color=\"#AAAAAA\">=missing yak </font><i>error.sources</i><font color=\"#AAAAAA\">=[out of space, out of cash]</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13450599,"byte_end":13451005,"line_start":381,"line_end":381,"column_start":1,"column_end":407}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290287Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451006,"byte_end":13451268,"line_start":382,"line_end":382,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290309Z </font><font color=\"#4E9A06\"> INFO</font> fmt: yak shaving completed. <i>all_yaks_shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451269,"byte_end":13451450,"line_start":383,"line_end":383,"column_start":1,"column_end":182}},{"value":"/ </pre>","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451451,"byte_end":13451461,"line_start":384,"line_end":384,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13452136,"byte_end":13452142,"line_start":399,"line_end":399,"column_start":12,"column_end":18},"name":"Format","qualname":"::fmt::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531}],"decl_id":null,"docs":" A pre-configured event formatter.","sig":null,"attributes":[{"value":"/ A pre-configured event formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451534,"byte_end":13451571,"line_start":388,"line_end":388,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451572,"byte_end":13451575,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ You will usually want to use this as the `FormatEvent` for a `FmtSubscriber`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451576,"byte_end":13451657,"line_start":390,"line_end":390,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451658,"byte_end":13451661,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ The default logging format, [`Full`] includes all fields in each event and its containing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451662,"byte_end":13451755,"line_start":392,"line_end":392,"column_start":1,"column_end":94}},{"value":"/ spans. The [`Compact`] logging format is intended to produce shorter log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451756,"byte_end":13451832,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ lines; it displays each event's fields, along with fields from the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451833,"byte_end":13451911,"line_start":394,"line_end":394,"column_start":1,"column_end":79}},{"value":"/ span context, but other information is abbreviated. The [`Pretty`] logging","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451912,"byte_end":13451990,"line_start":395,"line_end":395,"column_start":1,"column_end":79}},{"value":"/ format is an extra-verbose, multi-line human-readable logging format","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13451991,"byte_end":13452063,"line_start":396,"line_end":396,"column_start":1,"column_end":73}},{"value":"/ intended for use in development.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13452064,"byte_end":13452100,"line_start":397,"line_end":397,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453435,"byte_end":13453441,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"by_ref","qualname":"<Writer>::by_ref","value":"pub fn by_ref(&mut Self) -> Writer","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Writer` that mutably borrows `self`.","sig":null,"attributes":[{"value":"/ Return a new `Writer` that mutably borrows `self`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453144,"byte_end":13453198,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453203,"byte_end":13453206,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This can be used to temporarily borrow a `Writer` to pass a new `Writer`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453211,"byte_end":13453287,"line_start":433,"line_end":433,"column_start":5,"column_end":81}},{"value":"/ to a function that takes a `Writer` by value, allowing the original writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453292,"byte_end":13453370,"line_start":434,"line_end":434,"column_start":5,"column_end":83}},{"value":"/ to still be used once that function returns.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453375,"byte_end":13453423,"line_start":435,"line_end":435,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454387,"byte_end":13454396,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"write_str","qualname":"<Writer>::write_str","value":"pub fn write_str(&mut Self, &str) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Writes a string slice into this `Writer`, returning whether the write succeeded.","sig":null,"attributes":[{"value":"/ Writes a string slice into this `Writer`, returning whether the write succeeded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453613,"byte_end":13453697,"line_start":444,"line_end":444,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453702,"byte_end":13453705,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method can only succeed if the entire string slice was successfully","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453710,"byte_end":13453786,"line_start":446,"line_end":446,"column_start":5,"column_end":81}},{"value":"/ written, and this method will not return until all data has been written","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453791,"byte_end":13453867,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ or an error occurs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453872,"byte_end":13453895,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453900,"byte_end":13453903,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_str` method] from the `Writer`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453908,"byte_end":13453985,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13453990,"byte_end":13454064,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used without needing to import the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454069,"byte_end":13454149,"line_start":452,"line_end":452,"column_start":5,"column_end":85}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454154,"byte_end":13454184,"line_start":453,"line_end":453,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454189,"byte_end":13454192,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454197,"byte_end":13454209,"line_start":455,"line_end":455,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454214,"byte_end":13454217,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This function will return an instance of [`std::fmt::Error`] on error.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454222,"byte_end":13454296,"line_start":457,"line_end":457,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454301,"byte_end":13454304,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`write_str` method]: std::fmt::Write::write_str","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454309,"byte_end":13454361,"line_start":459,"line_end":459,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454366,"byte_end":13454375,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455314,"byte_end":13455324,"line_start":483,"line_end":483,"column_start":12,"column_end":22},"name":"write_char","qualname":"<Writer>::write_char","value":"pub fn write_char(&mut Self, char) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Writes a [`char`] into this writer, returning whether the write succeeded.","sig":null,"attributes":[{"value":"/ Writes a [`char`] into this writer, returning whether the write succeeded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454478,"byte_end":13454556,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454561,"byte_end":13454564,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ A single [`char`] may be encoded as more than one byte.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454569,"byte_end":13454628,"line_start":467,"line_end":467,"column_start":5,"column_end":64}},{"value":"/ This method can only succeed if the entire byte sequence was successfully","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454633,"byte_end":13454710,"line_start":468,"line_end":468,"column_start":5,"column_end":82}},{"value":"/ written, and this method will not return until all data has been","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454715,"byte_end":13454783,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ written or an error occurs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454788,"byte_end":13454819,"line_start":470,"line_end":470,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454824,"byte_end":13454827,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_char` method] from the `Writer`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454832,"byte_end":13454910,"line_start":472,"line_end":472,"column_start":5,"column_end":83}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454915,"byte_end":13454989,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used without needing to import the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13454994,"byte_end":13455074,"line_start":474,"line_end":474,"column_start":5,"column_end":85}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455079,"byte_end":13455109,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455114,"byte_end":13455117,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455122,"byte_end":13455134,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455139,"byte_end":13455142,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function will return an instance of [`std::fmt::Error`] on error.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455147,"byte_end":13455221,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455226,"byte_end":13455229,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [`write_char` method]: std::fmt::Write::write_char","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455234,"byte_end":13455288,"line_start":481,"line_end":481,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455293,"byte_end":13455302,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455991,"byte_end":13456000,"line_start":499,"line_end":499,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"<Writer>::write_fmt","value":"pub fn write_fmt(&mut Self, fmt::Arguments) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Glue for usage of the [`write!`] macro with `Writer`s.","sig":null,"attributes":[{"value":"/ Glue for usage of the [`write!`] macro with `Writer`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455407,"byte_end":13455465,"line_start":487,"line_end":487,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455470,"byte_end":13455473,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This method should generally not be invoked manually, but rather through","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455478,"byte_end":13455554,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ the [`write!`] macro itself.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455559,"byte_end":13455591,"line_start":490,"line_end":490,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455596,"byte_end":13455599,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_fmt` method] from the `Writer`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455604,"byte_end":13455681,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455686,"byte_end":13455760,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used with the [`write!` macro]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455765,"byte_end":13455841,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ without needing to import the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455846,"byte_end":13455879,"line_start":495,"line_end":495,"column_start":5,"column_end":38}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455884,"byte_end":13455914,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455919,"byte_end":13455922,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`write_fmt` method]: std::fmt::Write::write_fmt","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13455927,"byte_end":13455979,"line_start":498,"line_end":498,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456412,"byte_end":13456428,"line_start":509,"line_end":509,"column_start":12,"column_end":28},"name":"has_ansi_escapes","qualname":"<Writer>::has_ansi_escapes","value":"pub fn has_ansi_escapes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [ANSI escape codes] may be used to add colors\n and other formatting when writing to this `Writer`.","sig":null,"attributes":[{"value":"/ Returns `true` if [ANSI escape codes] may be used to add colors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456102,"byte_end":13456169,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/ and other formatting when writing to this `Writer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456174,"byte_end":13456229,"line_start":504,"line_end":504,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456234,"byte_end":13456237,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If this returns `false`, formatters should not emit ANSI escape codes.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456242,"byte_end":13456316,"line_start":506,"line_end":506,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456321,"byte_end":13456324,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [ANSI escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13456329,"byte_end":13456400,"line_start":508,"line_end":508,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458409,"byte_end":13458416,"line_start":596,"line_end":596,"column_start":12,"column_end":19},"name":"compact","qualname":"<Format<F, T>>::compact","value":"pub fn compact(Self) -> Format<Compact, T>","parent":null,"children":[],"decl_id":null,"docs":" Use a less verbose output format.","sig":null,"attributes":[{"value":"/ Use a less verbose output format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458327,"byte_end":13458364,"line_start":593,"line_end":593,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458369,"byte_end":13458372,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ See [`Compact`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458377,"byte_end":13458397,"line_start":595,"line_end":595,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13462045,"byte_end":13462055,"line_start":695,"line_end":695,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<Format<F, T>>::with_timer","value":"pub fn with_timer<T2>(Self, T2) -> Format<F, T2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for log message timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for log message timestamps.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461432,"byte_end":13461487,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461492,"byte_end":13461495,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ See [`time` module] for the provided timer implementations.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461500,"byte_end":13461563,"line_start":683,"line_end":683,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461568,"byte_end":13461571,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time\"` feature flag enables the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461576,"byte_end":13461633,"line_start":685,"line_end":685,"column_start":5,"column_end":62}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461638,"byte_end":13461713,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461718,"byte_end":13461787,"line_start":687,"line_end":687,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461792,"byte_end":13461804,"line_start":688,"line_end":688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461809,"byte_end":13461812,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: super::time::FormatTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461817,"byte_end":13461855,"line_start":690,"line_end":690,"column_start":5,"column_end":43}},{"value":"/ [`time` module]: mod@super::time","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461860,"byte_end":13461896,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/ [`UtcTime`]: super::time::UtcTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461901,"byte_end":13461938,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ [`LocalTime`]: super::time::LocalTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461943,"byte_end":13461984,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13461989,"byte_end":13462033,"line_start":694,"line_end":694,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13462649,"byte_end":13462661,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"without_time","qualname":"<Format<F, T>>::without_time","value":"pub fn without_time(Self) -> Format<F, ()>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with log messages.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with log messages.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13462592,"byte_end":13462637,"line_start":710,"line_end":710,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463235,"byte_end":13463244,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"with_ansi","qualname":"<Format<F, T>>::with_ansi","value":"pub fn with_ansi(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Enable ANSI terminal colors for formatted output.\n","sig":null,"attributes":[{"value":"/ Enable ANSI terminal colors for formatted output.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463170,"byte_end":13463223,"line_start":726,"line_end":726,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463435,"byte_end":13463446,"line_start":735,"line_end":735,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Format<F, T>>::with_target","value":"pub fn with_target(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463368,"byte_end":13463423,"line_start":734,"line_end":734,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463644,"byte_end":13463654,"line_start":743,"line_end":743,"column_start":12,"column_end":22},"name":"with_level","qualname":"<Format<F, T>>::with_level","value":"pub fn with_level(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463578,"byte_end":13463632,"line_start":742,"line_end":742,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463953,"byte_end":13463968,"line_start":754,"line_end":754,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<Format<F, T>>::with_thread_ids","value":"pub fn with_thread_ids(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463784,"byte_end":13463858,"line_start":750,"line_end":750,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463863,"byte_end":13463890,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463895,"byte_end":13463898,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13463903,"byte_end":13463941,"line_start":753,"line_end":753,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464270,"byte_end":13464287,"line_start":765,"line_end":765,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<Format<F, T>>::with_thread_names","value":"pub fn with_thread_names(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464106,"byte_end":13464175,"line_start":761,"line_end":761,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464180,"byte_end":13464207,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464212,"byte_end":13464215,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464220,"byte_end":13464258,"line_start":764,"line_end":764,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464580,"byte_end":13464589,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"with_file","qualname":"<Format<F, T>>::with_file","value":"pub fn with_file(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464429,"byte_end":13464496,"line_start":772,"line_end":772,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464501,"byte_end":13464515,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464520,"byte_end":13464523,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464528,"byte_end":13464568,"line_start":775,"line_end":775,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464878,"byte_end":13464894,"line_start":787,"line_end":787,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<Format<F, T>>::with_line_number","value":"pub fn with_line_number(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464725,"byte_end":13464794,"line_start":783,"line_end":783,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464799,"byte_end":13464813,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464818,"byte_end":13464821,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13464826,"byte_end":13464866,"line_start":786,"line_end":786,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465279,"byte_end":13465299,"line_start":799,"line_end":799,"column_start":12,"column_end":32},"name":"with_source_location","qualname":"<Format<F, T>>::with_source_location","value":"pub fn with_source_location(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the source code location from which an event\n originated is displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not the source code location from which an event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465036,"byte_end":13465104,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"/ originated is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465109,"byte_end":13465137,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465142,"byte_end":13465145,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling [`Format::with_file`] and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465150,"byte_end":13465209,"line_start":797,"line_end":797,"column_start":5,"column_end":64}},{"value":"/ [`Format::with_line_number`] with the same value.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13465214,"byte_end":13465267,"line_start":798,"line_end":798,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3515},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476471,"byte_end":13476484,"line_start":1156,"line_end":1156,"column_start":12,"column_end":25},"name":"DefaultFields","qualname":"::fmt::format::DefaultFields","value":"DefaultFields {  }","parent":null,"children":[{"krate":0,"index":3516}],"decl_id":null,"docs":" The default [`FormatFields`] implementation.","sig":null,"attributes":[{"value":"/ The default [`FormatFields`] implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476390,"byte_end":13476438,"line_start":1153,"line_end":1153,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476439,"byte_end":13476442,"line_start":1154,"line_end":1154,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476823,"byte_end":13476837,"line_start":1167,"line_end":1167,"column_start":12,"column_end":26},"name":"DefaultVisitor","qualname":"::fmt::format::DefaultVisitor","value":"DefaultVisitor {  }","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511}],"decl_id":null,"docs":" The [visitor] produced by [`DefaultFields`]'s [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ The [visitor] produced by [`DefaultFields`]'s [`MakeVisitor`] implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476613,"byte_end":13476694,"line_start":1162,"line_end":1162,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476695,"byte_end":13476698,"line_start":1163,"line_end":1163,"column_start":1,"column_end":4}},{"value":"/ [visitor]: super::super::field::Visit","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476699,"byte_end":13476740,"line_start":1164,"line_end":1164,"column_start":1,"column_end":42}},{"value":"/ [`MakeVisitor`]: super::super::field::MakeVisitor","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476741,"byte_end":13476794,"line_start":1165,"line_end":1165,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477019,"byte_end":13477022,"line_start":1176,"line_end":1176,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultFields>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default [`FormatFields`] implementation.","sig":null,"attributes":[{"value":"/ Returns a new default [`FormatFields`] implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476941,"byte_end":13476999,"line_start":1174,"line_end":1174,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477004,"byte_end":13477007,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477713,"byte_end":13477716,"line_start":1205,"line_end":1205,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultVisitor>::new","value":"pub fn new(Writer, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default visitor that formats to the provided `writer`.","sig":null,"attributes":[{"value":"/ Returns a new default visitor that formats to the provided `writer`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477453,"byte_end":13477525,"line_start":1199,"line_end":1199,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477530,"byte_end":13477533,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477538,"byte_end":13477553,"line_start":1201,"line_end":1201,"column_start":5,"column_end":20}},{"value":"/ - `writer`: the writer to format to.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477558,"byte_end":13477598,"line_start":1202,"line_end":1202,"column_start":5,"column_end":45}},{"value":"/ - `is_empty`: whether or not any fields have been previously written to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477603,"byte_end":13477678,"line_start":1203,"line_end":1203,"column_start":5,"column_end":80}},{"value":"/   that writer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477683,"byte_end":13477701,"line_start":1204,"line_end":1204,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3199},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487853,"byte_end":13487860,"line_start":1567,"line_end":1567,"column_start":12,"column_end":19},"name":"FmtSpan","qualname":"::fmt::format::FmtSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Configures what points in the span lifecycle are logged as events.","sig":null,"attributes":[{"value":"/ Configures what points in the span lifecycle are logged as events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487634,"byte_end":13487704,"line_start":1563,"line_end":1563,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487705,"byte_end":13487708,"line_start":1564,"line_end":1564,"column_start":1,"column_end":4}},{"value":"/ See also [`with_span_events`](super::SubscriberBuilder.html::with_span_events).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487709,"byte_end":13487792,"line_start":1565,"line_end":1565,"column_start":1,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":2711},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487935,"byte_end":13487938,"line_start":1571,"line_end":1571,"column_start":15,"column_end":18},"name":"NEW","qualname":"::fmt::format::FmtSpan::NEW","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" one event when span is created\n","sig":null,"attributes":[{"value":"/ one event when span is created","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487886,"byte_end":13487920,"line_start":1570,"line_end":1570,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":2712},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488019,"byte_end":13488024,"line_start":1573,"line_end":1573,"column_start":15,"column_end":20},"name":"ENTER","qualname":"::fmt::format::FmtSpan::ENTER","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" one event per enter of a span\n","sig":null,"attributes":[{"value":"/ one event per enter of a span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487971,"byte_end":13488004,"line_start":1572,"line_end":1572,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2713},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488104,"byte_end":13488108,"line_start":1575,"line_end":1575,"column_start":15,"column_end":19},"name":"EXIT","qualname":"::fmt::format::FmtSpan::EXIT","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" one event per exit of a span\n","sig":null,"attributes":[{"value":"/ one event per exit of a span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488057,"byte_end":13488089,"line_start":1574,"line_end":1574,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2714},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488194,"byte_end":13488199,"line_start":1577,"line_end":1577,"column_start":15,"column_end":20},"name":"CLOSE","qualname":"::fmt::format::FmtSpan::CLOSE","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" one event when the span is dropped\n","sig":null,"attributes":[{"value":"/ one event when the span is dropped","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488141,"byte_end":13488179,"line_start":1576,"line_end":1576,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":2715},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488291,"byte_end":13488295,"line_start":1580,"line_end":1580,"column_start":15,"column_end":19},"name":"NONE","qualname":"::fmt::format::FmtSpan::NONE","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" spans are ignored (this is the default)\n","sig":null,"attributes":[{"value":"/ spans are ignored (this is the default)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488233,"byte_end":13488276,"line_start":1579,"line_end":1579,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":2716},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488376,"byte_end":13488382,"line_start":1582,"line_end":1582,"column_start":15,"column_end":21},"name":"ACTIVE","qualname":"::fmt::format::FmtSpan::ACTIVE","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" one event per enter/exit of a span\n","sig":null,"attributes":[{"value":"/ one event per enter/exit of a span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488323,"byte_end":13488361,"line_start":1581,"line_end":1581,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":2717},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488507,"byte_end":13488511,"line_start":1584,"line_end":1584,"column_start":15,"column_end":19},"name":"FULL","qualname":"::fmt::format::FmtSpan::FULL","value":"FmtSpan","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" events at all points (new, enter, exit, drop)\n","sig":null,"attributes":[{"value":"/ events at all points (new, enter, exit, drop)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13488443,"byte_end":13488492,"line_start":1583,"line_end":1583,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":2743},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::fmt::time","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2747},{"krate":0,"index":2750},{"krate":0,"index":2753},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785}],"decl_id":null,"docs":" Formatters for event timestamps.\n","sig":null,"attributes":[{"value":"/ Formatters for event timestamps.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13507687,"byte_end":13507723,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":2767},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508791,"byte_end":13508801,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"FormatTime","qualname":"::fmt::time::FormatTime","value":"FormatTime","parent":null,"children":[{"krate":0,"index":2768}],"decl_id":null,"docs":" A type that can measure and format the current time.","sig":null,"attributes":[{"value":"/ A type that can measure and format the current time.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508199,"byte_end":13508255,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508256,"byte_end":13508259,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This trait is used by `Format` to include a timestamp with each `Event` when it is logged.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508260,"byte_end":13508354,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508355,"byte_end":13508358,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Notable default implementations of this trait are `SystemTime` and `()`. The former prints the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508359,"byte_end":13508457,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ current time as reported by `std::time::SystemTime`, and the latter does not print the current","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508458,"byte_end":13508556,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ time at all. `FormatTime` is also automatically implemented for any function pointer with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508557,"byte_end":13508654,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ appropriate signature.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508655,"byte_end":13508681,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508682,"byte_end":13508685,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The full list of provided implementations can be found in [`time`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508686,"byte_end":13508757,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508758,"byte_end":13508761,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`time`]: self","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508762,"byte_end":13508780,"line_start":33,"line_end":33,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509158,"byte_end":13509169,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"format_time","qualname":"::fmt::time::FormatTime::format_time","value":"pub fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":" Measure and write out the current time.","sig":null,"attributes":[{"value":"/ Measure and write out the current time.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508808,"byte_end":13508851,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508856,"byte_end":13508859,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ When `format_time` is called, implementors should get the current time using their desired","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508864,"byte_end":13508958,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"/ mechanism, and write it out to the given `fmt::Write`. Implementors must insert a trailing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13508963,"byte_end":13509057,"line_start":38,"line_end":38,"column_start":5,"column_end":99}},{"value":"/ space themselves if they wish to separate the time from subsequent log message text.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509062,"byte_end":13509150,"line_start":39,"line_end":39,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":2769},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509559,"byte_end":13509563,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"time","qualname":"::fmt::time::time","value":"pub fn time() -> SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SystemTime` timestamp provider.","sig":null,"attributes":[{"value":"/ Returns a new `SystemTime` timestamp provider.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509216,"byte_end":13509266,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509267,"byte_end":13509270,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This can then be configured further to determine how timestamps should be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509271,"byte_end":13509348,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ configured.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509349,"byte_end":13509364,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509365,"byte_end":13509368,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509369,"byte_end":13509402,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509403,"byte_end":13509414,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # fn timer() -> tracing_subscriber::fmt::time::SystemTime {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509415,"byte_end":13509478,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/ tracing_subscriber::fmt::time::SystemTime::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509479,"byte_end":13509535,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509536,"byte_end":13509543,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509544,"byte_end":13509551,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2770},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510078,"byte_end":13510084,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"uptime","qualname":"::fmt::time::uptime","value":"pub fn uptime() -> Uptime","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Uptime` timestamp provider.","sig":null,"attributes":[{"value":"/ Returns a new `Uptime` timestamp provider.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509611,"byte_end":13509657,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509658,"byte_end":13509661,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ With this timer, timestamps will be formatted with the amount of time","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509662,"byte_end":13509735,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ elapsed since the timestamp provider was constructed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509736,"byte_end":13509793,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509794,"byte_end":13509797,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This can then be configured further to determine how timestamps should be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509798,"byte_end":13509875,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ configured.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509876,"byte_end":13509891,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509892,"byte_end":13509895,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509896,"byte_end":13509929,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509930,"byte_end":13509941,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # fn timer() -> tracing_subscriber::fmt::time::Uptime {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13509942,"byte_end":13510001,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ tracing_subscriber::fmt::time::Uptime::default()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510002,"byte_end":13510054,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510055,"byte_end":13510062,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510063,"byte_end":13510070,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3250},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510664,"byte_end":13510674,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"SystemTime","qualname":"::fmt::time::SystemTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Retrieve and print the current wall-clock time.\n","sig":null,"attributes":[{"value":"/ Retrieve and print the current wall-clock time.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510547,"byte_end":13510598,"line_start":97,"line_end":97,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3265},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510893,"byte_end":13510899,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Uptime","qualname":"::fmt::time::Uptime","value":"Uptime {  }","parent":null,"children":[{"krate":0,"index":3266}],"decl_id":null,"docs":" Retrieve and print the relative elapsed wall-clock time since an epoch.","sig":null,"attributes":[{"value":"/ Retrieve and print the relative elapsed wall-clock time since an epoch.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510677,"byte_end":13510752,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510753,"byte_end":13510756,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The `Default` implementation for `Uptime` makes the epoch the current time.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510757,"byte_end":13510836,"line_start":103,"line_end":103,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":2787},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::fmt::writer","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2817},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":2828},{"krate":0,"index":3285},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3301},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":2832},{"krate":0,"index":3320},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3343},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3352},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3371},{"krate":0,"index":3374},{"krate":0,"index":3378},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3389},{"krate":0,"index":3392},{"krate":0,"index":3397},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3409},{"krate":0,"index":3413},{"krate":0,"index":3416},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3428},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3440},{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3459},{"krate":0,"index":3464},{"krate":0,"index":3468},{"krate":0,"index":3472},{"krate":0,"index":3475},{"krate":0,"index":2834},{"krate":0,"index":2840},{"krate":0,"index":2845},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2858},{"krate":0,"index":2862},{"krate":0,"index":2864},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2879},{"krate":0,"index":2884},{"krate":0,"index":2892},{"krate":0,"index":2900},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":2910},{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2925},{"krate":0,"index":2929},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2956},{"krate":0,"index":2962},{"krate":0,"index":2970},{"krate":0,"index":2978}],"decl_id":null,"docs":" Abstractions for creating [`io::Write`] instances.","sig":null,"attributes":[{"value":"/ Abstractions for creating [`io::Write`] instances.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13525897,"byte_end":13525951,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13525952,"byte_end":13525955,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13525956,"byte_end":13525989,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":2812},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528876,"byte_end":13528886,"line_start":96,"line_end":96,"column_start":11,"column_end":21},"name":"MakeWriter","qualname":"::fmt::writer::MakeWriter","value":"MakeWriter<'a>","parent":null,"children":[{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816}],"decl_id":null,"docs":" A type that can create [`io::Write`] instances.","sig":null,"attributes":[{"value":"/ A type that can create [`io::Write`] instances.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526101,"byte_end":13526152,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526153,"byte_end":13526156,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MakeWriter` is used by [`fmt::Layer`] or [`fmt::Subscriber`] to print","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526157,"byte_end":13526231,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ formatted text representations of [`Event`]s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526232,"byte_end":13526281,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526282,"byte_end":13526285,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is already implemented for function pointers and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526286,"byte_end":13526349,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ immutably-borrowing closures that return an instance of [`io::Write`], such","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526350,"byte_end":13526429,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ as [`io::stdout`] and [`io::stderr`]. Additionally, it is implemented for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526430,"byte_end":13526507,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ [`std::sync::Mutex`][mutex] when the tyoe inside the mutex implements","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526508,"byte_end":13526581,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ [`io::Write`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526582,"byte_end":13526600,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526601,"byte_end":13526604,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526605,"byte_end":13526619,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526620,"byte_end":13526623,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The simplest usage is to pass in a named function that returns a writer. For","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526624,"byte_end":13526704,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ example, to log all events to stderr, we could write:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526705,"byte_end":13526762,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526763,"byte_end":13526770,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526771,"byte_end":13526817,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/     .with_writer(std::io::stderr)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526818,"byte_end":13526855,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526856,"byte_end":13526874,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526875,"byte_end":13526898,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526899,"byte_end":13526906,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526907,"byte_end":13526910,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Any function that returns a writer can be used:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526911,"byte_end":13526962,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526963,"byte_end":13526966,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526967,"byte_end":13526974,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ fn make_my_great_writer() -> impl std::io::Write {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13526975,"byte_end":13527029,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/     // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527030,"byte_end":13527044,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/     # std::io::stdout()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527045,"byte_end":13527072,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527073,"byte_end":13527078,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527079,"byte_end":13527082,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527083,"byte_end":13527129,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/     .with_writer(make_my_great_writer)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527130,"byte_end":13527172,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527173,"byte_end":13527191,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527192,"byte_end":13527215,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527216,"byte_end":13527223,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527224,"byte_end":13527227,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A closure can be used to introduce arbitrary logic into how the writer is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527228,"byte_end":13527305,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ created. Consider the (admittedly rather silly) example of sending every 5th","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527306,"byte_end":13527386,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ event to stderr, and all other events to stdout:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527387,"byte_end":13527439,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527440,"byte_end":13527443,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527444,"byte_end":13527451,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527452,"byte_end":13527468,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering::Relaxed};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527469,"byte_end":13527529,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527530,"byte_end":13527533,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let n = AtomicUsize::new(0);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527534,"byte_end":13527566,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527567,"byte_end":13527613,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     .with_writer(move || -> Box<dyn io::Write> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527614,"byte_end":13527666,"line_start":57,"line_end":57,"column_start":1,"column_end":53}},{"value":"/         if n.fetch_add(1, Relaxed) % 5 == 0 {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527667,"byte_end":13527716,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/             Box::new(io::stderr())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527717,"byte_end":13527755,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/         } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527756,"byte_end":13527776,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/             Box::new(io::stdout())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527777,"byte_end":13527815,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/        }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527816,"byte_end":13527828,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/     })","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527829,"byte_end":13527839,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527840,"byte_end":13527858,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527859,"byte_end":13527882,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527883,"byte_end":13527890,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527891,"byte_end":13527894,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ A single instance of a type implementing [`io::Write`] may be used as a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527895,"byte_end":13527970,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ `MakeWriter` by wrapping it in a [`Mutex`][mutex]. For example, we could","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13527971,"byte_end":13528047,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ write to a file like so:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528048,"byte_end":13528076,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528077,"byte_end":13528080,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528081,"byte_end":13528088,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ use std::{fs::File, sync::Mutex};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528089,"byte_end":13528126,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528127,"byte_end":13528130,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528131,"byte_end":13528190,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/ let log_file = File::create(\"my_cool_trace.log\")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528191,"byte_end":13528245,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528246,"byte_end":13528292,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/     .with_writer(Mutex::new(log_file))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528293,"byte_end":13528335,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528336,"byte_end":13528354,"line_start":79,"line_end":79,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528355,"byte_end":13528378,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528379,"byte_end":13528391,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528392,"byte_end":13528399,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528400,"byte_end":13528407,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528408,"byte_end":13528411,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528412,"byte_end":13528445,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/ [`fmt::Layer`]: crate::fmt::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528446,"byte_end":13528483,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/ [`fmt::Subscriber`]: crate::fmt::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528484,"byte_end":13528531,"line_start":87,"line_end":87,"column_start":1,"column_end":48}},{"value":"/ [`Event`]: tracing_core::event::Event","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528532,"byte_end":13528573,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ [`io::stdout`]: std::io::stdout()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528574,"byte_end":13528611,"line_start":89,"line_end":89,"column_start":1,"column_end":38}},{"value":"/ [`io::stderr`]: std::io::stderr()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528612,"byte_end":13528649,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/ [mutex]: std::sync::Mutex","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528650,"byte_end":13528679,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ [`MakeWriter::make_writer_for`]: MakeWriter::make_writer_for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528680,"byte_end":13528744,"line_start":92,"line_end":92,"column_start":1,"column_end":65}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528745,"byte_end":13528785,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/ [levels]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528786,"byte_end":13528819,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ [targets]: tracing_core::Metadata::target","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528820,"byte_end":13528865,"line_start":95,"line_end":95,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2814},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529076,"byte_end":13529082,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Writer","qualname":"::fmt::writer::MakeWriter::Writer","value":"type Writer: io::Write;","parent":{"krate":0,"index":2812},"children":[],"decl_id":null,"docs":" The concrete [`io::Write`] implementation returned by [`make_writer`].","sig":null,"attributes":[{"value":"/ The concrete [`io::Write`] implementation returned by [`make_writer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528897,"byte_end":13528971,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528976,"byte_end":13528979,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13528984,"byte_end":13529017,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ [`make_writer`]: MakeWriter::make_writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529022,"byte_end":13529066,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529724,"byte_end":13529735,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"make_writer","qualname":"::fmt::writer::MakeWriter::make_writer","value":"pub fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":2812},"children":[],"decl_id":null,"docs":" Returns an instance of [`Writer`].","sig":null,"attributes":[{"value":"/ Returns an instance of [`Writer`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529100,"byte_end":13529138,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529143,"byte_end":13529146,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529151,"byte_end":13529174,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529179,"byte_end":13529182,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`fmt::Layer`] or [`fmt::Subscriber`] will call this method each time an event is recorded. Ensure any state","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529187,"byte_end":13529299,"line_start":107,"line_end":107,"column_start":5,"column_end":117}},{"value":"/ that must be saved across writes is not lost when the [`Writer`] instance is dropped. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529304,"byte_end":13529396,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ creating a [`io::Write`] instance is expensive, be sure to cache it when implementing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529401,"byte_end":13529490,"line_start":109,"line_end":109,"column_start":5,"column_end":94}},{"value":"/ [`MakeWriter`] to improve performance.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529495,"byte_end":13529537,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529542,"byte_end":13529545,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: MakeWriter::Writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529550,"byte_end":13529584,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/ [`fmt::Layer`]: crate::fmt::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529589,"byte_end":13529626,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ [`fmt::Subscriber`]: crate::fmt::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529631,"byte_end":13529678,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529683,"byte_end":13529716,"line_start":115,"line_end":115,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533318,"byte_end":13533333,"line_start":206,"line_end":206,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"::fmt::writer::MakeWriter::make_writer_for","value":"pub fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":2812},"children":[],"decl_id":null,"docs":" Returns a [`Writer`] for writing data from the span or event described\n by the provided [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns a [`Writer`] for writing data from the span or event described","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529768,"byte_end":13529842,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ by the provided [`Metadata`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529847,"byte_end":13529880,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529885,"byte_end":13529888,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ By default, this calls [`self.make_writer()`][make_writer], ignoring","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529893,"byte_end":13529965,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ the provided metadata, but implementations can override this to provide","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13529970,"byte_end":13530045,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ metadata-specific behaviors.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530050,"byte_end":13530082,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530087,"byte_end":13530090,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method allows `MakeWriter` implementations to implement different","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530095,"byte_end":13530169,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ behaviors based on the span or event being written. The `MakeWriter`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530174,"byte_end":13530246,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ type might return different writers based on the provided metadata, or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530251,"byte_end":13530325,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ might write some values to the writer before or after providing it to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530330,"byte_end":13530403,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ the caller.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530408,"byte_end":13530423,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530428,"byte_end":13530431,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ For example, we might want to write data from spans and events at the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530436,"byte_end":13530509,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ [`ERROR`] and [`WARN`] levels to `stderr`, and data from spans or events","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530514,"byte_end":13530590,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ at lower levels to stdout:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530595,"byte_end":13530625,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530630,"byte_end":13530633,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530638,"byte_end":13530645,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use std::io::{self, Stdout, Stderr, StdoutLock, StderrLock};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530650,"byte_end":13530714,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530719,"byte_end":13530771,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"/ use tracing_core::{Metadata, Level};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530776,"byte_end":13530816,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530821,"byte_end":13530824,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ pub struct MyMakeWriter {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530829,"byte_end":13530858,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/     stdout: Stdout,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530863,"byte_end":13530886,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/     stderr: Stderr,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530891,"byte_end":13530914,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530919,"byte_end":13530924,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530929,"byte_end":13530932,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ /// A lock on either stdout or stderr, depending on the verbosity level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13530937,"byte_end":13531012,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ /// of the event being written.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531017,"byte_end":13531052,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/ pub enum StdioLock<'a> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531057,"byte_end":13531085,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     Stdout(StdoutLock<'a>),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531090,"byte_end":13531121,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/     Stderr(StderrLock<'a>),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531126,"byte_end":13531157,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531162,"byte_end":13531167,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531172,"byte_end":13531175,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ impl<'a> io::Write for StdioLock<'a> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531180,"byte_end":13531222,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531227,"byte_end":13531289,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/         match self {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531294,"byte_end":13531318,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/             StdioLock::Stdout(lock) => lock.write(buf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531323,"byte_end":13531382,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/             StdioLock::Stderr(lock) => lock.write(buf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531387,"byte_end":13531446,"line_start":156,"line_end":156,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531451,"byte_end":13531464,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531469,"byte_end":13531478,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531483,"byte_end":13531486,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     fn write_all(&mut self, buf: &[u8]) -> io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531491,"byte_end":13531554,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/         // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531559,"byte_end":13531577,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/         # match self {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531582,"byte_end":13531608,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/         #     StdioLock::Stdout(lock) => lock.write_all(buf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531613,"byte_end":13531678,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/         #     StdioLock::Stderr(lock) => lock.write_all(buf),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531683,"byte_end":13531748,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/         # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531753,"byte_end":13531768,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531773,"byte_end":13531782,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531787,"byte_end":13531790,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     fn flush(&mut self) -> io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531795,"byte_end":13531842,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/         // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531847,"byte_end":13531865,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/         # match self {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531870,"byte_end":13531896,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/         #     StdioLock::Stdout(lock) => lock.flush(),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531901,"byte_end":13531959,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/         #     StdioLock::Stderr(lock) => lock.flush(),","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13531964,"byte_end":13532022,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/         # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532027,"byte_end":13532042,"line_start":173,"line_end":173,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532047,"byte_end":13532056,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532061,"byte_end":13532066,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532071,"byte_end":13532074,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ impl<'a> MakeWriter<'a> for MyMakeWriter {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532079,"byte_end":13532125,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/     type Writer = StdioLock<'a>;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532130,"byte_end":13532166,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532171,"byte_end":13532174,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     fn make_writer(&'a self) -> Self::Writer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532179,"byte_end":13532229,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/         // We must have an implementation of `make_writer` that makes","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532234,"byte_end":13532307,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/         // a \"default\" writer without any configuring metadata. Let's","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532312,"byte_end":13532385,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/         // just return stdout in that case.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532390,"byte_end":13532437,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/         StdioLock::Stdout(self.stdout.lock())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532442,"byte_end":13532491,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532496,"byte_end":13532505,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532510,"byte_end":13532513,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/     fn make_writer_for(&'a self, meta: &Metadata<'_>) -> Self::Writer {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532518,"byte_end":13532593,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/         // Here's where we can implement our special behavior. We'll","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532598,"byte_end":13532670,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/         // check if the metadata's verbosity level is WARN or ERROR,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532675,"byte_end":13532747,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/         // and return stderr in that case.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532752,"byte_end":13532798,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/         if meta.level() <= &Level::WARN {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532803,"byte_end":13532848,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/             return StdioLock::Stderr(self.stderr.lock());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532853,"byte_end":13532914,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/         }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532919,"byte_end":13532932,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532937,"byte_end":13532940,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/         // Otherwise, we'll return stdout.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532945,"byte_end":13532991,"line_start":195,"line_end":195,"column_start":5,"column_end":51}},{"value":"/         StdioLock::Stdout(self.stdout.lock())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13532996,"byte_end":13533045,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533050,"byte_end":13533059,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533064,"byte_end":13533069,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533074,"byte_end":13533081,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533086,"byte_end":13533089,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: MakeWriter::Writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533094,"byte_end":13533128,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533133,"byte_end":13533173,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/ [make_writer]: MakeWriter::make_writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533178,"byte_end":13533220,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/ [`WARN`]: tracing_core::Level::WARN","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533225,"byte_end":13533264,"line_start":204,"line_end":204,"column_start":5,"column_end":44}},{"value":"/ [`ERROR`]: tracing_core::Level::ERROR","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533269,"byte_end":13533310,"line_start":205,"line_end":205,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":2817},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533710,"byte_end":13533723,"line_start":218,"line_end":218,"column_start":11,"column_end":24},"name":"MakeWriterExt","qualname":"::fmt::writer::MakeWriterExt","value":"MakeWriterExt<'a>: MakeWriter","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825}],"decl_id":null,"docs":" Extension trait adding combinators for working with types implementing\n [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Extension trait adding combinators for working with types implementing","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533441,"byte_end":13533515,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ [`MakeWriter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533516,"byte_end":13533535,"line_start":213,"line_end":213,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533536,"byte_end":13533539,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ This is not intended to be implemented directly for user-defined","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533540,"byte_end":13533608,"line_start":215,"line_end":215,"column_start":1,"column_end":69}},{"value":"/ [`MakeWriter`]s; instead, it should be imported when the desired methods are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533609,"byte_end":13533689,"line_start":216,"line_end":216,"column_start":1,"column_end":81}},{"value":"/ used.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533690,"byte_end":13533699,"line_start":217,"line_end":217,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535887,"byte_end":13535901,"line_start":277,"line_end":277,"column_start":8,"column_end":22},"name":"with_max_level","qualname":"::fmt::writer::MakeWriterExt::with_max_level","value":"pub fn with_max_level(Self, tracing_core::Level) -> WithMaxLevel<Self> where\nSelf: Sized","parent":{"krate":0,"index":2817},"children":[],"decl_id":null,"docs":" Wraps `self` and returns a [`MakeWriter`] that will only write output\n for events at or below the provided verbosity [`Level`]. For instance,\n `Level::TRACE` is considered to be _more verbose` than `Level::INFO`.","sig":null,"attributes":[{"value":"/ Wraps `self` and returns a [`MakeWriter`] that will only write output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533750,"byte_end":13533823,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ for events at or below the provided verbosity [`Level`]. For instance,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533828,"byte_end":13533902,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ `Level::TRACE` is considered to be _more verbose` than `Level::INFO`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533907,"byte_end":13533980,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533985,"byte_end":13533988,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Events whose level is more verbose than `level` will be ignored, and no","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533993,"byte_end":13534068,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ output will be written.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534073,"byte_end":13534100,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534105,"byte_end":13534108,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534113,"byte_end":13534127,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534132,"byte_end":13534135,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534140,"byte_end":13534147,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534152,"byte_end":13534175,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534180,"byte_end":13534235,"line_start":230,"line_end":230,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534240,"byte_end":13534243,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stderr` only if the span or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534248,"byte_end":13534325,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ // event's level is >= WARN (WARN and ERROR).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534330,"byte_end":13534379,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ let mk_writer = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534384,"byte_end":13534448,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534453,"byte_end":13534456,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534461,"byte_end":13534521,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534526,"byte_end":13534533,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534538,"byte_end":13534541,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Writing the `ERROR` and `WARN` levels to `stderr`, and everything else","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534546,"byte_end":13534620,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ to `stdout`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534625,"byte_end":13534641,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534646,"byte_end":13534649,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534654,"byte_end":13534661,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534666,"byte_end":13534691,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534696,"byte_end":13534753,"line_start":244,"line_end":244,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534758,"byte_end":13534761,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = std::io::stderr","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534766,"byte_end":13534801,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::WARN)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534806,"byte_end":13534842,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/     .or_else(std::io::stdout);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534847,"byte_end":13534881,"line_start":248,"line_end":248,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534886,"byte_end":13534889,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534894,"byte_end":13534954,"line_start":250,"line_end":250,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534959,"byte_end":13534966,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534971,"byte_end":13534974,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Writing the `ERROR` level to `stderr`, the `INFO` and `WARN` levels to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13534979,"byte_end":13535053,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ `stdout`, and the `INFO` and DEBUG` levels to a file:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535058,"byte_end":13535115,"line_start":254,"line_end":254,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535120,"byte_end":13535123,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535128,"byte_end":13535135,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535140,"byte_end":13535165,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535170,"byte_end":13535227,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535232,"byte_end":13535267,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535272,"byte_end":13535335,"line_start":260,"line_end":260,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535340,"byte_end":13535380,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let debug_log = Arc::new(File::create(\"debug.log\")?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535385,"byte_end":13535442,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535447,"byte_end":13535450,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = std::io::stderr","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535455,"byte_end":13535490,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::ERROR)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535495,"byte_end":13535532,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/     .or_else(std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535537,"byte_end":13535569,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/         .with_max_level(Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535574,"byte_end":13535614,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/         .and(debug_log.with_max_level(Level::DEBUG))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535619,"byte_end":13535675,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/     );","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535680,"byte_end":13535690,"line_start":269,"line_end":269,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535695,"byte_end":13535698,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535703,"byte_end":13535763,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535768,"byte_end":13535782,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535787,"byte_end":13535794,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535799,"byte_end":13535802,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535807,"byte_end":13535841,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13535846,"byte_end":13535879,"line_start":276,"line_end":276,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537448,"byte_end":13537462,"line_start":319,"line_end":319,"column_start":8,"column_end":22},"name":"with_min_level","qualname":"::fmt::writer::MakeWriterExt::with_min_level","value":"pub fn with_min_level(Self, tracing_core::Level) -> WithMinLevel<Self> where\nSelf: Sized","parent":{"krate":0,"index":2817},"children":[],"decl_id":null,"docs":" Wraps `self` and returns a [`MakeWriter`] that will only write output\n for events at or above the provided verbosity [`Level`].","sig":null,"attributes":[{"value":"/ Wraps `self` and returns a [`MakeWriter`] that will only write output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536045,"byte_end":13536118,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ for events at or above the provided verbosity [`Level`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536123,"byte_end":13536183,"line_start":285,"line_end":285,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536188,"byte_end":13536191,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Events whose level is less verbose than `level` will be ignored, and no","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536196,"byte_end":13536271,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ output will be written.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536276,"byte_end":13536303,"line_start":288,"line_end":288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536308,"byte_end":13536311,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536316,"byte_end":13536330,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536335,"byte_end":13536338,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536343,"byte_end":13536350,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536355,"byte_end":13536378,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536383,"byte_end":13536438,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536443,"byte_end":13536446,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stdout` only if the span or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536451,"byte_end":13536528,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ // event's level is <= DEBUG (DEBUG and TRACE).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536533,"byte_end":13536584,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let mk_writer = std::io::stdout.with_min_level(Level::DEBUG);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536589,"byte_end":13536654,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536659,"byte_end":13536662,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536667,"byte_end":13536727,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536732,"byte_end":13536739,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ This can be combined with [`MakeWriterExt::with_max_level`] to write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536744,"byte_end":13536816,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ only within a range of levels:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536821,"byte_end":13536855,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536860,"byte_end":13536863,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536868,"byte_end":13536875,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536880,"byte_end":13536905,"line_start":306,"line_end":306,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536910,"byte_end":13536967,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ // Only write the `DEBUG` and `INFO` levels to stdout.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13536972,"byte_end":13537030,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/ let mk_writer = std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537035,"byte_end":13537070,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537075,"byte_end":13537112,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/     .with_min_level(Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537117,"byte_end":13537153,"line_start":311,"line_end":311,"column_start":5,"column_end":41}},{"value":"/     // Write the `WARN` and `ERROR` levels to stderr.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537158,"byte_end":13537215,"line_start":312,"line_end":312,"column_start":5,"column_end":62}},{"value":"/     .and(std::io::stderr.with_min_level(Level::WARN));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537220,"byte_end":13537278,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537283,"byte_end":13537286,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537291,"byte_end":13537351,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537356,"byte_end":13537363,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537368,"byte_end":13537402,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537407,"byte_end":13537440,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540412,"byte_end":13540423,"line_start":398,"line_end":398,"column_start":8,"column_end":19},"name":"with_filter","qualname":"::fmt::writer::MakeWriterExt::with_filter","value":"pub fn with_filter<F>(Self, F) -> WithFilter<Self, F> where Self: Sized,\nF: Fn(&Metadata) -> bool","parent":{"krate":0,"index":2817},"children":[],"decl_id":null,"docs":" Wraps `self` with a predicate that takes a span or event's [`Metadata`]\n and returns a `bool`. The returned [`MakeWriter`]'s\n [`MakeWriter::make_writer_for`][mwf] method will check the predicate to\n determine if  a writer should be produced for a given span or event.","sig":null,"attributes":[{"value":"/ Wraps `self` with a predicate that takes a span or event's [`Metadata`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537606,"byte_end":13537681,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ and returns a `bool`. The returned [`MakeWriter`]'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537686,"byte_end":13537741,"line_start":327,"line_end":327,"column_start":5,"column_end":60}},{"value":"/ [`MakeWriter::make_writer_for`][mwf] method will check the predicate to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537746,"byte_end":13537821,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/ determine if  a writer should be produced for a given span or event.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537826,"byte_end":13537898,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537903,"byte_end":13537906,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the predicate returns `false`, the wrapped [`MakeWriter`]'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537911,"byte_end":13537977,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/ [`make_writer_for`][mwf] will return [`OptionalWriter::none`][own].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13537982,"byte_end":13538053,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ Otherwise, it calls the wrapped [`MakeWriter`]'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538058,"byte_end":13538110,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ [`make_writer_for`][mwf] method, and returns the produced writer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538115,"byte_end":13538184,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538189,"byte_end":13538192,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This can be used to filter an output based on arbitrary [`Metadata`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538197,"byte_end":13538269,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ parameters.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538274,"byte_end":13538289,"line_start":337,"line_end":337,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538294,"byte_end":13538297,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538302,"byte_end":13538316,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538321,"byte_end":13538324,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Writing events with a specific target to an HTTP access log, and other","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538329,"byte_end":13538403,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ events to stdout:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538408,"byte_end":13538429,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538434,"byte_end":13538437,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538442,"byte_end":13538449,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538454,"byte_end":13538509,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538514,"byte_end":13538549,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538554,"byte_end":13538617,"line_start":347,"line_end":347,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538622,"byte_end":13538662,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/ let access_log = Arc::new(File::create(\"access.log\")?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538667,"byte_end":13538726,"line_start":349,"line_end":349,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538731,"byte_end":13538734,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = access_log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538739,"byte_end":13538769,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/     // Only write events with the target \"http::access_log\" to the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538774,"byte_end":13538844,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/     // access log file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538849,"byte_end":13538876,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/     .with_filter(|meta| meta.target() == \"http::access_log\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538881,"byte_end":13538945,"line_start":354,"line_end":354,"column_start":5,"column_end":69}},{"value":"/     // Write events with all other targets to stdout.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13538950,"byte_end":13539007,"line_start":355,"line_end":355,"column_start":5,"column_end":62}},{"value":"/     .or_else(std::io::stdout);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539012,"byte_end":13539046,"line_start":356,"line_end":356,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539051,"byte_end":13539054,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539059,"byte_end":13539119,"line_start":358,"line_end":358,"column_start":5,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539124,"byte_end":13539136,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539141,"byte_end":13539148,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539153,"byte_end":13539160,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539165,"byte_end":13539168,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Conditionally enabling or disabling a log file:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539173,"byte_end":13539224,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539229,"byte_end":13539236,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539241,"byte_end":13539296,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/ use std::{","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539301,"byte_end":13539315,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/     sync::{Arc, atomic::{AtomicBool, Ordering}},","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539320,"byte_end":13539372,"line_start":367,"line_end":367,"column_start":5,"column_end":57}},{"value":"/     fs::File,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539377,"byte_end":13539394,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539399,"byte_end":13539405,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539410,"byte_end":13539413,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ static DEBUG_LOG_ENABLED: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539418,"byte_end":13539484,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539489,"byte_end":13539492,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539497,"byte_end":13539560,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539565,"byte_end":13539605,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ // Create the debug log file","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539610,"byte_end":13539642,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ let debug_file = Arc::new(File::create(\"debug.log\")?)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539647,"byte_end":13539704,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"/     // Enable the debug log only if the flag is enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539709,"byte_end":13539769,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/     .with_filter(|_| DEBUG_LOG_ENABLED.load(Ordering::Acquire));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539774,"byte_end":13539842,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539847,"byte_end":13539850,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // Always write to stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539855,"byte_end":13539884,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/ let mk_writer = std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539889,"byte_end":13539924,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/     // Write to the debug file if it's enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539929,"byte_end":13539979,"line_start":382,"line_end":382,"column_start":5,"column_end":55}},{"value":"/     .and(debug_file);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13539984,"byte_end":13540009,"line_start":383,"line_end":383,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540014,"byte_end":13540017,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540022,"byte_end":13540082,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540087,"byte_end":13540090,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540095,"byte_end":13540105,"line_start":387,"line_end":387,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540110,"byte_end":13540113,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ // Later, we can toggle on or off the debug log file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540118,"byte_end":13540175,"line_start":389,"line_end":389,"column_start":5,"column_end":62}},{"value":"/ DEBUG_LOG_ENABLED.store(true, Ordering::Release);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540180,"byte_end":13540233,"line_start":390,"line_end":390,"column_start":5,"column_end":58}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540238,"byte_end":13540250,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540255,"byte_end":13540262,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540267,"byte_end":13540274,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540279,"byte_end":13540282,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540287,"byte_end":13540327,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/ [mwf]: MakeWriter::make_writer_for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540332,"byte_end":13540370,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540375,"byte_end":13540404,"line_start":397,"line_end":397,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542461,"byte_end":13542464,"line_start":453,"line_end":453,"column_start":8,"column_end":11},"name":"and","qualname":"::fmt::writer::MakeWriterExt::and","value":"pub fn and<B>(Self, B) -> Tee<Self, B> where Self: Sized, B: MakeWriter +\nSized","parent":{"krate":0,"index":2817},"children":[],"decl_id":null,"docs":" Combines `self` with another type implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that produces [writers] that write to *both*\n outputs.","sig":null,"attributes":[{"value":"/ Combines `self` with another type implementing [`MakeWriter`], returning","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540591,"byte_end":13540667,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ a new [`MakeWriter`] that produces [writers] that write to *both*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540672,"byte_end":13540741,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ outputs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540746,"byte_end":13540758,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540763,"byte_end":13540766,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If writing to either writer returns an error, the returned writer will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540771,"byte_end":13540845,"line_start":410,"line_end":410,"column_start":5,"column_end":79}},{"value":"/ return that error. However, both writers will still be written to before","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540850,"byte_end":13540926,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ the error is returned, so it is possible for one writer to fail while","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13540931,"byte_end":13541004,"line_start":412,"line_end":412,"column_start":5,"column_end":78}},{"value":"/ the other is written to successfully.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541009,"byte_end":13541050,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541055,"byte_end":13541058,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541063,"byte_end":13541077,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541082,"byte_end":13541085,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541090,"byte_end":13541097,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541102,"byte_end":13541157,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541162,"byte_end":13541165,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stdout` *and* `stderr`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541170,"byte_end":13541243,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ let mk_writer = std::io::stdout.and(std::io::stderr);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541248,"byte_end":13541305,"line_start":421,"line_end":421,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541310,"byte_end":13541313,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541318,"byte_end":13541378,"line_start":423,"line_end":423,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541383,"byte_end":13541390,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541395,"byte_end":13541398,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `and` can be used in conjunction with filtering combinators. For","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541403,"byte_end":13541471,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/ example, if we want to write to a number of outputs depending on the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541476,"byte_end":13541548,"line_start":427,"line_end":427,"column_start":5,"column_end":77}},{"value":"/ level of an event, we could write:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541553,"byte_end":13541591,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541596,"byte_end":13541599,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541604,"byte_end":13541611,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541616,"byte_end":13541639,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541644,"byte_end":13541701,"line_start":432,"line_end":432,"column_start":5,"column_end":62}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541706,"byte_end":13541741,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541746,"byte_end":13541809,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541814,"byte_end":13541854,"line_start":435,"line_end":435,"column_start":5,"column_end":45}},{"value":"/ let debug_log = Arc::new(File::create(\"debug.log\")?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541859,"byte_end":13541916,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541921,"byte_end":13541924,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ // Write everything to the debug log.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541929,"byte_end":13541970,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ let mk_writer = debug_log","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13541975,"byte_end":13542004,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/     // Write the `ERROR` and `WARN` levels to stderr.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542009,"byte_end":13542066,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/     .and(std::io::stderr.with_max_level(Level::WARN))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542071,"byte_end":13542128,"line_start":441,"line_end":441,"column_start":5,"column_end":62}},{"value":"/     // Write `INFO` to `stdout`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542133,"byte_end":13542169,"line_start":442,"line_end":442,"column_start":5,"column_end":41}},{"value":"/     .and(std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542174,"byte_end":13542202,"line_start":443,"line_end":443,"column_start":5,"column_end":33}},{"value":"/         .with_max_level(Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542207,"byte_end":13542247,"line_start":444,"line_end":444,"column_start":5,"column_end":45}},{"value":"/         .with_min_level(Level::INFO)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542252,"byte_end":13542292,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/     );","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542297,"byte_end":13542307,"line_start":446,"line_end":446,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542312,"byte_end":13542315,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542320,"byte_end":13542380,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542385,"byte_end":13542399,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542404,"byte_end":13542411,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542416,"byte_end":13542419,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [writers]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542424,"byte_end":13542453,"line_start":452,"line_end":452,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543535,"byte_end":13543542,"line_start":484,"line_end":484,"column_start":8,"column_end":15},"name":"or_else","qualname":"::fmt::writer::MakeWriterExt::or_else","value":"pub fn or_else<W, B>(Self, B) -> OrElse<Self, B> where Self: MakeWriter<Writer\n= OptionalWriter<W>> + Sized, B: MakeWriter + Sized, W: Write","parent":{"krate":0,"index":2817},"children":[],"decl_id":null,"docs":" Combines `self` with another type implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that calls `other`'s [`make_writer`] if `self`'s\n `make_writer` returns [`OptionalWriter::none`][own].","sig":null,"attributes":[{"value":"/ Combines `self` with another type implementing [`MakeWriter`], returning","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542613,"byte_end":13542689,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a new [`MakeWriter`] that calls `other`'s [`make_writer`] if `self`'s","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542694,"byte_end":13542767,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ `make_writer` returns [`OptionalWriter::none`][own].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542772,"byte_end":13542828,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542833,"byte_end":13542836,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542841,"byte_end":13542855,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542860,"byte_end":13542863,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542868,"byte_end":13542875,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542880,"byte_end":13542903,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542908,"byte_end":13542963,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542968,"byte_end":13542971,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // Produces a writer that writes to `stderr` if the level is >= WARN,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13542976,"byte_end":13543049,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ // or returns `OptionalWriter::none()` otherwise.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543054,"byte_end":13543107,"line_start":472,"line_end":472,"column_start":5,"column_end":58}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543112,"byte_end":13543173,"line_start":473,"line_end":473,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543178,"byte_end":13543181,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ // If the `stderr` `MakeWriter` is disabled by the max level filter,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543186,"byte_end":13543258,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ // write to stdout instead:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543263,"byte_end":13543294,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/ let mk_writer = stderr.or_else(std::io::stdout);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543299,"byte_end":13543351,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543356,"byte_end":13543359,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543364,"byte_end":13543424,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543429,"byte_end":13543436,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543441,"byte_end":13543444,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ [`make_writer`]: MakeWriter::make_writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543449,"byte_end":13543493,"line_start":482,"line_end":482,"column_start":5,"column_end":49}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543498,"byte_end":13543527,"line_start":483,"line_end":483,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3279},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544712,"byte_end":13544722,"line_start":512,"line_end":512,"column_start":12,"column_end":22},"name":"TestWriter","qualname":"::fmt::writer::TestWriter","value":"TestWriter {  }","parent":null,"children":[{"krate":0,"index":3280}],"decl_id":null,"docs":" A writer intended to support [`libtest`'s output capturing][capturing] for use in unit tests.","sig":null,"attributes":[{"value":"/ A writer intended to support [`libtest`'s output capturing][capturing] for use in unit tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543761,"byte_end":13543858,"line_start":494,"line_end":494,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543859,"byte_end":13543862,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ `TestWriter` is used by [`fmt::Subscriber`] or [`fmt::Layer`] to enable capturing support.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543863,"byte_end":13543957,"line_start":496,"line_end":496,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543958,"byte_end":13543961,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ `cargo test` can only capture output from the standard library's [`print!`] macro. See","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13543962,"byte_end":13544052,"line_start":498,"line_end":498,"column_start":1,"column_end":91}},{"value":"/ [`libtest`'s output capturing][capturing] for more details about output capturing.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544053,"byte_end":13544139,"line_start":499,"line_end":499,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544140,"byte_end":13544143,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ Writing to [`io::stdout`] and [`io::stderr`] produces the same results as using","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544144,"byte_end":13544227,"line_start":501,"line_end":501,"column_start":1,"column_end":84}},{"value":"/ [`libtest`'s `--nocapture` option][nocapture] which may make the results look unreadable.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544228,"byte_end":13544321,"line_start":502,"line_end":502,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544322,"byte_end":13544325,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ [`fmt::Subscriber`]: super::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544326,"byte_end":13544368,"line_start":504,"line_end":504,"column_start":1,"column_end":43}},{"value":"/ [`fmt::Layer`]: super::Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544369,"byte_end":13544401,"line_start":505,"line_end":505,"column_start":1,"column_end":33}},{"value":"/ [capturing]: https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544402,"byte_end":13544500,"line_start":506,"line_end":506,"column_start":1,"column_end":99}},{"value":"/ [nocapture]: https://doc.rust-lang.org/cargo/commands/cargo-test.html","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544501,"byte_end":13544574,"line_start":507,"line_end":507,"column_start":1,"column_end":74}},{"value":"/ [`io::stdout`]: std::io::stdout","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544575,"byte_end":13544610,"line_start":508,"line_end":508,"column_start":1,"column_end":36}},{"value":"/ [`io::stderr`]: std::io::stderr","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544611,"byte_end":13544646,"line_start":509,"line_end":509,"column_start":1,"column_end":36}},{"value":"/ [`print!`]: std::print!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544647,"byte_end":13544674,"line_start":510,"line_end":510,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545547,"byte_end":13545560,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"BoxMakeWriter","qualname":"::fmt::writer::BoxMakeWriter","value":"BoxMakeWriter {  }","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2831}],"decl_id":null,"docs":" A writer that erases the specific [`io::Write`] and [`MakeWriter`] types being used.","sig":null,"attributes":[{"value":"/ A writer that erases the specific [`io::Write`] and [`MakeWriter`] types being used.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544740,"byte_end":13544828,"line_start":516,"line_end":516,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544829,"byte_end":13544832,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ This is useful in cases where the concrete type of the writer cannot be known","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544833,"byte_end":13544914,"line_start":518,"line_end":518,"column_start":1,"column_end":82}},{"value":"/ until runtime.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544915,"byte_end":13544933,"line_start":519,"line_end":519,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544934,"byte_end":13544937,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544938,"byte_end":13544952,"line_start":521,"line_end":521,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544953,"byte_end":13544956,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ A function that returns a [`Subscriber`] that will write to either stdout or stderr:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13544957,"byte_end":13545045,"line_start":523,"line_end":523,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545046,"byte_end":13545049,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545050,"byte_end":13545061,"line_start":525,"line_end":525,"column_start":1,"column_end":12}},{"value":"/ # use tracing::Subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545062,"byte_end":13545092,"line_start":526,"line_end":526,"column_start":1,"column_end":31}},{"value":"/ # use tracing_subscriber::fmt::writer::BoxMakeWriter;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545093,"byte_end":13545150,"line_start":527,"line_end":527,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545151,"byte_end":13545154,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ fn dynamic_writer(use_stderr: bool) -> impl Subscriber {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545155,"byte_end":13545215,"line_start":529,"line_end":529,"column_start":1,"column_end":61}},{"value":"/     let writer = if use_stderr {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545216,"byte_end":13545252,"line_start":530,"line_end":530,"column_start":1,"column_end":37}},{"value":"/         BoxMakeWriter::new(std::io::stderr)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545253,"byte_end":13545300,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545301,"byte_end":13545317,"line_start":532,"line_end":532,"column_start":1,"column_end":17}},{"value":"/         BoxMakeWriter::new(std::io::stdout)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545318,"byte_end":13545365,"line_start":533,"line_end":533,"column_start":1,"column_end":48}},{"value":"/     };","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545366,"byte_end":13545376,"line_start":534,"line_end":534,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545377,"byte_end":13545380,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/     tracing_subscriber::fmt().with_writer(writer).finish()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545381,"byte_end":13545443,"line_start":536,"line_end":536,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545444,"byte_end":13545449,"line_start":537,"line_end":537,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545450,"byte_end":13545457,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545458,"byte_end":13545461,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing::Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545462,"byte_end":13545501,"line_start":540,"line_end":540,"column_start":1,"column_end":40}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545502,"byte_end":13545535,"line_start":541,"line_end":541,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3288},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546009,"byte_end":13546010,"line_start":556,"line_end":556,"column_start":5,"column_end":6},"name":"A","qualname":"::fmt::writer::EitherWriter::A","value":"EitherWriter::A(A)","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" A writer of type `A`.\n","sig":null,"attributes":[{"value":"/ A writer of type `A`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545979,"byte_end":13546004,"line_start":555,"line_end":555,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546049,"byte_end":13546050,"line_start":558,"line_end":558,"column_start":5,"column_end":6},"name":"B","qualname":"::fmt::writer::EitherWriter::B","value":"EitherWriter::B(B)","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":" A writer of type `B`.\n","sig":null,"attributes":[{"value":"/ A writer of type `B`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546019,"byte_end":13546044,"line_start":557,"line_end":557,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3285},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545954,"byte_end":13545966,"line_start":554,"line_end":554,"column_start":10,"column_end":22},"name":"EitherWriter","qualname":"::fmt::writer::EitherWriter","value":"pub enum EitherWriter<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3291}],"decl_id":null,"docs":" A [writer] that is one of two types implementing [`io::Write`][writer].","sig":null,"attributes":[{"value":"/ A [writer] that is one of two types implementing [`io::Write`][writer].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545678,"byte_end":13545753,"line_start":547,"line_end":547,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545754,"byte_end":13545757,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ This may be used by [`MakeWriter`] implementations that may conditionally","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545758,"byte_end":13545835,"line_start":549,"line_end":549,"column_start":1,"column_end":78}},{"value":"/ return one of two writers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545836,"byte_end":13545866,"line_start":550,"line_end":550,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545867,"byte_end":13545870,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13545871,"byte_end":13545899,"line_start":552,"line_end":552,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2832},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546321,"byte_end":13546335,"line_start":568,"line_end":568,"column_start":10,"column_end":24},"name":"OptionalWriter","qualname":"::fmt::writer::OptionalWriter","value":"EitherWriter<T, std::io::Sink>","parent":null,"children":[],"decl_id":null,"docs":" A [writer] which may or may not be enabled.","sig":null,"attributes":[{"value":"/ A [writer] which may or may not be enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546058,"byte_end":13546105,"line_start":561,"line_end":561,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546106,"byte_end":13546109,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ This may be used by [`MakeWriter`] implementations that wish to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546110,"byte_end":13546177,"line_start":563,"line_end":563,"column_start":1,"column_end":68}},{"value":"/ conditionally enable or disable the returned writer based on a span or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546178,"byte_end":13546252,"line_start":564,"line_end":564,"column_start":1,"column_end":75}},{"value":"/ event's [`Metadata`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546253,"byte_end":13546278,"line_start":565,"line_end":565,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546279,"byte_end":13546282,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546283,"byte_end":13546311,"line_start":567,"line_end":567,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3320},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546772,"byte_end":13546784,"line_start":579,"line_end":579,"column_start":12,"column_end":24},"name":"WithMaxLevel","qualname":"::fmt::writer::WithMaxLevel","value":"WithMaxLevel {  }","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that only returns an enabled [writer] for spans\n and events with metadata at or below a specified verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that only returns an enabled [writer] for spans","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546374,"byte_end":13546453,"line_start":570,"line_end":570,"column_start":1,"column_end":80}},{"value":"/ and events with metadata at or below a specified verbosity [`Level`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546454,"byte_end":13546527,"line_start":571,"line_end":571,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546528,"byte_end":13546531,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_max_level`] method. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546532,"byte_end":13546609,"line_start":573,"line_end":573,"column_start":1,"column_end":78}},{"value":"/ method documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546610,"byte_end":13546647,"line_start":574,"line_end":574,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546648,"byte_end":13546651,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546652,"byte_end":13546680,"line_start":576,"line_end":576,"column_start":1,"column_end":29}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546681,"byte_end":13546715,"line_start":577,"line_end":577,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3343},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547236,"byte_end":13547248,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"WithMinLevel","qualname":"::fmt::writer::WithMinLevel","value":"WithMinLevel {  }","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that only returns an enabled [writer] for spans\n and events with metadata at or above a specified verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that only returns an enabled [writer] for spans","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546838,"byte_end":13546917,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/ and events with metadata at or above a specified verbosity [`Level`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546918,"byte_end":13546991,"line_start":585,"line_end":585,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546992,"byte_end":13546995,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_min_level`] method. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13546996,"byte_end":13547073,"line_start":587,"line_end":587,"column_start":1,"column_end":78}},{"value":"/ method documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547074,"byte_end":13547111,"line_start":588,"line_end":588,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547112,"byte_end":13547115,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547116,"byte_end":13547144,"line_start":590,"line_end":590,"column_start":1,"column_end":29}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547145,"byte_end":13547179,"line_start":591,"line_end":591,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3366},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547896,"byte_end":13547906,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"WithFilter","qualname":"::fmt::writer::WithFilter","value":"WithFilter {  }","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that wraps a [`MakeWriter`] with a predicate for\n span and event [`Metadata`], so that the [`MakeWriter::make_writer_for`]\n method returns [`OptionalWriter::some`][ows] when the predicate returns `true`,\n and [`OptionalWriter::none`][own] when the predicate returns `false`.","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that wraps a [`MakeWriter`] with a predicate for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547302,"byte_end":13547382,"line_start":598,"line_end":598,"column_start":1,"column_end":81}},{"value":"/ span and event [`Metadata`], so that the [`MakeWriter::make_writer_for`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547383,"byte_end":13547459,"line_start":599,"line_end":599,"column_start":1,"column_end":77}},{"value":"/ method returns [`OptionalWriter::some`][ows] when the predicate returns `true`,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547460,"byte_end":13547543,"line_start":600,"line_end":600,"column_start":1,"column_end":84}},{"value":"/ and [`OptionalWriter::none`][own] when the predicate returns `false`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547544,"byte_end":13547617,"line_start":601,"line_end":601,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547618,"byte_end":13547621,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_filter`] method. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547622,"byte_end":13547696,"line_start":603,"line_end":603,"column_start":1,"column_end":75}},{"value":"/ method documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547697,"byte_end":13547734,"line_start":604,"line_end":604,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547735,"byte_end":13547738,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547739,"byte_end":13547779,"line_start":606,"line_end":606,"column_start":1,"column_end":41}},{"value":"/ [ows]: EitherWriter::some","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547780,"byte_end":13547809,"line_start":607,"line_end":607,"column_start":1,"column_end":30}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547810,"byte_end":13547839,"line_start":608,"line_end":608,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3397},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548361,"byte_end":13548367,"line_start":624,"line_end":624,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::fmt::writer::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"decl_id":null,"docs":" Combines a [`MakeWriter`] that returns an [`OptionalWriter`] with another\n [`MakeWriter`], so that the second [`MakeWriter`] is used when the first\n [`MakeWriter`] returns [`OptionalWriter::none`][own].","sig":null,"attributes":[{"value":"/ Combines a [`MakeWriter`] that returns an [`OptionalWriter`] with another","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13547946,"byte_end":13548023,"line_start":615,"line_end":615,"column_start":1,"column_end":78}},{"value":"/ [`MakeWriter`], so that the second [`MakeWriter`] is used when the first","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548024,"byte_end":13548100,"line_start":616,"line_end":616,"column_start":1,"column_end":77}},{"value":"/ [`MakeWriter`] returns [`OptionalWriter::none`][own].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548101,"byte_end":13548158,"line_start":617,"line_end":617,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548159,"byte_end":13548162,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::or_else] method. See the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548163,"byte_end":13548232,"line_start":619,"line_end":619,"column_start":1,"column_end":70}},{"value":"/ method documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548233,"byte_end":13548270,"line_start":620,"line_end":620,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548271,"byte_end":13548274,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548275,"byte_end":13548304,"line_start":622,"line_end":622,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3428},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548728,"byte_end":13548731,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"Tee","qualname":"::fmt::writer::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":" Combines two types implementing [`MakeWriter`] (or [`std::io::Write`]) to\n produce a writer that writes to both [`MakeWriter`]'s returned writers.","sig":null,"attributes":[{"value":"/ Combines two types implementing [`MakeWriter`] (or [`std::io::Write`]) to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548409,"byte_end":13548486,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ produce a writer that writes to both [`MakeWriter`]'s returned writers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548487,"byte_end":13548562,"line_start":630,"line_end":630,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548563,"byte_end":13548566,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::and`] method. See the method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548567,"byte_end":13548640,"line_start":632,"line_end":632,"column_start":1,"column_end":74}},{"value":"/ documentation for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548641,"byte_end":13548671,"line_start":633,"line_end":633,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549399,"byte_end":13549415,"line_start":653,"line_end":653,"column_start":12,"column_end":28},"name":"MutexGuardWriter","qualname":"::fmt::writer::MutexGuardWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type implementing [`io::Write`] for a [`MutexGuard`] where the type\n inside the [`Mutex`] implements [`io::Write`].","sig":null,"attributes":[{"value":"/ A type implementing [`io::Write`] for a [`MutexGuard`] where the type","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548763,"byte_end":13548836,"line_start":640,"line_end":640,"column_start":1,"column_end":74}},{"value":"/ inside the [`Mutex`] implements [`io::Write`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548837,"byte_end":13548887,"line_start":641,"line_end":641,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548888,"byte_end":13548891,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ This is used by the [`MakeWriter`] implementation for [`Mutex`], because","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548892,"byte_end":13548968,"line_start":643,"line_end":643,"column_start":1,"column_end":77}},{"value":"/ [`MutexGuard`] itself will not implement [`io::Write`] — instead, it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13548969,"byte_end":13549043,"line_start":644,"line_end":644,"column_start":1,"column_end":73}},{"value":"/ _dereferences_ to a type implementing [`io::Write`]. Because [`MakeWriter`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549044,"byte_end":13549123,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ requires the `Writer` type to implement [`io::Write`], it's necessary to add","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549124,"byte_end":13549204,"line_start":646,"line_end":646,"column_start":1,"column_end":81}},{"value":"/ a newtype that forwards the trait implementation.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549205,"byte_end":13549258,"line_start":647,"line_end":647,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549259,"byte_end":13549262,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549263,"byte_end":13549296,"line_start":649,"line_end":649,"column_start":1,"column_end":34}},{"value":"/ [`MutexGuard`]: std::sync::MutexGuard","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549297,"byte_end":13549338,"line_start":650,"line_end":650,"column_start":1,"column_end":42}},{"value":"/ [`Mutex`]: std::sync::Mutex","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549339,"byte_end":13549370,"line_start":651,"line_end":651,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549631,"byte_end":13549640,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"ArcWriter","qualname":"::fmt::writer::ArcWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implements [`std::io::Write`] for an [`Arc`]<W> where `&W: Write`.","sig":null,"attributes":[{"value":"/ Implements [`std::io::Write`] for an [`Arc`]<W> where `&W: Write`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549444,"byte_end":13549514,"line_start":655,"line_end":655,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549515,"byte_end":13549518,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ This is an implementation detail of the [`MakeWriter`] impl for [`Arc`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13549519,"byte_end":13549595,"line_start":657,"line_end":657,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550808,"byte_end":13550811,"line_start":706,"line_end":706,"column_start":12,"column_end":15},"name":"new","qualname":"<TestWriter>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `TestWriter` with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new `TestWriter` with the default configuration.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550734,"byte_end":13550796,"line_start":705,"line_end":705,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551427,"byte_end":13551430,"line_start":736,"line_end":736,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxMakeWriter>::new","value":"pub fn new<M>(M) -> Self where M: for<'a> MakeWriter + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BoxMakeWriter` wrapping a type implementing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Constructs a `BoxMakeWriter` wrapping a type implementing [`MakeWriter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551330,"byte_end":13551407,"line_start":734,"line_end":734,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551412,"byte_end":13551415,"line_start":735,"line_end":735,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555010,"byte_end":13555014,"line_start":888,"line_end":888,"column_start":12,"column_end":16},"name":"none","qualname":"<OptionalWriter<T>>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a [disabled writer].","sig":null,"attributes":[{"value":"/ Returns a [disabled writer].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554765,"byte_end":13554797,"line_start":880,"line_end":880,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554802,"byte_end":13554805,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Any bytes written to the returned writer are discarded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554810,"byte_end":13554869,"line_start":882,"line_end":882,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554874,"byte_end":13554877,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to returning [`Option::None`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554882,"byte_end":13554935,"line_start":884,"line_end":884,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554940,"byte_end":13554943,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ [disabled writer]: std::io::sink","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554948,"byte_end":13554984,"line_start":886,"line_end":886,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554989,"byte_end":13554998,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555213,"byte_end":13555217,"line_start":896,"line_end":896,"column_start":12,"column_end":16},"name":"some","qualname":"<OptionalWriter<T>>::some","value":"pub fn some(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an enabled writer of type `T`.","sig":null,"attributes":[{"value":"/ Returns an enabled writer of type `T`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555079,"byte_end":13555121,"line_start":892,"line_end":892,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555126,"byte_end":13555129,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to returning [`Option::Some`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555134,"byte_end":13555187,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555192,"byte_end":13555201,"line_start":895,"line_end":895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555873,"byte_end":13555876,"line_start":921,"line_end":921,"column_start":12,"column_end":15},"name":"new","qualname":"<WithMaxLevel<M>>::new","value":"pub fn new(M, tracing_core::Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`MakeWriter`] with a maximum [`Level`], so that it\n returns [`OptionalWriter::none`] for spans and events whose level is\n more verbose than the maximum level.","sig":null,"attributes":[{"value":"/ Wraps the provided [`MakeWriter`] with a maximum [`Level`], so that it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555551,"byte_end":13555625,"line_start":914,"line_end":914,"column_start":5,"column_end":79}},{"value":"/ returns [`OptionalWriter::none`] for spans and events whose level is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555630,"byte_end":13555702,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/ more verbose than the maximum level.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555707,"byte_end":13555747,"line_start":916,"line_end":916,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555752,"byte_end":13555755,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_max_level`] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555760,"byte_end":13555814,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555819,"byte_end":13555822,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555827,"byte_end":13555861,"line_start":920,"line_end":920,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556866,"byte_end":13556869,"line_start":954,"line_end":954,"column_start":12,"column_end":15},"name":"new","qualname":"<WithMinLevel<M>>::new","value":"pub fn new(M, tracing_core::Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`MakeWriter`] with a minimum [`Level`], so that it\n returns [`OptionalWriter::none`] for spans and events whose level is\n less verbose than the maximum level.","sig":null,"attributes":[{"value":"/ Wraps the provided [`MakeWriter`] with a minimum [`Level`], so that it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556544,"byte_end":13556618,"line_start":947,"line_end":947,"column_start":5,"column_end":79}},{"value":"/ returns [`OptionalWriter::none`] for spans and events whose level is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556623,"byte_end":13556695,"line_start":948,"line_end":948,"column_start":5,"column_end":77}},{"value":"/ less verbose than the maximum level.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556700,"byte_end":13556740,"line_start":949,"line_end":949,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556745,"byte_end":13556748,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_min_level`] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556753,"byte_end":13556807,"line_start":951,"line_end":951,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556812,"byte_end":13556815,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556820,"byte_end":13556854,"line_start":953,"line_end":953,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557927,"byte_end":13557930,"line_start":988,"line_end":988,"column_start":12,"column_end":15},"name":"new","qualname":"<WithFilter<M, F>>::new","value":"pub fn new(M, F) -> Self where F: Fn(&Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wraps `make` with the provided `filter`, returning a [`MakeWriter`] that\n will call `make.make_writer_for()` when `filter` returns `true` for a\n span or event's [`Metadata`], and returns a [`sink`] otherwise.","sig":null,"attributes":[{"value":"/ Wraps `make` with the provided `filter`, returning a [`MakeWriter`] that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557540,"byte_end":13557616,"line_start":980,"line_end":980,"column_start":5,"column_end":81}},{"value":"/ will call `make.make_writer_for()` when `filter` returns `true` for a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557621,"byte_end":13557694,"line_start":981,"line_end":981,"column_start":5,"column_end":78}},{"value":"/ span or event's [`Metadata`], and returns a [`sink`] otherwise.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557699,"byte_end":13557766,"line_start":982,"line_end":982,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557771,"byte_end":13557774,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_filter`] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557779,"byte_end":13557830,"line_start":984,"line_end":984,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557835,"byte_end":13557838,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557843,"byte_end":13557883,"line_start":986,"line_end":986,"column_start":5,"column_end":45}},{"value":"/ [`sink`]: std::io::sink","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557888,"byte_end":13557915,"line_start":987,"line_end":987,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558924,"byte_end":13558927,"line_start":1028,"line_end":1028,"column_start":12,"column_end":15},"name":"new","qualname":"<Tee<A, B>>::new","value":"pub fn new(A, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combines two types implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that produces [writers] that write to *both*\n outputs.","sig":null,"attributes":[{"value":"/ Combines two types implementing [`MakeWriter`], returning","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558640,"byte_end":13558701,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/ a new [`MakeWriter`] that produces [writers] that write to *both*","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558706,"byte_end":13558775,"line_start":1022,"line_end":1022,"column_start":5,"column_end":74}},{"value":"/ outputs.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558780,"byte_end":13558792,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558797,"byte_end":13558800,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`MakeWriterExt::and`] for details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558805,"byte_end":13558870,"line_start":1025,"line_end":1025,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558875,"byte_end":13558878,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ [writers]: std::io::Write","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558883,"byte_end":13558912,"line_start":1027,"line_end":1027,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560571,"byte_end":13560574,"line_start":1101,"line_end":1101,"column_start":12,"column_end":15},"name":"new","qualname":"<OrElse<A, B>>::new","value":"pub fn new<'a, W>(A, B) -> Self where A: MakeWriter<Writer =\nOptionalWriter<W>>, B: MakeWriter, W: Write","parent":null,"children":[],"decl_id":null,"docs":" Combines\n","sig":null,"attributes":[{"value":"/ Combines","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560547,"byte_end":13560559,"line_start":1100,"line_end":1100,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":3478},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344603,"byte_end":13344613,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"Subscriber","qualname":"::fmt::Subscriber","value":"Subscriber {  }","parent":null,"children":[{"krate":0,"index":3483}],"decl_id":null,"docs":" A `Subscriber` that logs formatted representations of `tracing` events.","sig":null,"attributes":[{"value":"/ A `Subscriber` that logs formatted representations of `tracing` events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344340,"byte_end":13344415,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344416,"byte_end":13344419,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This consists of an inner `Formatter` wrapped in a layer that performs filtering.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344420,"byte_end":13344505,"line_start":222,"line_end":222,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":3032},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345021,"byte_end":13345030,"line_start":237,"line_end":237,"column_start":10,"column_end":19},"name":"Formatter","qualname":"::fmt::Formatter","value":"layer::Layered<fmt_layer::Layer<Registry, N, E, W>, Registry>","parent":null,"children":[],"decl_id":null,"docs":" A `Subscriber` that logs formatted representations of `tracing` events.\n This type only logs formatted events; it does not perform any filtering.\n","sig":null,"attributes":[{"value":"/ A `Subscriber` that logs formatted representations of `tracing` events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344790,"byte_end":13344865,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ This type only logs formatted events; it does not perform any filtering.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13344866,"byte_end":13344942,"line_start":235,"line_end":235,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3490},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345339,"byte_end":13345356,"line_start":246,"line_end":246,"column_start":12,"column_end":29},"name":"SubscriberBuilder","qualname":"::fmt::SubscriberBuilder","value":"SubscriberBuilder {  }","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496}],"decl_id":null,"docs":" Configures and constructs `Subscriber`s.\n","sig":null,"attributes":[{"value":"/ Configures and constructs `Subscriber`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345197,"byte_end":13345241,"line_start":243,"line_end":243,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":3036},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347535,"byte_end":13347538,"line_start":320,"line_end":320,"column_start":8,"column_end":11},"name":"fmt","qualname":"::fmt::fmt","value":"pub fn fmt() -> SubscriberBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`SubscriberBuilder`] for configuring a [formatting subscriber].","sig":null,"attributes":[{"value":"/ Returns a new [`SubscriberBuilder`] for configuring a [formatting subscriber].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345535,"byte_end":13345617,"line_start":256,"line_end":256,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345618,"byte_end":13345621,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ This is essentially shorthand for [`SubscriberBuilder::default()]`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345622,"byte_end":13345693,"line_start":258,"line_end":258,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345694,"byte_end":13345697,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345698,"byte_end":13345712,"line_start":260,"line_end":260,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345713,"byte_end":13345716,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Using [`init`] to set the default subscriber:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345717,"byte_end":13345766,"line_start":262,"line_end":262,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345767,"byte_end":13345770,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345771,"byte_end":13345782,"line_start":264,"line_end":264,"column_start":1,"column_end":12}},{"value":"/ tracing_subscriber::fmt().init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345783,"byte_end":13345820,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345821,"byte_end":13345828,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345829,"byte_end":13345832,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Configuring the output format:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345833,"byte_end":13345867,"line_start":268,"line_end":268,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345868,"byte_end":13345871,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345872,"byte_end":13345883,"line_start":270,"line_end":270,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345884,"byte_end":13345887,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345888,"byte_end":13345917,"line_start":272,"line_end":272,"column_start":1,"column_end":30}},{"value":"/     // Configure formatting settings.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345918,"byte_end":13345959,"line_start":273,"line_end":273,"column_start":1,"column_end":42}},{"value":"/     .with_target(false)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345960,"byte_end":13345987,"line_start":274,"line_end":274,"column_start":1,"column_end":28}},{"value":"/     .with_timer(tracing_subscriber::fmt::time::uptime())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13345988,"byte_end":13346048,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"/     .with_level(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346049,"byte_end":13346074,"line_start":276,"line_end":276,"column_start":1,"column_end":26}},{"value":"/     // Set the subscriber as the default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346075,"byte_end":13346120,"line_start":277,"line_end":277,"column_start":1,"column_end":46}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346121,"byte_end":13346137,"line_start":278,"line_end":278,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346138,"byte_end":13346145,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346146,"byte_end":13346149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`try_init`] returns an error if the default subscriber could not be set:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346150,"byte_end":13346227,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346228,"byte_end":13346231,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346232,"byte_end":13346243,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346244,"byte_end":13346270,"line_start":284,"line_end":284,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346271,"byte_end":13346274,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ fn init_subscriber() -> Result<(), Box<dyn Error + Send + Sync + 'static>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346275,"byte_end":13346355,"line_start":286,"line_end":286,"column_start":1,"column_end":81}},{"value":"/     tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346356,"byte_end":13346389,"line_start":287,"line_end":287,"column_start":1,"column_end":34}},{"value":"/         // Configure the subscriber to emit logs in JSON format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346390,"byte_end":13346458,"line_start":288,"line_end":288,"column_start":1,"column_end":69}},{"value":"/         .json()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346459,"byte_end":13346478,"line_start":289,"line_end":289,"column_start":1,"column_end":20}},{"value":"/         // Configure the subscriber to flatten event fields in the output JSON objects.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346479,"byte_end":13346570,"line_start":290,"line_end":290,"column_start":1,"column_end":92}},{"value":"/         .flatten_event(true)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346571,"byte_end":13346603,"line_start":291,"line_end":291,"column_start":1,"column_end":33}},{"value":"/         // Set the subscriber as the default, returning an error if this fails.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346604,"byte_end":13346687,"line_start":292,"line_end":292,"column_start":1,"column_end":84}},{"value":"/         .try_init()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346688,"byte_end":13346713,"line_start":293,"line_end":293,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346714,"byte_end":13346717,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346718,"byte_end":13346732,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346733,"byte_end":13346738,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346739,"byte_end":13346746,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346747,"byte_end":13346750,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Rather than setting the subscriber as the default, [`finish`] _returns_ the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346751,"byte_end":13346830,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ constructed subscriber, which may then be passed to other functions:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346831,"byte_end":13346903,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346904,"byte_end":13346907,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346908,"byte_end":13346919,"line_start":302,"line_end":302,"column_start":1,"column_end":12}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346920,"byte_end":13346966,"line_start":303,"line_end":303,"column_start":1,"column_end":47}},{"value":"/     .with_max_level(tracing::Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13346967,"byte_end":13347013,"line_start":304,"line_end":304,"column_start":1,"column_end":47}},{"value":"/     .compact()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347014,"byte_end":13347032,"line_start":305,"line_end":305,"column_start":1,"column_end":19}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347033,"byte_end":13347051,"line_start":306,"line_end":306,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347052,"byte_end":13347055,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::with_default(subscriber, || {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347056,"byte_end":13347110,"line_start":308,"line_end":308,"column_start":1,"column_end":55}},{"value":"/     // the subscriber will only be set as the default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347111,"byte_end":13347168,"line_start":309,"line_end":309,"column_start":1,"column_end":58}},{"value":"/     // inside this closure...","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347169,"byte_end":13347202,"line_start":310,"line_end":310,"column_start":1,"column_end":34}},{"value":"/ })","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347203,"byte_end":13347209,"line_start":311,"line_end":311,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347210,"byte_end":13347217,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347218,"byte_end":13347221,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ [formatting subscriber]: Subscriber","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347222,"byte_end":13347261,"line_start":314,"line_end":314,"column_start":1,"column_end":40}},{"value":"/ [`SubscriberBuilder::default()`]: SubscriberBuilder::default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347262,"byte_end":13347326,"line_start":315,"line_end":315,"column_start":1,"column_end":65}},{"value":"/ [`init`]: SubscriberBuilder::init()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347327,"byte_end":13347366,"line_start":316,"line_end":316,"column_start":1,"column_end":40}},{"value":"/ [`try_init`]: SubscriberBuilder::try_init()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347367,"byte_end":13347414,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/ [`finish`]: SubscriberBuilder::finish()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347415,"byte_end":13347458,"line_start":318,"line_end":318,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":3037},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347971,"byte_end":13347976,"line_start":333,"line_end":333,"column_start":8,"column_end":13},"name":"layer","qualname":"::fmt::layer","value":"pub fn layer<S>() -> Layer<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [formatting layer] that can be [composed] with other layers to\n construct a [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a new [formatting layer] that can be [composed] with other layers to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347600,"byte_end":13347680,"line_start":324,"line_end":324,"column_start":1,"column_end":81}},{"value":"/ construct a [`Subscriber`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347681,"byte_end":13347712,"line_start":325,"line_end":325,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347713,"byte_end":13347716,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ This is a shorthand for the equivalent [`Layer::default()`] function.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347717,"byte_end":13347790,"line_start":327,"line_end":327,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347791,"byte_end":13347794,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ [formatting layer]: Layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347795,"byte_end":13347824,"line_start":329,"line_end":329,"column_start":1,"column_end":30}},{"value":"/ [composed]: crate::layer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347825,"byte_end":13347853,"line_start":330,"line_end":330,"column_start":1,"column_end":29}},{"value":"/ [`Layer::default()`]: Layer::default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13347854,"byte_end":13347894,"line_start":331,"line_end":331,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":3040},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348374,"byte_end":13348391,"line_start":345,"line_end":345,"column_start":15,"column_end":32},"name":"DEFAULT_MAX_LEVEL","qualname":"::fmt::Subscriber::DEFAULT_MAX_LEVEL","value":"LevelFilter","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":" The maximum [verbosity level] that is enabled by a `Subscriber` by\n default.","sig":null,"attributes":[{"value":"/ The maximum [verbosity level] that is enabled by a `Subscriber` by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348042,"byte_end":13348112,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348117,"byte_end":13348129,"line_start":339,"line_end":339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348134,"byte_end":13348137,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This can be overridden with the [`SubscriberBuilder::with_max_level`] method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348142,"byte_end":13348223,"line_start":341,"line_end":341,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348228,"byte_end":13348231,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [verbosity level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348236,"byte_end":13348278,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ [`SubscriberBuilder::with_max_level`]: SubscriberBuilder::with_max_level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348283,"byte_end":13348359,"line_start":344,"line_end":344,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348517,"byte_end":13348524,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"builder","qualname":"<Subscriber>::builder","value":"pub fn builder() -> SubscriberBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SubscriberBuilder` for configuring a format subscriber.\n","sig":null,"attributes":[{"value":"/ Returns a new `SubscriberBuilder` for configuring a format subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348431,"byte_end":13348505,"line_start":347,"line_end":347,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348677,"byte_end":13348680,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Subscriber>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new format subscriber with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new format subscriber with the default configuration.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348598,"byte_end":13348665,"line_start":352,"line_end":352,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352011,"byte_end":13352017,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"finish","qualname":"<SubscriberBuilder<N, E, F, W>>::finish","value":"pub fn finish(Self) -> Subscriber<N, E, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Finish the builder, returning a new `FmtSubscriber`.\n","sig":null,"attributes":[{"value":"/ Finish the builder, returning a new `FmtSubscriber`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351943,"byte_end":13351999,"line_start":480,"line_end":480,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352670,"byte_end":13352678,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"try_init","qualname":"<SubscriberBuilder<N, E, F, W>>::try_init","value":"pub fn try_init(Self) -> Result<(), Box<dyn Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Install this Subscriber as the global default if one is\n not already set.","sig":null,"attributes":[{"value":"/ Install this Subscriber as the global default if one is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352228,"byte_end":13352287,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/ not already set.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352292,"byte_end":13352312,"line_start":489,"line_end":489,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352317,"byte_end":13352320,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352325,"byte_end":13352392,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352397,"byte_end":13352464,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352469,"byte_end":13352472,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352477,"byte_end":13352489,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/ Returns an Error if the initialization was unsuccessful, likely","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352494,"byte_end":13352561,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ because a global subscriber was already installed by another","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352566,"byte_end":13352630,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/ call to `try_init`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352635,"byte_end":13352658,"line_start":497,"line_end":497,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353237,"byte_end":13353241,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"init","qualname":"<SubscriberBuilder<N, E, F, W>>::init","value":"pub fn init(Self)","parent":null,"children":[],"decl_id":null,"docs":" Install this Subscriber as the global default.","sig":null,"attributes":[{"value":"/ Install this Subscriber as the global default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352847,"byte_end":13352897,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352902,"byte_end":13352905,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352910,"byte_end":13352977,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13352982,"byte_end":13353049,"line_start":508,"line_end":508,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353054,"byte_end":13353057,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353062,"byte_end":13353074,"line_start":510,"line_end":510,"column_start":5,"column_end":17}},{"value":"/ Panics if the initialization was unsuccessful, likely because a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353079,"byte_end":13353146,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ global subscriber was already installed by another call to `try_init`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353151,"byte_end":13353225,"line_start":512,"line_end":512,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354598,"byte_end":13354608,"line_start":550,"line_end":550,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_timer","value":"pub fn with_timer<T2>(Self, T2)\n-> SubscriberBuilder<N, format::Format<L, T2>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for log message timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for log message timestamps.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354008,"byte_end":13354063,"line_start":536,"line_end":536,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354068,"byte_end":13354071,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ See the [`time` module] for the provided timer implementations.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354076,"byte_end":13354143,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354148,"byte_end":13354151,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time`\"\" feature flag enables the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354156,"byte_end":13354214,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354219,"byte_end":13354294,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354299,"byte_end":13354368,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354373,"byte_end":13354385,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354390,"byte_end":13354393,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: time::FormatTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354398,"byte_end":13354429,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/ [`time` module]: mod@time","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354434,"byte_end":13354463,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/ [`UtcTime`]: time::UtcTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354468,"byte_end":13354498,"line_start":547,"line_end":547,"column_start":5,"column_end":35}},{"value":"/ [`LocalTime`]: time::LocalTime","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354503,"byte_end":13354537,"line_start":548,"line_end":548,"column_start":5,"column_end":39}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354542,"byte_end":13354586,"line_start":549,"line_end":549,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354873,"byte_end":13354885,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"without_time","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::without_time","value":"pub fn without_time(Self) -> SubscriberBuilder<N, format::Format<L, ()>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with log messages.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with log messages.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13354816,"byte_end":13354861,"line_start":557,"line_end":557,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357204,"byte_end":13357220,"line_start":606,"line_end":606,"column_start":12,"column_end":28},"name":"with_span_events","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_span_events","value":"pub fn with_span_events(Self, format::FmtSpan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures how synthesized events are emitted at points in the [span\n lifecycle][lifecycle].","sig":null,"attributes":[{"value":"/ Configures how synthesized events are emitted at points in the [span","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355075,"byte_end":13355147,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ lifecycle][lifecycle].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355152,"byte_end":13355178,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355183,"byte_end":13355186,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The following options are available:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355191,"byte_end":13355231,"line_start":568,"line_end":568,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355236,"byte_end":13355239,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ - `FmtSpan::NONE`: No events will be synthesized when spans are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355244,"byte_end":13355311,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/    created, entered, exited, or closed. Data from spans will still be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355316,"byte_end":13355389,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/    included as the context for formatted events. This is the default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355394,"byte_end":13355467,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ - `FmtSpan::NEW`: An event will be synthesized when spans are created.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355472,"byte_end":13355546,"line_start":573,"line_end":573,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::ENTER`: An event will be synthesized when spans are entered.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355551,"byte_end":13355627,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ - `FmtSpan::EXIT`: An event will be synthesized when spans are exited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355632,"byte_end":13355706,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::CLOSE`: An event will be synthesized when a span closes. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355711,"byte_end":13355786,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/    [timestamps are enabled][time] for this formatter, the generated","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355791,"byte_end":13355862,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/    event will contain fields with the span's _busy time_ (the total","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355867,"byte_end":13355938,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/    time for which it was entered) and _idle time_ (the total time that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13355943,"byte_end":13356017,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/    the span existed but was not entered).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356022,"byte_end":13356067,"line_start":580,"line_end":580,"column_start":5,"column_end":50}},{"value":"/ - `FmtSpan::ACTIVE`: An event will be synthesized when spans are entered","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356072,"byte_end":13356148,"line_start":581,"line_end":581,"column_start":5,"column_end":81}},{"value":"/    or exited.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356153,"byte_end":13356170,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/ - `FmtSpan::FULL`: Events will be synthesized whenever a span is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356175,"byte_end":13356243,"line_start":583,"line_end":583,"column_start":5,"column_end":73}},{"value":"/    created, entered, exited, or closed. If timestamps are enabled, the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356248,"byte_end":13356322,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/    close event will contain the span's busy and idle time, as","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356327,"byte_end":13356392,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/    described above.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356397,"byte_end":13356420,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356425,"byte_end":13356428,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The options can be enabled in any combination. For instance, the following","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356433,"byte_end":13356511,"line_start":588,"line_end":588,"column_start":5,"column_end":83}},{"value":"/ will synthesize events whenever spans are created and closed:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356516,"byte_end":13356581,"line_start":589,"line_end":589,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356586,"byte_end":13356589,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356594,"byte_end":13356605,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format::FmtSpan;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356610,"byte_end":13356659,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356664,"byte_end":13356696,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356701,"byte_end":13356704,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356709,"byte_end":13356735,"line_start":595,"line_end":595,"column_start":5,"column_end":31}},{"value":"/     .with_span_events(FmtSpan::NEW | FmtSpan::CLOSE)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356740,"byte_end":13356796,"line_start":596,"line_end":596,"column_start":5,"column_end":61}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356801,"byte_end":13356819,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356824,"byte_end":13356831,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356836,"byte_end":13356839,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Note that the generated events will only be part of the log output by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356844,"byte_end":13356917,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/ this formatter; they will not be recorded by other `Subscriber`s or by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13356922,"byte_end":13356996,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ `Layer`s added to this subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357001,"byte_end":13357039,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357044,"byte_end":13357047,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ [lifecycle]: https://docs.rs/tracing/latest/tracing/span/index.html#the-span-lifecycle","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357052,"byte_end":13357142,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ [time]: SubscriberBuilder::without_time()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357147,"byte_end":13357192,"line_start":605,"line_end":605,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357785,"byte_end":13357796,"line_start":624,"line_end":624,"column_start":12,"column_end":23},"name":"with_target","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_target","value":"pub fn with_target(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13357718,"byte_end":13357773,"line_start":623,"line_end":623,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358180,"byte_end":13358189,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"with_file","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_file","value":"pub fn with_file(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358029,"byte_end":13358096,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358101,"byte_end":13358115,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358120,"byte_end":13358123,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358128,"byte_end":13358168,"line_start":637,"line_end":637,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358577,"byte_end":13358593,"line_start":652,"line_end":652,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_line_number","value":"pub fn with_line_number(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358424,"byte_end":13358493,"line_start":648,"line_end":648,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358498,"byte_end":13358512,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358517,"byte_end":13358520,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358525,"byte_end":13358565,"line_start":651,"line_end":651,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358907,"byte_end":13358917,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"with_level","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_level","value":"pub fn with_level(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13358841,"byte_end":13358895,"line_start":662,"line_end":662,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359311,"byte_end":13359328,"line_start":677,"line_end":677,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_thread_names","value":"pub fn with_thread_names(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359147,"byte_end":13359216,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359221,"byte_end":13359248,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359253,"byte_end":13359256,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359261,"byte_end":13359299,"line_start":676,"line_end":676,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359748,"byte_end":13359763,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_thread_ids","value":"pub fn with_thread_ids(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359579,"byte_end":13359653,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359658,"byte_end":13359685,"line_start":688,"line_end":688,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359690,"byte_end":13359693,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13359698,"byte_end":13359736,"line_start":690,"line_end":690,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13360129,"byte_end":13360136,"line_start":704,"line_end":704,"column_start":12,"column_end":19},"name":"compact","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::compact","value":"pub fn compact(Self)\n-> SubscriberBuilder<N, format::Format<format::Compact, T>, F, W> where\nN: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber being built to use a less verbose formatter.","sig":null,"attributes":[{"value":"/ Sets the subscriber being built to use a less verbose formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13360008,"byte_end":13360076,"line_start":701,"line_end":701,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13360081,"byte_end":13360084,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ See [`format::Compact`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13360089,"byte_end":13360117,"line_start":703,"line_end":703,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364918,"byte_end":13364928,"line_start":843,"line_end":843,"column_start":12,"column_end":22},"name":"fmt_fields","qualname":"<SubscriberBuilder<N, E, F, W>>::fmt_fields","value":"pub fn fmt_fields<N2>(Self, N2) -> SubscriberBuilder<N2, E, F, W> where\nN2: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the field formatter that the subscriber being built will use to record\n fields.","sig":null,"attributes":[{"value":"/ Sets the field formatter that the subscriber being built will use to record","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364146,"byte_end":13364225,"line_start":823,"line_end":823,"column_start":5,"column_end":84}},{"value":"/ fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364230,"byte_end":13364241,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364246,"byte_end":13364249,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364254,"byte_end":13364270,"line_start":826,"line_end":826,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364275,"byte_end":13364286,"line_start":827,"line_end":827,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364291,"byte_end":13364331,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364336,"byte_end":13364375,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364380,"byte_end":13364383,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let formatter =","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364388,"byte_end":13364407,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     // Construct a custom formatter for `Debug` fields","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364412,"byte_end":13364470,"line_start":832,"line_end":832,"column_start":5,"column_end":63}},{"value":"/     format::debug_fn(|writer, field, value| write!(writer, \"{}: {:?}\", field, value))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364475,"byte_end":13364564,"line_start":833,"line_end":833,"column_start":5,"column_end":94}},{"value":"/         // Use the `tracing_subscriber::MakeFmtExt` trait to wrap the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364569,"byte_end":13364642,"line_start":834,"line_end":834,"column_start":5,"column_end":78}},{"value":"/         // formatter so that a delimiter is added between fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364647,"byte_end":13364716,"line_start":835,"line_end":835,"column_start":5,"column_end":74}},{"value":"/         .delimited(\", \");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364721,"byte_end":13364750,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364755,"byte_end":13364758,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364763,"byte_end":13364809,"line_start":838,"line_end":838,"column_start":5,"column_end":51}},{"value":"/     .fmt_fields(formatter)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364814,"byte_end":13364844,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364849,"byte_end":13364867,"line_start":840,"line_end":840,"column_start":5,"column_end":23}},{"value":"/ # drop(subscriber)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364872,"byte_end":13364894,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364899,"byte_end":13364906,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368449,"byte_end":13368463,"line_start":946,"line_end":946,"column_start":12,"column_end":26},"name":"with_max_level","qualname":"<SubscriberBuilder<N, E, F, W>>::with_max_level","value":"pub fn with_max_level<impl Into<LevelFilter>: Into<LevelFilter>>(Self,\n                                                                 impl Into<LevelFilter>)\n-> SubscriberBuilder<N, E, LevelFilter, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum [verbosity level] that will be enabled by the\n subscriber.","sig":null,"attributes":[{"value":"/ Sets the maximum [verbosity level] that will be enabled by the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367493,"byte_end":13367559,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/ subscriber.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367564,"byte_end":13367579,"line_start":918,"line_end":918,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367584,"byte_end":13367587,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ If the max level has already been set, or a [`EnvFilter`] was added by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367592,"byte_end":13367666,"line_start":920,"line_end":920,"column_start":5,"column_end":79}},{"value":"/ [`with_env_filter`], this replaces that configuration with the new","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367671,"byte_end":13367741,"line_start":921,"line_end":921,"column_start":5,"column_end":75}},{"value":"/ maximum level.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367746,"byte_end":13367764,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367769,"byte_end":13367772,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367777,"byte_end":13367791,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367796,"byte_end":13367799,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Enable up to the `DEBUG` verbosity level:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367804,"byte_end":13367849,"line_start":926,"line_end":926,"column_start":5,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367854,"byte_end":13367865,"line_start":927,"line_end":927,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367870,"byte_end":13367902,"line_start":928,"line_end":928,"column_start":5,"column_end":37}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367907,"byte_end":13367930,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367935,"byte_end":13367938,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367943,"byte_end":13367952,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/     .with_max_level(Level::DEBUG)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367957,"byte_end":13367994,"line_start":932,"line_end":932,"column_start":5,"column_end":42}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13367999,"byte_end":13368015,"line_start":933,"line_end":933,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368020,"byte_end":13368027,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ This subscriber won't record any spans or events!","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368032,"byte_end":13368085,"line_start":935,"line_end":935,"column_start":5,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368090,"byte_end":13368101,"line_start":936,"line_end":936,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::{fmt, filter::LevelFilter};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368106,"byte_end":13368161,"line_start":937,"line_end":937,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368166,"byte_end":13368169,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368174,"byte_end":13368200,"line_start":939,"line_end":939,"column_start":5,"column_end":31}},{"value":"/     .with_max_level(LevelFilter::OFF)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368205,"byte_end":13368246,"line_start":940,"line_end":940,"column_start":5,"column_end":46}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368251,"byte_end":13368269,"line_start":941,"line_end":941,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368274,"byte_end":13368281,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ [verbosity level]: tracing_core::Level","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368286,"byte_end":13368328,"line_start":943,"line_end":943,"column_start":5,"column_end":47}},{"value":"/ [`EnvFilter`]: struct@crate::filter::EnvFilter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368333,"byte_end":13368383,"line_start":944,"line_end":944,"column_start":5,"column_end":55}},{"value":"/ [`with_env_filter`]: fn@Self::with_env_filter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368388,"byte_end":13368437,"line_start":945,"line_end":945,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369415,"byte_end":13369427,"line_start":977,"line_end":977,"column_start":12,"column_end":24},"name":"event_format","qualname":"<SubscriberBuilder<N, E, F, W>>::event_format","value":"pub fn event_format<E2>(Self, E2) -> SubscriberBuilder<N, E2, F, W> where\nE2: FormatEvent<Registry, N> + 'static, N: for<'writer> FormatFields +\n'static, W: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [event formatter][`FormatEvent`] that the subscriber being built\n will use to format events that occur.","sig":null,"attributes":[{"value":"/ Sets the [event formatter][`FormatEvent`] that the subscriber being built","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368706,"byte_end":13368783,"line_start":957,"line_end":957,"column_start":5,"column_end":82}},{"value":"/ will use to format events that occur.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368788,"byte_end":13368829,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368834,"byte_end":13368837,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The event formatter may be any type implementing the [`FormatEvent`]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368842,"byte_end":13368914,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/ trait, which is implemented for all functions taking a [`FmtContext`], a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13368919,"byte_end":13368995,"line_start":961,"line_end":961,"column_start":5,"column_end":81}},{"value":"/ [`Writer`], and an [`Event`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369000,"byte_end":13369033,"line_start":962,"line_end":962,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369038,"byte_end":13369041,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369046,"byte_end":13369060,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369065,"byte_end":13369068,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Setting a type implementing [`FormatEvent`] as the formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369073,"byte_end":13369138,"line_start":966,"line_end":966,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369143,"byte_end":13369146,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369151,"byte_end":13369162,"line_start":968,"line_end":968,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369167,"byte_end":13369207,"line_start":969,"line_end":969,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369212,"byte_end":13369215,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369220,"byte_end":13369266,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/     .event_format(format().compact())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369271,"byte_end":13369312,"line_start":972,"line_end":972,"column_start":5,"column_end":46}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369317,"byte_end":13369335,"line_start":973,"line_end":973,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369340,"byte_end":13369347,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369352,"byte_end":13369355,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: struct@self::format::Writer","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369360,"byte_end":13369403,"line_start":976,"line_end":976,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370151,"byte_end":13370162,"line_start":1003,"line_end":1003,"column_start":12,"column_end":23},"name":"with_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::with_writer","value":"pub fn with_writer<W2>(Self, W2) -> SubscriberBuilder<N, E, F, W2> where\nW2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`MakeWriter`] that the subscriber being built will use to write events.","sig":null,"attributes":[{"value":"/ Sets the [`MakeWriter`] that the subscriber being built will use to write events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369800,"byte_end":13369885,"line_start":989,"line_end":989,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369890,"byte_end":13369893,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369898,"byte_end":13369912,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369917,"byte_end":13369920,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ Using `stderr` rather than `stdout`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369925,"byte_end":13369965,"line_start":993,"line_end":993,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369970,"byte_end":13369973,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369978,"byte_end":13369989,"line_start":995,"line_end":995,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13369994,"byte_end":13370026,"line_start":996,"line_end":996,"column_start":5,"column_end":37}},{"value":"/ use std::io;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370031,"byte_end":13370047,"line_start":997,"line_end":997,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370052,"byte_end":13370055,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370060,"byte_end":13370069,"line_start":999,"line_end":999,"column_start":5,"column_end":14}},{"value":"/     .with_writer(io::stderr)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370074,"byte_end":13370106,"line_start":1000,"line_end":1000,"column_start":5,"column_end":37}},{"value":"/     .init();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370111,"byte_end":13370127,"line_start":1001,"line_end":1001,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370132,"byte_end":13370139,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371200,"byte_end":13371216,"line_start":1037,"line_end":1037,"column_start":12,"column_end":28},"name":"with_test_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::with_test_writer","value":"pub fn with_test_writer(Self) -> SubscriberBuilder<N, E, F, TestWriter>","parent":null,"children":[],"decl_id":null,"docs":" Configures the subscriber to support [`libtest`'s output capturing][capturing] when used in\n unit tests.","sig":null,"attributes":[{"value":"/ Configures the subscriber to support [`libtest`'s output capturing][capturing] when used in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370434,"byte_end":13370529,"line_start":1013,"line_end":1013,"column_start":5,"column_end":100}},{"value":"/ unit tests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370534,"byte_end":13370549,"line_start":1014,"line_end":1014,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370554,"byte_end":13370557,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ See [`TestWriter`] for additional details.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370562,"byte_end":13370608,"line_start":1016,"line_end":1016,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370613,"byte_end":13370616,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370621,"byte_end":13370635,"line_start":1018,"line_end":1018,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370640,"byte_end":13370643,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Using [`TestWriter`] to let `cargo test` capture test output. Note that we do not install it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370648,"byte_end":13370744,"line_start":1020,"line_end":1020,"column_start":5,"column_end":101}},{"value":"/ globally as it may cause conflicts.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370749,"byte_end":13370788,"line_start":1021,"line_end":1021,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370793,"byte_end":13370796,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370801,"byte_end":13370812,"line_start":1023,"line_end":1023,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370817,"byte_end":13370849,"line_start":1024,"line_end":1024,"column_start":5,"column_end":37}},{"value":"/ use tracing::subscriber;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370854,"byte_end":13370882,"line_start":1025,"line_end":1025,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370887,"byte_end":13370890,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ subscriber::set_default(","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370895,"byte_end":13370923,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/     fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370928,"byte_end":13370941,"line_start":1028,"line_end":1028,"column_start":5,"column_end":18}},{"value":"/         .with_test_writer()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370946,"byte_end":13370977,"line_start":1029,"line_end":1029,"column_start":5,"column_end":36}},{"value":"/         .finish()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13370982,"byte_end":13371003,"line_start":1030,"line_end":1030,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371008,"byte_end":13371014,"line_start":1031,"line_end":1031,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371019,"byte_end":13371026,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371031,"byte_end":13371034,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ [capturing]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371039,"byte_end":13371055,"line_start":1034,"line_end":1034,"column_start":5,"column_end":21}},{"value":"/ https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371060,"byte_end":13371145,"line_start":1035,"line_end":1035,"column_start":5,"column_end":90}},{"value":"/ [`TestWriter`]: writer::TestWriter","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371150,"byte_end":13371188,"line_start":1036,"line_end":1036,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371848,"byte_end":13371864,"line_start":1057,"line_end":1057,"column_start":12,"column_end":28},"name":"map_event_format","qualname":"<SubscriberBuilder<N, E, F, W>>::map_event_format","value":"pub fn map_event_format<E2, impl FnOnce(E) -> E2: FnOnce(E) ->\n                        E2>(Self, impl FnOnce(E) -> E2)\n-> SubscriberBuilder<N, E2, F, W> where E2: FormatEvent<Registry, N> +\n'static, N: for<'writer> FormatFields + 'static, W: for<'writer> MakeWriter +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the event formatter by applying a function to the existing event formatter.","sig":null,"attributes":[{"value":"/ Updates the event formatter by applying a function to the existing event formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371415,"byte_end":13371502,"line_start":1044,"line_end":1044,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371507,"byte_end":13371510,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ This sets the event formatter that the subscriber being built will use to record fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371515,"byte_end":13371607,"line_start":1046,"line_end":1046,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371612,"byte_end":13371615,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371620,"byte_end":13371634,"line_start":1048,"line_end":1048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371639,"byte_end":13371642,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ Updating an event formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371647,"byte_end":13371679,"line_start":1050,"line_end":1050,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371684,"byte_end":13371687,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371692,"byte_end":13371703,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371708,"byte_end":13371754,"line_start":1053,"line_end":1053,"column_start":5,"column_end":51}},{"value":"/     .map_event_format(|e| e.compact())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371759,"byte_end":13371801,"line_start":1054,"line_end":1054,"column_start":5,"column_end":47}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371806,"byte_end":13371824,"line_start":1055,"line_end":1055,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13371829,"byte_end":13371836,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372723,"byte_end":13372737,"line_start":1083,"line_end":1083,"column_start":12,"column_end":26},"name":"map_fmt_fields","qualname":"<SubscriberBuilder<N, E, F, W>>::map_fmt_fields","value":"pub fn map_fmt_fields<N2, impl FnOnce(N) -> N2: FnOnce(N) ->\n                      N2>(Self, impl FnOnce(N) -> N2)\n-> SubscriberBuilder<N2, E, F, W> where N2: for<'writer> FormatFields +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the field formatter by applying a function to the existing field formatter.","sig":null,"attributes":[{"value":"/ Updates the field formatter by applying a function to the existing field formatter.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372243,"byte_end":13372330,"line_start":1069,"line_end":1069,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372335,"byte_end":13372338,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ This sets the field formatter that the subscriber being built will use to record fields.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372343,"byte_end":13372435,"line_start":1071,"line_end":1071,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372440,"byte_end":13372443,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372448,"byte_end":13372462,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372467,"byte_end":13372470,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Updating a field formatter:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372475,"byte_end":13372506,"line_start":1075,"line_end":1075,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372511,"byte_end":13372514,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372519,"byte_end":13372530,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::field::MakeExt;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372535,"byte_end":13372578,"line_start":1078,"line_end":1078,"column_start":5,"column_end":48}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372583,"byte_end":13372629,"line_start":1079,"line_end":1079,"column_start":5,"column_end":51}},{"value":"/     .map_fmt_fields(|f| f.debug_alt())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372634,"byte_end":13372676,"line_start":1080,"line_end":1080,"column_start":5,"column_end":47}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372681,"byte_end":13372699,"line_start":1081,"line_end":1081,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13372704,"byte_end":13372711,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373629,"byte_end":13373639,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"map_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::map_writer","value":"pub fn map_writer<W2, impl FnOnce(W) -> W2: FnOnce(W) ->\n                  W2>(Self, impl FnOnce(W) -> W2)\n-> SubscriberBuilder<N, E, F, W2> where W2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373012,"byte_end":13373097,"line_start":1093,"line_end":1093,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373102,"byte_end":13373105,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ This sets the [`MakeWriter`] that the subscriber being built will use to write events.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373110,"byte_end":13373200,"line_start":1095,"line_end":1095,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373205,"byte_end":13373208,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373213,"byte_end":13373227,"line_start":1097,"line_end":1097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373232,"byte_end":13373235,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Redirect output to stderr if level is <= WARN:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373240,"byte_end":13373290,"line_start":1099,"line_end":1099,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373295,"byte_end":13373298,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373303,"byte_end":13373314,"line_start":1101,"line_end":1101,"column_start":5,"column_end":16}},{"value":"/ use tracing::Level;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373319,"byte_end":13373342,"line_start":1102,"line_end":1102,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::{self, writer::MakeWriterExt};","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373347,"byte_end":13373410,"line_start":1103,"line_end":1103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373415,"byte_end":13373418,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373423,"byte_end":13373484,"line_start":1105,"line_end":1105,"column_start":5,"column_end":66}},{"value":"/ let layer = tracing_subscriber::fmt()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373489,"byte_end":13373530,"line_start":1106,"line_end":1106,"column_start":5,"column_end":46}},{"value":"/     .map_writer(move |w| stderr.or_else(w))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373535,"byte_end":13373582,"line_start":1107,"line_end":1107,"column_start":5,"column_end":52}},{"value":"/     .finish();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373587,"byte_end":13373605,"line_start":1108,"line_end":1108,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373610,"byte_end":13373617,"line_start":1109,"line_end":1109,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3147},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374773,"byte_end":13374781,"line_start":1146,"line_end":1146,"column_start":8,"column_end":16},"name":"try_init","qualname":"::fmt::try_init","value":"pub fn try_init() -> Result<(), Box<dyn Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Install a global tracing subscriber that listens for events and\n filters based on the value of the [`RUST_LOG` environment variable],\n if one is not already set.","sig":null,"attributes":[{"value":"/ Install a global tracing subscriber that listens for events and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373906,"byte_end":13373973,"line_start":1121,"line_end":1121,"column_start":1,"column_end":68}},{"value":"/ filters based on the value of the [`RUST_LOG` environment variable],","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13373974,"byte_end":13374046,"line_start":1122,"line_end":1122,"column_start":1,"column_end":73}},{"value":"/ if one is not already set.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374047,"byte_end":13374077,"line_start":1123,"line_end":1123,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374078,"byte_end":13374081,"line_start":1124,"line_end":1124,"column_start":1,"column_end":4}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374082,"byte_end":13374149,"line_start":1125,"line_end":1125,"column_start":1,"column_end":68}},{"value":"/ the [`LogTracer`] to convert `log` records into `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374150,"byte_end":13374221,"line_start":1126,"line_end":1126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374222,"byte_end":13374225,"line_start":1127,"line_end":1127,"column_start":1,"column_end":4}},{"value":"/ This is shorthand for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374226,"byte_end":13374251,"line_start":1128,"line_end":1128,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374252,"byte_end":13374255,"line_start":1129,"line_end":1129,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374256,"byte_end":13374267,"line_start":1130,"line_end":1130,"column_start":1,"column_end":12}},{"value":"/ # fn doc() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374268,"byte_end":13374350,"line_start":1131,"line_end":1131,"column_start":1,"column_end":83}},{"value":"/ tracing_subscriber::fmt().try_init()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374351,"byte_end":13374391,"line_start":1132,"line_end":1132,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374392,"byte_end":13374399,"line_start":1133,"line_end":1133,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374400,"byte_end":13374407,"line_start":1134,"line_end":1134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374408,"byte_end":13374411,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374412,"byte_end":13374415,"line_start":1136,"line_end":1136,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374416,"byte_end":13374428,"line_start":1137,"line_end":1137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374429,"byte_end":13374432,"line_start":1138,"line_end":1138,"column_start":1,"column_end":4}},{"value":"/ Returns an Error if the initialization was unsuccessful,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374433,"byte_end":13374493,"line_start":1139,"line_end":1139,"column_start":1,"column_end":61}},{"value":"/ likely because a global subscriber was already installed by another","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374494,"byte_end":13374565,"line_start":1140,"line_end":1140,"column_start":1,"column_end":72}},{"value":"/ call to `try_init`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374566,"byte_end":13374589,"line_start":1141,"line_end":1141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374590,"byte_end":13374593,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ [`LogTracer`]:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374594,"byte_end":13374612,"line_start":1143,"line_end":1143,"column_start":1,"column_end":19}},{"value":"/     https://docs.rs/tracing-log/0.1.0/tracing_log/struct.LogTracer.html","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374613,"byte_end":13374688,"line_start":1144,"line_end":1144,"column_start":1,"column_end":76}},{"value":"/ [`RUST_LOG` environment variable]: crate::filter::EnvFilter::DEFAULT_ENV","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13374689,"byte_end":13374765,"line_start":1145,"line_end":1145,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3163},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376937,"byte_end":13376941,"line_start":1202,"line_end":1202,"column_start":8,"column_end":12},"name":"init","qualname":"::fmt::init","value":"pub fn init()","parent":null,"children":[],"decl_id":null,"docs":" Install a global tracing subscriber that listens for events and\n filters based on the value of the [`RUST_LOG` environment variable].","sig":null,"attributes":[{"value":"/ Install a global tracing subscriber that listens for events and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376317,"byte_end":13376384,"line_start":1185,"line_end":1185,"column_start":1,"column_end":68}},{"value":"/ filters based on the value of the [`RUST_LOG` environment variable].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376385,"byte_end":13376457,"line_start":1186,"line_end":1186,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376458,"byte_end":13376461,"line_start":1187,"line_end":1187,"column_start":1,"column_end":4}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376462,"byte_end":13376529,"line_start":1188,"line_end":1188,"column_start":1,"column_end":68}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376530,"byte_end":13376597,"line_start":1189,"line_end":1189,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376598,"byte_end":13376601,"line_start":1190,"line_end":1190,"column_start":1,"column_end":4}},{"value":"/ This is shorthand for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376602,"byte_end":13376627,"line_start":1191,"line_end":1191,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376628,"byte_end":13376631,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376632,"byte_end":13376643,"line_start":1193,"line_end":1193,"column_start":1,"column_end":12}},{"value":"/ tracing_subscriber::fmt().init()","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376644,"byte_end":13376680,"line_start":1194,"line_end":1194,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376681,"byte_end":13376688,"line_start":1195,"line_end":1195,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376689,"byte_end":13376692,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376693,"byte_end":13376705,"line_start":1197,"line_end":1197,"column_start":1,"column_end":13}},{"value":"/ Panics if the initialization was unsuccessful, likely because a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376706,"byte_end":13376773,"line_start":1198,"line_end":1198,"column_start":1,"column_end":68}},{"value":"/ global subscriber was already installed by another call to `try_init`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376774,"byte_end":13376848,"line_start":1199,"line_end":1199,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376849,"byte_end":13376852,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ [`RUST_LOG` environment variable]: crate::filter::EnvFilter::DEFAULT_ENV","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13376853,"byte_end":13376929,"line_start":1201,"line_end":1201,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3506},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9322,"byte_end":9330,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"registry","qualname":"::registry","value":"pub fn registry() -> Registry","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":760},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9411,"byte_end":9417,"line_start":251,"line_end":251,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed<A = ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21338,"byte_end":21341,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21569,"byte_end":21572,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21783,"byte_end":21786,"line_start":37,"line_end":37,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":22834,"byte_end":22837,"line_start":77,"line_end":77,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":23053,"byte_end":23056,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":23238,"byte_end":23241,"line_start":103,"line_end":103,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24078,"byte_end":24087,"line_start":27,"line_end":27,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24417,"byte_end":24426,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24783,"byte_end":24797,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":25495,"byte_end":25509,"line_start":83,"line_end":83,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":26292,"byte_end":26306,"line_start":114,"line_end":114,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":26474,"byte_end":26488,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28487,"byte_end":28495,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28807,"byte_end":28815,"line_start":27,"line_end":27,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":29036,"byte_end":29044,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30205,"byte_end":30213,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30429,"byte_end":30437,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30619,"byte_end":30627,"line_start":109,"line_end":109,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15264,"byte_end":15269,"line_start":161,"line_end":161,"column_start":56,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15303,"byte_end":15308,"line_start":162,"line_end":162,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15464,"byte_end":15474,"line_start":168,"line_end":168,"column_start":56,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15508,"byte_end":15518,"line_start":169,"line_end":169,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15679,"byte_end":15685,"line_start":175,"line_end":175,"column_start":56,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15719,"byte_end":15725,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16130,"byte_end":16131,"line_start":194,"line_end":194,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16336,"byte_end":16337,"line_start":205,"line_end":205,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16445,"byte_end":16446,"line_start":212,"line_end":212,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16570,"byte_end":16571,"line_start":219,"line_end":219,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16634,"byte_end":16635,"line_start":221,"line_end":221,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38626,"byte_end":38634,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":43490,"byte_end":43498,"line_start":324,"line_end":324,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":43935,"byte_end":43943,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44082,"byte_end":44090,"line_start":351,"line_end":351,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44392,"byte_end":44403,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46837,"byte_end":46848,"line_start":434,"line_end":434,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":53137,"byte_end":53148,"line_start":600,"line_end":600,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":54629,"byte_end":54640,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":55176,"byte_end":55187,"line_start":662,"line_end":662,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":55751,"byte_end":55762,"line_start":679,"line_end":679,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56079,"byte_end":56090,"line_start":694,"line_end":694,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56358,"byte_end":56366,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56838,"byte_end":56849,"line_start":726,"line_end":726,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232278,"byte_end":13232281,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13234046,"byte_end":13234049,"line_start":110,"line_end":110,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13235666,"byte_end":13235669,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13235899,"byte_end":13235902,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13236182,"byte_end":13236184,"line_start":200,"line_end":200,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13239234,"byte_end":13239236,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241349,"byte_end":13241351,"line_start":358,"line_end":358,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241581,"byte_end":13241583,"line_start":372,"line_end":372,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241860,"byte_end":13241863,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13242267,"byte_end":13242270,"line_start":402,"line_end":402,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13243483,"byte_end":13243486,"line_start":450,"line_end":450,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13243665,"byte_end":13243668,"line_start":462,"line_end":462,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203995,"byte_end":13204006,"line_start":390,"line_end":390,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205011,"byte_end":13205014,"line_start":429,"line_end":429,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205201,"byte_end":13205204,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205321,"byte_end":13205329,"line_start":441,"line_end":441,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13209059,"byte_end":13209067,"line_start":547,"line_end":547,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13215319,"byte_end":13215327,"line_start":695,"line_end":695,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13215662,"byte_end":13215670,"line_start":711,"line_end":711,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13219863,"byte_end":13219871,"line_start":819,"line_end":819,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220571,"byte_end":13220579,"line_start":840,"line_end":840,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220815,"byte_end":13220816,"line_start":850,"line_end":850,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220879,"byte_end":13220888,"line_start":854,"line_end":854,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13221491,"byte_end":13221500,"line_start":882,"line_end":882,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13221867,"byte_end":13221876,"line_start":896,"line_end":896,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13222104,"byte_end":13222115,"line_start":906,"line_end":906,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13229070,"byte_end":13229092,"line_start":1085,"line_end":1085,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13230410,"byte_end":13230419,"line_start":1124,"line_end":1124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/level.rs","byte_start":57859,"byte_end":57870,"line_start":11,"line_end":11,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250151,"byte_end":13250158,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256245,"byte_end":13256252,"line_start":347,"line_end":347,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256610,"byte_end":13256617,"line_start":360,"line_end":360,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256847,"byte_end":13256854,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257102,"byte_end":13257109,"line_start":382,"line_end":382,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257589,"byte_end":13257596,"line_start":401,"line_end":401,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257963,"byte_end":13257970,"line_start":415,"line_end":415,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259257,"byte_end":13259265,"line_start":465,"line_end":465,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259506,"byte_end":13259514,"line_start":474,"line_end":474,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260221,"byte_end":13260225,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260504,"byte_end":13260508,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268339,"byte_end":13268351,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268597,"byte_end":13268609,"line_start":62,"line_end":62,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268780,"byte_end":13268792,"line_start":71,"line_end":71,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270035,"byte_end":13270047,"line_start":106,"line_end":106,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270240,"byte_end":13270252,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270442,"byte_end":13270454,"line_start":122,"line_end":122,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270756,"byte_end":13270768,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13271592,"byte_end":13271607,"line_start":165,"line_end":165,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13272305,"byte_end":13272320,"line_start":195,"line_end":195,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274102,"byte_end":13274117,"line_start":239,"line_end":239,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274236,"byte_end":13274251,"line_start":245,"line_end":245,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274952,"byte_end":13274967,"line_start":272,"line_end":272,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13275166,"byte_end":13275181,"line_start":282,"line_end":282,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13275991,"byte_end":13276006,"line_start":314,"line_end":314,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13278758,"byte_end":13278768,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13279086,"byte_end":13279096,"line_start":414,"line_end":414,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13279608,"byte_end":13279618,"line_start":427,"line_end":427,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13280054,"byte_end":13280064,"line_start":442,"line_end":442,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13280245,"byte_end":13280255,"line_start":450,"line_end":450,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281025,"byte_end":13281033,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281491,"byte_end":13281501,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282020,"byte_end":13282033,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13284158,"byte_end":13284173,"line_start":121,"line_end":121,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13286490,"byte_end":13286505,"line_start":190,"line_end":190,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13294728,"byte_end":13294736,"line_start":135,"line_end":135,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13296318,"byte_end":13296326,"line_start":182,"line_end":182,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13297427,"byte_end":13297435,"line_start":220,"line_end":220,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302507,"byte_end":13302515,"line_start":362,"line_end":362,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302868,"byte_end":13302878,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302987,"byte_end":13302997,"line_start":385,"line_end":385,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13304060,"byte_end":13304064,"line_start":412,"line_end":412,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13304758,"byte_end":13304767,"line_start":441,"line_end":441,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13305186,"byte_end":13305198,"line_start":448,"line_end":448,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13306499,"byte_end":13306508,"line_start":486,"line_end":486,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/stack.rs","byte_start":13321323,"byte_end":13321332,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":67249,"byte_end":67254,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68340,"byte_end":68353,"line_start":280,"line_end":280,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68708,"byte_end":68721,"line_start":297,"line_end":297,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68925,"byte_end":68930,"line_start":307,"line_end":307,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":69802,"byte_end":69809,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":150682,"byte_end":150689,"line_start":51,"line_end":51,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":165293,"byte_end":165300,"line_start":412,"line_end":412,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":165511,"byte_end":165518,"line_start":423,"line_end":423,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":167849,"byte_end":167856,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":168487,"byte_end":168494,"line_start":94,"line_end":94,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":173751,"byte_end":173758,"line_start":242,"line_end":242,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":178884,"byte_end":178891,"line_start":377,"line_end":377,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":179234,"byte_end":179241,"line_start":393,"line_end":393,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":179370,"byte_end":179377,"line_start":402,"line_end":402,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":182651,"byte_end":182658,"line_start":494,"line_end":494,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138520,"byte_end":138526,"line_start":1455,"line_end":1455,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144176,"byte_end":144179,"line_start":1649,"line_end":1649,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144303,"byte_end":144306,"line_start":1657,"line_end":1657,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144439,"byte_end":144442,"line_start":1666,"line_end":1666,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148735,"byte_end":148736,"line_start":1786,"line_end":1786,"column_start":47,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148778,"byte_end":148779,"line_start":1787,"line_end":1787,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148843,"byte_end":148851,"line_start":1791,"line_end":1791,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148861,"byte_end":148869,"line_start":1793,"line_end":1793,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187931,"byte_end":187932,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188273,"byte_end":188285,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188547,"byte_end":188559,"line_start":120,"line_end":120,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188854,"byte_end":188866,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":189203,"byte_end":189215,"line_start":149,"line_end":149,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326528,"byte_end":13326533,"line_start":113,"line_end":113,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13328967,"byte_end":13328972,"line_start":187,"line_end":187,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330398,"byte_end":13330403,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331262,"byte_end":13331268,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333429,"byte_end":13333435,"line_start":319,"line_end":319,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333610,"byte_end":13333615,"line_start":330,"line_end":330,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334177,"byte_end":13334182,"line_start":350,"line_end":350,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334469,"byte_end":13334474,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382745,"byte_end":13382750,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383012,"byte_end":13383017,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385564,"byte_end":13385569,"line_start":157,"line_end":157,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390822,"byte_end":13390827,"line_start":315,"line_end":315,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400491,"byte_end":13400496,"line_start":577,"line_end":577,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402074,"byte_end":13402079,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402443,"byte_end":13402448,"line_start":638,"line_end":638,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403551,"byte_end":13403566,"line_start":672,"line_end":672,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404140,"byte_end":13404155,"line_start":691,"line_end":691,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404501,"byte_end":13404516,"line_start":701,"line_end":701,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404663,"byte_end":13404678,"line_start":707,"line_end":707,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13405387,"byte_end":13405392,"line_start":732,"line_end":732,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412407,"byte_end":13412417,"line_start":927,"line_end":927,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412599,"byte_end":13412609,"line_start":933,"line_end":933,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412938,"byte_end":13412948,"line_start":947,"line_end":947,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2420},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419269,"byte_end":13419276,"line_start":1118,"line_end":1118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13452563,"byte_end":13452569,"line_start":414,"line_end":414,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457185,"byte_end":13457191,"line_start":547,"line_end":547,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457572,"byte_end":13457578,"line_start":564,"line_end":564,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457867,"byte_end":13457873,"line_start":575,"line_end":575,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458308,"byte_end":13458314,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13468162,"byte_end":13468168,"line_start":884,"line_end":884,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13472041,"byte_end":13472047,"line_start":1012,"line_end":1012,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476074,"byte_end":13476075,"line_start":1141,"line_end":1141,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476921,"byte_end":13476934,"line_start":1173,"line_end":1173,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477091,"byte_end":13477104,"line_start":1181,"line_end":1181,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477200,"byte_end":13477213,"line_start":1187,"line_end":1187,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477428,"byte_end":13477442,"line_start":1198,"line_end":1198,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13478071,"byte_end":13478085,"line_start":1222,"line_end":1222,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480056,"byte_end":13480070,"line_start":1283,"line_end":1283,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480179,"byte_end":13480193,"line_start":1289,"line_end":1289,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480440,"byte_end":13480455,"line_start":1298,"line_end":1298,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480937,"byte_end":13480943,"line_start":1317,"line_end":1317,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13481666,"byte_end":13481672,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482449,"byte_end":13482454,"line_start":1380,"line_end":1380,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482815,"byte_end":13482828,"line_start":1406,"line_end":1406,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482939,"byte_end":13482952,"line_start":1412,"line_end":1412,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13484376,"byte_end":13484384,"line_start":1451,"line_end":1451,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13484854,"byte_end":13484862,"line_start":1470,"line_end":1470,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486196,"byte_end":13486203,"line_start":1507,"line_end":1507,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486545,"byte_end":13486559,"line_start":1522,"line_end":1522,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486875,"byte_end":13486889,"line_start":1533,"line_end":1533,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487064,"byte_end":13487078,"line_start":1542,"line_end":1542,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487273,"byte_end":13487287,"line_start":1551,"line_end":1551,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487872,"byte_end":13487879,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13489668,"byte_end":13489675,"line_start":1623,"line_end":1623,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13490584,"byte_end":13490597,"line_start":1657,"line_end":1657,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491283,"byte_end":13491296,"line_start":1684,"line_end":1684,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491413,"byte_end":13491426,"line_start":1690,"line_end":1690,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491619,"byte_end":13491632,"line_start":1700,"line_end":1700,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/datetime.rs","byte_start":13519431,"byte_end":13519439,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/datetime.rs","byte_start":13520017,"byte_end":13520025,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510942,"byte_end":13510948,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511072,"byte_end":13511078,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511173,"byte_end":13511183,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511404,"byte_end":13511410,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550224,"byte_end":13550225,"line_start":673,"line_end":673,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550396,"byte_end":13550399,"line_start":685,"line_end":685,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550571,"byte_end":13550575,"line_start":695,"line_end":695,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550717,"byte_end":13550727,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550876,"byte_end":13550886,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551156,"byte_end":13551166,"line_start":723,"line_end":723,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551310,"byte_end":13551323,"line_start":733,"line_end":733,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551682,"byte_end":13551695,"line_start":747,"line_end":747,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551912,"byte_end":13551925,"line_start":755,"line_end":755,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552257,"byte_end":13552262,"line_start":771,"line_end":771,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552667,"byte_end":13552672,"line_start":790,"line_end":790,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552895,"byte_end":13552911,"line_start":801,"line_end":801,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13553575,"byte_end":13553587,"line_start":833,"line_end":833,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554741,"byte_end":13554755,"line_start":879,"line_end":879,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555298,"byte_end":13555312,"line_start":901,"line_end":901,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555529,"byte_end":13555541,"line_start":913,"line_end":913,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556009,"byte_end":13556021,"line_start":926,"line_end":926,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556522,"byte_end":13556534,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557002,"byte_end":13557014,"line_start":959,"line_end":959,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557517,"byte_end":13557527,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558086,"byte_end":13558096,"line_start":996,"line_end":996,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558624,"byte_end":13558627,"line_start":1020,"line_end":1020,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13559015,"byte_end":13559018,"line_start":1033,"line_end":1033,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13559679,"byte_end":13559682,"line_start":1061,"line_end":1061,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560528,"byte_end":13560534,"line_start":1099,"line_end":1099,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560806,"byte_end":13560812,"line_start":1111,"line_end":1111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13561582,"byte_end":13561591,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13563191,"byte_end":13563192,"line_start":1202,"line_end":1202,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348025,"byte_end":13348035,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348746,"byte_end":13348756,"line_start":358,"line_end":358,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348915,"byte_end":13348925,"line_start":366,"line_end":366,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351063,"byte_end":13351073,"line_start":450,"line_end":450,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351399,"byte_end":13351416,"line_start":463,"line_end":463,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351600,"byte_end":13351617,"line_start":472,"line_end":472,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353413,"byte_end":13353421,"line_start":519,"line_end":519,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353894,"byte_end":13353911,"line_start":532,"line_end":532,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364110,"byte_end":13364127,"line_start":822,"line_end":822,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3139},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8770,"byte_end":8775,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10272,"byte_end":10277,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10287,"byte_end":10296,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":10306,"byte_end":10313,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8785,"byte_end":8791,"line_start":213,"line_end":213,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":235}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13191317,"byte_end":13191327,"line_start":49,"line_end":49,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":923}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/mod.rs","byte_start":31735,"byte_end":31742,"line_start":35,"line_end":35,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1221}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8801,"byte_end":8808,"line_start":214,"line_end":214,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":378}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8818,"byte_end":8826,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":396}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8837,"byte_end":8842,"line_start":217,"line_end":217,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":440}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8852,"byte_end":8856,"line_start":218,"line_end":218,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":725}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":8906,"byte_end":8912,"line_start":222,"line_end":222,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":2004}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/lib.rs","byte_start":9011,"byte_end":9014,"line_start":228,"line_end":228,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2156}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343810,"byte_end":13343816,"line_start":197,"line_end":197,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2429}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343895,"byte_end":13343899,"line_start":199,"line_end":199,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2743}},{"kind":"Mod","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13343978,"byte_end":13343984,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2787}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21338,"byte_end":21341,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21569,"byte_end":21572,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":21783,"byte_end":21786,"line_start":37,"line_end":37,"column_start":19,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":762},"to":{"krate":20,"index":387}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":22834,"byte_end":22837,"line_start":77,"line_end":77,"column_start":31,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":23053,"byte_end":23056,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":827}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/debug.rs","byte_start":23238,"byte_end":23241,"line_start":103,"line_end":103,"column_start":22,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24078,"byte_end":24087,"line_start":27,"line_end":27,"column_start":34,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24417,"byte_end":24426,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":24783,"byte_end":24797,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":25495,"byte_end":25509,"line_start":83,"line_end":83,"column_start":22,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":794},"to":{"krate":20,"index":387}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":26292,"byte_end":26306,"line_start":114,"line_end":114,"column_start":41,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/delimited.rs","byte_start":26474,"byte_end":26488,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28487,"byte_end":28495,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":28807,"byte_end":28815,"line_start":27,"line_end":27,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":29036,"byte_end":29044,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":805},"to":{"krate":20,"index":387}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30205,"byte_end":30213,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30429,"byte_end":30437,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":827}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/display.rs","byte_start":30619,"byte_end":30627,"line_start":109,"line_end":109,"column_start":22,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":11301,"byte_end":11306,"line_start":37,"line_end":37,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":387},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":12933,"byte_end":12939,"line_start":89,"line_end":89,"column_start":40,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":760},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":13812,"byte_end":13823,"line_start":117,"line_end":117,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":827}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":14127,"byte_end":14138,"line_start":125,"line_end":125,"column_start":21,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15264,"byte_end":15269,"line_start":161,"line_end":161,"column_start":56,"column_end":61},"kind":{"Impl":{"id":18}},"from":{"krate":20,"index":975},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15303,"byte_end":15308,"line_start":162,"line_end":162,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":20,"index":975},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15464,"byte_end":15474,"line_start":168,"line_end":168,"column_start":56,"column_end":66},"kind":{"Impl":{"id":20}},"from":{"krate":20,"index":1350},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15508,"byte_end":15518,"line_start":169,"line_end":169,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":20,"index":1350},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15679,"byte_end":15685,"line_start":175,"line_end":175,"column_start":56,"column_end":62},"kind":{"Impl":{"id":22}},"from":{"krate":20,"index":1358},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":15719,"byte_end":15725,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":20,"index":1358},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16130,"byte_end":16131,"line_start":194,"line_end":194,"column_start":34,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":218},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16336,"byte_end":16337,"line_start":205,"line_end":205,"column_start":53,"column_end":54},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":224},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16445,"byte_end":16446,"line_start":212,"line_end":212,"column_start":40,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16570,"byte_end":16571,"line_start":219,"line_end":219,"column_start":56,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/field/mod.rs","byte_start":16634,"byte_end":16635,"line_start":221,"line_end":221,"column_start":27,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":38626,"byte_end":38634,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":43490,"byte_end":43498,"line_start":324,"line_end":324,"column_start":25,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":43935,"byte_end":43943,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44082,"byte_end":44090,"line_start":351,"line_end":351,"column_start":24,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":44392,"byte_end":44403,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":46837,"byte_end":46848,"line_start":434,"line_end":434,"column_start":15,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":53137,"byte_end":53148,"line_start":600,"line_end":600,"column_start":15,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":54629,"byte_end":54640,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":268},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":55176,"byte_end":55187,"line_start":662,"line_end":662,"column_start":30,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":55751,"byte_end":55762,"line_start":679,"line_end":679,"column_start":25,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56079,"byte_end":56090,"line_start":694,"line_end":694,"column_start":24,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56358,"byte_end":56366,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/filter_fn.rs","byte_start":56838,"byte_end":56849,"line_start":726,"line_end":726,"column_start":33,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":268},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13232278,"byte_end":13232281,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13234046,"byte_end":13234049,"line_start":110,"line_end":110,"column_start":29,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":961},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13235666,"byte_end":13235669,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13235899,"byte_end":13235902,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13236182,"byte_end":13236184,"line_start":200,"line_end":200,"column_start":15,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13239234,"byte_end":13239236,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":968},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241349,"byte_end":13241351,"line_start":358,"line_end":358,"column_start":25,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241581,"byte_end":13241583,"line_start":372,"line_end":372,"column_start":30,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13241860,"byte_end":13241863,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13242267,"byte_end":13242270,"line_start":402,"line_end":402,"column_start":26,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":975},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13243483,"byte_end":13243486,"line_start":450,"line_end":450,"column_start":22,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/combinator.rs","byte_start":13243665,"byte_end":13243668,"line_start":462,"line_end":462,"column_start":27,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13196134,"byte_end":13196140,"line_start":167,"line_end":167,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1932},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13203995,"byte_end":13204006,"line_start":390,"line_end":390,"column_start":30,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":20,"index":1266},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205011,"byte_end":13205014,"line_start":429,"line_end":429,"column_start":30,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205201,"byte_end":13205204,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13205321,"byte_end":13205329,"line_start":441,"line_end":441,"column_start":15,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13209059,"byte_end":13209067,"line_start":547,"line_end":547,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1163},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13215319,"byte_end":13215327,"line_start":695,"line_end":695,"column_start":30,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13215662,"byte_end":13215670,"line_start":711,"line_end":711,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13219863,"byte_end":13219871,"line_start":819,"line_end":819,"column_start":21,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220571,"byte_end":13220579,"line_start":840,"line_end":840,"column_start":22,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":9354}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220815,"byte_end":13220816,"line_start":850,"line_end":850,"column_start":29,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1126},"to":{"krate":0,"index":1057}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13220879,"byte_end":13220888,"line_start":854,"line_end":854,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13221491,"byte_end":13221500,"line_start":882,"line_end":882,"column_start":21,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13221867,"byte_end":13221876,"line_start":896,"line_end":896,"column_start":22,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":9354}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13222104,"byte_end":13222115,"line_start":906,"line_end":906,"column_start":6,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13229070,"byte_end":13229092,"line_start":1085,"line_end":1085,"column_start":21,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/layer_filters/mod.rs","byte_start":13230410,"byte_end":13230419,"line_start":1124,"line_end":1124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/level.rs","byte_start":57859,"byte_end":57870,"line_start":11,"line_end":11,"column_start":41,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":20,"index":1266},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13250151,"byte_end":13250158,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256245,"byte_end":13256252,"line_start":347,"line_end":347,"column_start":31,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":7429}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256610,"byte_end":13256617,"line_start":360,"line_end":360,"column_start":37,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13256847,"byte_end":13256854,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257102,"byte_end":13257109,"line_start":382,"line_end":382,"column_start":29,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257589,"byte_end":13257596,"line_start":401,"line_end":401,"column_start":30,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13257963,"byte_end":13257970,"line_start":415,"line_end":415,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":7420}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259257,"byte_end":13259265,"line_start":465,"line_end":465,"column_start":6,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13259506,"byte_end":13259514,"line_start":474,"line_end":474,"column_start":19,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260221,"byte_end":13260225,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/targets.rs","byte_start":13260504,"byte_end":13260508,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1466},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268339,"byte_end":13268351,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268597,"byte_end":13268609,"line_start":62,"line_end":62,"column_start":26,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13268780,"byte_end":13268792,"line_start":71,"line_end":71,"column_start":22,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270035,"byte_end":13270047,"line_start":106,"line_end":106,"column_start":42,"column_end":54},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270240,"byte_end":13270252,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":7429}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270442,"byte_end":13270454,"line_start":122,"line_end":122,"column_start":26,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":7420}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13270756,"byte_end":13270768,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13271592,"byte_end":13271607,"line_start":165,"line_end":165,"column_start":6,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13272305,"byte_end":13272320,"line_start":195,"line_end":195,"column_start":14,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274102,"byte_end":13274117,"line_start":239,"line_end":239,"column_start":21,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274236,"byte_end":13274251,"line_start":245,"line_end":245,"column_start":16,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1477},"to":{"krate":0,"index":1374}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13274952,"byte_end":13274967,"line_start":272,"line_end":272,"column_start":18,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13275166,"byte_end":13275181,"line_start":282,"line_end":282,"column_start":23,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13275991,"byte_end":13276006,"line_start":314,"line_end":314,"column_start":18,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13278758,"byte_end":13278768,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13279086,"byte_end":13279096,"line_start":414,"line_end":414,"column_start":23,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1473},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13279608,"byte_end":13279618,"line_start":427,"line_end":427,"column_start":28,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1473},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13280054,"byte_end":13280064,"line_start":442,"line_end":442,"column_start":57,"column_end":67},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1473},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/filter/directive.rs","byte_start":13280245,"byte_end":13280255,"line_start":450,"line_end":450,"column_start":34,"column_end":44},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1473},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281025,"byte_end":13281033,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1599},"to":{"krate":2,"index":9559}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13281491,"byte_end":13281501,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13282020,"byte_end":13282033,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13284158,"byte_end":13284173,"line_start":121,"line_end":121,"column_start":6,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/extensions.rs","byte_start":13286490,"byte_end":13286505,"line_start":190,"line_end":190,"column_start":21,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1618},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13294728,"byte_end":13294736,"line_start":135,"line_end":135,"column_start":18,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1809},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13296318,"byte_end":13296326,"line_start":182,"line_end":182,"column_start":6,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13297427,"byte_end":13297435,"line_start":220,"line_end":220,"column_start":21,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1809},"to":{"krate":20,"index":828}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302507,"byte_end":13302515,"line_start":362,"line_end":362,"column_start":29,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302868,"byte_end":13302878,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13302987,"byte_end":13302997,"line_start":385,"line_end":385,"column_start":19,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1725},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13304060,"byte_end":13304064,"line_start":412,"line_end":412,"column_start":27,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1815},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13304758,"byte_end":13304767,"line_start":441,"line_end":441,"column_start":18,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13305186,"byte_end":13305198,"line_start":448,"line_end":448,"column_start":51,"column_end":63},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1777},"to":{"krate":20,"index":70}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/sharded.rs","byte_start":13306499,"byte_end":13306508,"line_start":486,"line_end":486,"column_start":16,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1821},"to":{"krate":22,"index":344}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/stack.rs","byte_start":13321323,"byte_end":13321332,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":67249,"byte_end":67254,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68340,"byte_end":68353,"line_start":280,"line_end":280,"column_start":30,"column_end":43},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68708,"byte_end":68721,"line_start":297,"line_end":297,"column_start":32,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":68925,"byte_end":68930,"line_start":307,"line_end":307,"column_start":26,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1854},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/registry/mod.rs","byte_start":69802,"byte_end":69809,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":150682,"byte_end":150689,"line_start":51,"line_end":51,"column_start":13,"column_end":20},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":165293,"byte_end":165300,"line_start":412,"line_end":412,"column_start":13,"column_end":20},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/context.rs","byte_start":165511,"byte_end":165518,"line_start":423,"line_end":423,"column_start":23,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1908},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":167849,"byte_end":167856,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":168487,"byte_end":168494,"line_start":94,"line_end":94,"column_start":27,"column_end":34},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1917},"to":{"krate":20,"index":828}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":173751,"byte_end":173758,"line_start":242,"line_end":242,"column_start":28,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1917},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":178884,"byte_end":178891,"line_start":377,"line_end":377,"column_start":35,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1917},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":179234,"byte_end":179241,"line_start":393,"line_end":393,"column_start":12,"column_end":19},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":179370,"byte_end":179377,"line_start":402,"line_end":402,"column_start":15,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/layered.rs","byte_start":182651,"byte_end":182658,"line_start":494,"line_end":494,"column_start":30,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1917},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138130,"byte_end":138140,"line_start":1436,"line_end":1436,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":828},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138158,"byte_end":138164,"line_start":1436,"line_end":1436,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":760},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":138520,"byte_end":138526,"line_start":1455,"line_end":1455,"column_start":25,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":2,"index":43362},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144176,"byte_end":144179,"line_start":1649,"line_end":1649,"column_start":29,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144303,"byte_end":144306,"line_start":1657,"line_end":1657,"column_start":26,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":144439,"byte_end":144442,"line_start":1666,"line_end":1666,"column_start":29,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148735,"byte_end":148736,"line_start":1786,"line_end":1786,"column_start":47,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":718},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148778,"byte_end":148779,"line_start":1787,"line_end":1787,"column_start":39,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":720},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148843,"byte_end":148851,"line_start":1791,"line_end":1791,"column_start":34,"column_end":42},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1942},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/layer/mod.rs","byte_start":148861,"byte_end":148869,"line_start":1793,"line_end":1793,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":187931,"byte_end":187932,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":744},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188273,"byte_end":188285,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188547,"byte_end":188559,"line_start":120,"line_end":120,"column_start":21,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":188854,"byte_end":188866,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/util.rs","byte_start":189203,"byte_end":189215,"line_start":149,"line_end":149,"column_start":16,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13326528,"byte_end":13326533,"line_start":113,"line_end":113,"column_start":32,"column_end":37},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2127},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13328967,"byte_end":13328972,"line_start":187,"line_end":187,"column_start":40,"column_end":45},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2127},"to":{"krate":0,"index":1932}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13330398,"byte_end":13330403,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13331262,"byte_end":13331268,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333429,"byte_end":13333435,"line_start":319,"line_end":319,"column_start":22,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2136},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13333610,"byte_end":13333615,"line_start":330,"line_end":330,"column_start":6,"column_end":11},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334177,"byte_end":13334182,"line_start":350,"line_end":350,"column_start":23,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2145},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/reload.rs","byte_start":13334469,"byte_end":13334474,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2145},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13382745,"byte_end":13382750,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13383012,"byte_end":13383017,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13385564,"byte_end":13385569,"line_start":157,"line_end":157,"column_start":18,"column_end":23},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13390822,"byte_end":13390827,"line_start":315,"line_end":315,"column_start":21,"column_end":26},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13400491,"byte_end":13400496,"line_start":577,"line_end":577,"column_start":18,"column_end":23},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402074,"byte_end":13402079,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3170},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13402443,"byte_end":13402448,"line_start":638,"line_end":638,"column_start":18,"column_end":23},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13403551,"byte_end":13403566,"line_start":672,"line_end":672,"column_start":17,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404140,"byte_end":13404155,"line_start":691,"line_end":691,"column_start":32,"column_end":47},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3187},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404501,"byte_end":13404516,"line_start":701,"line_end":701,"column_start":34,"column_end":49},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3187},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13404663,"byte_end":13404678,"line_start":707,"line_end":707,"column_start":27,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3187},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13405387,"byte_end":13405392,"line_start":732,"line_end":732,"column_start":38,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3170},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412407,"byte_end":13412417,"line_start":927,"line_end":927,"column_start":31,"column_end":41},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2379},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412599,"byte_end":13412609,"line_start":933,"line_end":933,"column_start":52,"column_end":62},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2379},"to":{"krate":0,"index":2511}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13412938,"byte_end":13412948,"line_start":947,"line_end":947,"column_start":16,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/fmt_layer.rs","byte_start":13419269,"byte_end":13419276,"line_start":1118,"line_end":1118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13452563,"byte_end":13452569,"line_start":414,"line_end":414,"column_start":15,"column_end":21},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457185,"byte_end":13457191,"line_start":547,"line_end":547,"column_start":21,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2519},"to":{"krate":2,"index":9294}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457572,"byte_end":13457578,"line_start":564,"line_end":564,"column_start":21,"column_end":27},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2519},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13457867,"byte_end":13457873,"line_start":575,"line_end":575,"column_start":18,"column_end":24},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3519},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13458308,"byte_end":13458314,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13468162,"byte_end":13468168,"line_start":884,"line_end":884,"column_start":37,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3519},"to":{"krate":0,"index":2499}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13472041,"byte_end":13472047,"line_start":1012,"line_end":1012,"column_start":37,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3519},"to":{"krate":0,"index":2499}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476074,"byte_end":13476075,"line_start":1141,"line_end":1141,"column_start":44,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2582},"to":{"krate":0,"index":2511}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13476921,"byte_end":13476934,"line_start":1173,"line_end":1173,"column_start":6,"column_end":19},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477091,"byte_end":13477104,"line_start":1181,"line_end":1181,"column_start":18,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477200,"byte_end":13477213,"line_start":1187,"line_end":1187,"column_start":38,"column_end":51},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13477428,"byte_end":13477442,"line_start":1198,"line_end":1198,"column_start":10,"column_end":24},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13478071,"byte_end":13478085,"line_start":1222,"line_end":1222,"column_start":27,"column_end":41},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3507},"to":{"krate":20,"index":387}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480056,"byte_end":13480070,"line_start":1283,"line_end":1283,"column_start":53,"column_end":67},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3507},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480179,"byte_end":13480193,"line_start":1289,"line_end":1289,"column_start":37,"column_end":51},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3507},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480440,"byte_end":13480455,"line_start":1298,"line_end":1298,"column_start":22,"column_end":37},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13480937,"byte_end":13480943,"line_start":1317,"line_end":1317,"column_start":20,"column_end":26},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13481666,"byte_end":13481672,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2615},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482449,"byte_end":13482454,"line_start":1380,"line_end":1380,"column_start":6,"column_end":11},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482815,"byte_end":13482828,"line_start":1406,"line_end":1406,"column_start":10,"column_end":23},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13482939,"byte_end":13482952,"line_start":1412,"line_end":1412,"column_start":27,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2651},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13484376,"byte_end":13484384,"line_start":1451,"line_end":1451,"column_start":10,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13484854,"byte_end":13484862,"line_start":1470,"line_end":1470,"column_start":27,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2675},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486196,"byte_end":13486203,"line_start":1507,"line_end":1507,"column_start":41,"column_end":48},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486545,"byte_end":13486559,"line_start":1522,"line_end":1522,"column_start":23,"column_end":37},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2523},"to":{"krate":20,"index":387}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13486875,"byte_end":13486889,"line_start":1533,"line_end":1533,"column_start":42,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2523},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487064,"byte_end":13487078,"line_start":1542,"line_end":1542,"column_start":26,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2523},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487273,"byte_end":13487287,"line_start":1551,"line_end":1551,"column_start":28,"column_end":42},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2523},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13487872,"byte_end":13487879,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13489668,"byte_end":13489675,"line_start":1623,"line_end":1623,"column_start":16,"column_end":23},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13490584,"byte_end":13490597,"line_start":1657,"line_end":1657,"column_start":6,"column_end":19},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491283,"byte_end":13491296,"line_start":1684,"line_end":1684,"column_start":16,"column_end":29},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491413,"byte_end":13491426,"line_start":1690,"line_end":1690,"column_start":18,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/format/mod.rs","byte_start":13491619,"byte_end":13491632,"line_start":1700,"line_end":1700,"column_start":18,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2738},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/datetime.rs","byte_start":13519431,"byte_end":13519439,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3230},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/datetime.rs","byte_start":13520017,"byte_end":13520025,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3230},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13510942,"byte_end":13510948,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511072,"byte_end":13511078,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511173,"byte_end":13511183,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3250},"to":{"krate":0,"index":2767}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/time/mod.rs","byte_start":13511404,"byte_end":13511410,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3265},"to":{"krate":0,"index":2767}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13533729,"byte_end":13533739,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2812},"to":{"krate":0,"index":2817}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550224,"byte_end":13550225,"line_start":673,"line_end":673,"column_start":35,"column_end":36},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2836},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550396,"byte_end":13550399,"line_start":685,"line_end":685,"column_start":32,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550571,"byte_end":13550575,"line_start":695,"line_end":695,"column_start":38,"column_end":42},"kind":{"Impl":{"id":211}},"from":{"krate":1,"index":3030},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550717,"byte_end":13550727,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13550876,"byte_end":13550886,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3279},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551156,"byte_end":13551166,"line_start":723,"line_end":723,"column_start":29,"column_end":39},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3279},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551310,"byte_end":13551323,"line_start":733,"line_end":733,"column_start":6,"column_end":19},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551682,"byte_end":13551695,"line_start":747,"line_end":747,"column_start":21,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2828},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13551912,"byte_end":13551925,"line_start":755,"line_end":755,"column_start":29,"column_end":42},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552257,"byte_end":13552262,"line_start":771,"line_end":771,"column_start":32,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2869},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552667,"byte_end":13552672,"line_start":790,"line_end":790,"column_start":32,"column_end":37},"kind":{"Impl":{"id":219}},"from":{"krate":1,"index":8415},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13552895,"byte_end":13552911,"line_start":801,"line_end":801,"column_start":27,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3459},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13553575,"byte_end":13553587,"line_start":833,"line_end":833,"column_start":26,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3285},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13554741,"byte_end":13554755,"line_start":879,"line_end":879,"column_start":9,"column_end":23},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555298,"byte_end":13555312,"line_start":901,"line_end":901,"column_start":29,"column_end":43},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2832},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13555529,"byte_end":13555541,"line_start":913,"line_end":913,"column_start":9,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556009,"byte_end":13556021,"line_start":926,"line_end":926,"column_start":48,"column_end":60},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3320},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13556522,"byte_end":13556534,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557002,"byte_end":13557014,"line_start":959,"line_end":959,"column_start":48,"column_end":60},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3343},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13557517,"byte_end":13557527,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558086,"byte_end":13558096,"line_start":996,"line_end":996,"column_start":35,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3366},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13558624,"byte_end":13558627,"line_start":1020,"line_end":1020,"column_start":12,"column_end":15},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13559015,"byte_end":13559018,"line_start":1033,"line_end":1033,"column_start":35,"column_end":38},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3428},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13559679,"byte_end":13559682,"line_start":1061,"line_end":1061,"column_start":26,"column_end":29},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3428},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560528,"byte_end":13560534,"line_start":1099,"line_end":1099,"column_start":12,"column_end":18},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13560806,"byte_end":13560812,"line_start":1111,"line_end":1111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3397},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13561582,"byte_end":13561591,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3468},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/writer.rs","byte_start":13563191,"byte_end":13563192,"line_start":1202,"line_end":1202,"column_start":35,"column_end":36},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2980},"to":{"krate":0,"index":2817}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348025,"byte_end":13348035,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348746,"byte_end":13348756,"line_start":358,"line_end":358,"column_start":18,"column_end":28},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3478},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13348915,"byte_end":13348925,"line_start":366,"line_end":366,"column_start":47,"column_end":57},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3478},"to":{"krate":20,"index":828}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351063,"byte_end":13351073,"line_start":450,"line_end":450,"column_start":41,"column_end":51},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351399,"byte_end":13351416,"line_start":463,"line_end":463,"column_start":18,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13351600,"byte_end":13351617,"line_start":472,"line_end":472,"column_start":18,"column_end":35},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353413,"byte_end":13353421,"line_start":519,"line_end":519,"column_start":72,"column_end":80},"kind":{"Impl":{"id":243}},"from":{"krate":20,"index":962},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13353894,"byte_end":13353911,"line_start":532,"line_end":532,"column_start":21,"column_end":38},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-subscriber-0.3.15/src/fmt/mod.rs","byte_start":13364110,"byte_end":13364127,"line_start":822,"line_end":822,"column_start":18,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3490},"to":{"krate":4294967295,"index":4294967295}}]}