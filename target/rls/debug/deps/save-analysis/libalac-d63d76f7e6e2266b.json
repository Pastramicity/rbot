{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0","program":"/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","alac","/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"mp4\"","--cfg","feature=\"mp4parse\"","-C","metadata=d63d76f7e6e2266b","-C","extra-filename=-d63d76f7e6e2266b","--out-dir","/home/pastra/code/rbot/target/rls/debug/deps","-L","dependency=/home/pastra/code/rbot/target/rls/debug/deps","--extern","mp4parse=/home/pastra/code/rbot/target/rls/debug/deps/libmp4parse-7f2bc364cabe930e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pastra/code/rbot/target/rls/debug/deps/libalac-d63d76f7e6e2266b.rmeta"},"prelude":{"crate_id":{"name":"alac","disambiguator":[8705001015515923740,0]},"crate_root":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src","external_crates":[{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":20,"id":{"name":"mp4parse","disambiguator":[15011906808553757346,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":21,"id":{"name":"log","disambiguator":[16541051944014140246,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":23,"id":{"name":"byteorder","disambiguator":[1344286533117614042,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":24,"id":{"name":"bitreader","disambiguator":[3080697747356298341,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","num":25,"id":{"name":"num_traits","disambiguator":[4146156763721979506,0]}}],"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":0,"byte_end":6474,"line_start":1,"line_end":221,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":163,"byte_end":170,"line_start":10,"line_end":10,"column_start":15,"column_end":22},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":172,"byte_end":178,"line_start":10,"line_end":10,"column_start":24,"column_end":30},"alias_span":null,"name":"Sample","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":244,"byte_end":250,"line_start":12,"line_end":12,"column_start":18,"column_end":24},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":252,"byte_end":259,"line_start":12,"line_end":12,"column_start":26,"column_end":33},"alias_span":null,"name":"Packets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":261,"byte_end":270,"line_start":12,"line_end":12,"column_start":35,"column_end":44},"alias_span":null,"name":"ReadError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":272,"byte_end":278,"line_start":12,"line_end":12,"column_start":46,"column_end":52},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":280,"byte_end":287,"line_start":12,"line_end":12,"column_start":54,"column_end":61},"alias_span":null,"name":"Samples","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":0,"byte_end":6474,"line_start":1,"line_end":221,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":20},{"krate":0,"index":89},{"krate":0,"index":148},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":359},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":288},{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/bitcursor.rs","byte_start":6674,"byte_end":6687,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"NotEnoughData","qualname":"::bitcursor::NotEnoughData","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10353,"byte_end":10359,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"Sample","qualname":"::dec::Sample","value":"Sample: Copy + private::Sealed","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" A type that can be used to represent audio samples.\n","sig":null,"attributes":[{"value":"/ A type that can be used to represent audio samples.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10287,"byte_end":10342,"line_start":6,"line_end":6,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10470,"byte_end":10482,"line_start":9,"line_end":9,"column_start":8,"column_end":20},"name":"from_decoder","qualname":"::dec::Sample::from_decoder","value":"pub fn from_decoder(i32, u8) -> Self","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Constructs `Self` from a right-aligned sample with bit depth `bits`.\n","sig":null,"attributes":[{"value":"/ Constructs `Self` from a right-aligned sample with bit depth `bits`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10390,"byte_end":10462,"line_start":8,"line_end":8,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10523,"byte_end":10527,"line_start":11,"line_end":11,"column_start":8,"column_end":12},"name":"bits","qualname":"::dec::Sample::bits","value":"pub fn bits() -> u8","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11032,"byte_end":11038,"line_start":40,"line_end":40,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::dec::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Sealed prevents other crates from implementing any traits that use it.\n","sig":null,"attributes":[{"value":"/ Sealed prevents other crates from implementing any traits that use it.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10943,"byte_end":11017,"line_start":39,"line_end":39,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11138,"byte_end":11145,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::dec::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" An ALAC packet decoder.\n","sig":null,"attributes":[{"value":"/ An ALAC packet decoder.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11099,"byte_end":11126,"line_start":45,"line_end":45,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11624,"byte_end":11627,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(StreamInfo) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Decoder` for a stream described by the `StreamInfo`.\n","sig":null,"attributes":[{"value":"/ Creates a `Decoder` for a stream described by the `StreamInfo`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11545,"byte_end":11612,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11868,"byte_end":11879,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"stream_info","qualname":"<Decoder>::stream_info","value":"pub fn stream_info(&Self) -> &StreamInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns the `StreamInfo` used to create this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the `StreamInfo` used to create this decoder.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11799,"byte_end":11856,"line_start":69,"line_end":69,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":12223,"byte_end":12236,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"decode_packet","qualname":"<Decoder>::decode_packet","value":"pub fn decode_packet<'a, S: Sample>(&mut Self, &[u8], &'a mut [S])\n-> Result<&'a [S], InvalidData>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an ALAC packet into `out`.","sig":null,"attributes":[{"value":"/ Decodes an ALAC packet into `out`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11936,"byte_end":11974,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11979,"byte_end":11982,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Channels are interleaved, e.g. for a stereo packet `out` would contains samples in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11987,"byte_end":12077,"line_start":76,"line_end":76,"column_start":5,"column_end":95}},{"value":"/ order `[left, right, left, right, ..]`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":12082,"byte_end":12125,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":12130,"byte_end":12133,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Panics if `out` is shorter than `StreamInfo::max_samples_per_packet`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":12138,"byte_end":12211,"line_start":79,"line_end":79,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36283,"byte_end":36286,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Mp4","qualname":"::reader::Format::Mp4","value":"Format::Mp4","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"mp4\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36255,"byte_end":36278,"line_start":13,"line_end":13,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36311,"byte_end":36326,"line_start":16,"line_end":16,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::reader::Format::__Nonexhaustive","value":"Format::__Nonexhaustive","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":324},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36205,"byte_end":36211,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Format","qualname":"::reader::Format","value":"pub enum Format { Mp4, __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327}],"decl_id":null,"docs":" The format of an ALAC file.\n","sig":null,"attributes":[{"value":"/ The format of an ALAC file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36119,"byte_end":36150,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36576,"byte_end":36578,"line_start":25,"line_end":25,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::ReadError::Io","value":"ReadError::Io(io::Error)","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36595,"byte_end":36612,"line_start":26,"line_end":26,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::reader::ReadError::UnsupportedFormat","value":"ReadError::UnsupportedFormat","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":346},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36618,"byte_end":36624,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::ReadError::Format","value":"ReadError::Format(Format, InvalidData)","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":350},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36651,"byte_end":36658,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Decoder","qualname":"::reader::ReadError::Decoder","value":"ReadError::Decoder(InvalidData)","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":340},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36560,"byte_end":36569,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::reader::ReadError","value":"pub enum ReadError {\n    Io(io::Error),\n    UnsupportedFormat,\n    Format(Format, InvalidData),\n    Decoder(InvalidData),\n}","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":350}],"decl_id":null,"docs":" An error when reading an ALAC file using a `Reader`.","sig":null,"attributes":[{"value":"/ An error when reading an ALAC file using a `Reader`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36331,"byte_end":36387,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36388,"byte_end":36391,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A `ReadError::Decoder` will occur if the current packet is invalid. If more samples are read","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36392,"byte_end":36488,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ the reader will skip to the next packet.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36489,"byte_end":36533,"line_start":22,"line_end":22,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":191},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38004,"byte_end":38010,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" An ALAC reader and decoder supporting `mp4` and `caf` files (if the respective Cargo features\n are enabled).\n","sig":null,"attributes":[{"value":"/ An ALAC reader and decoder supporting `mp4` and `caf` files (if the respective Cargo features","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37877,"byte_end":37974,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ are enabled).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37975,"byte_end":37992,"line_start":69,"line_end":69,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38226,"byte_end":38229,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Result<Reader<R>, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a `Reader` from a seekable byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to create a `Reader` from a seekable byte stream.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38152,"byte_end":38214,"line_start":77,"line_end":77,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38649,"byte_end":38655,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Returns the format of this ALAC file.\n","sig":null,"attributes":[{"value":"/ Returns the format of this ALAC file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38596,"byte_end":38637,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38801,"byte_end":38812,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"stream_info","qualname":"<Reader<R>>::stream_info","value":"pub fn stream_info(&Self) -> &StreamInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a `StreamInfo` describing the ALAC stream in this file.\n","sig":null,"attributes":[{"value":"/ Returns a `StreamInfo` describing the ALAC stream in this file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38722,"byte_end":38789,"line_start":94,"line_end":94,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":39099,"byte_end":39111,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"into_samples","qualname":"<Reader<R>>::into_samples","value":"pub fn into_samples<S: Sample>(Self) -> Samples<R, S>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the samples in the ALAC stream.","sig":null,"attributes":[{"value":"/ Returns an iterator over the samples in the ALAC stream.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38883,"byte_end":38943,"line_start":99,"line_end":99,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38948,"byte_end":38951,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Channels are interleaved, e.g. for a stereo stream they would be yielded in the order","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38956,"byte_end":39045,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ `[left, right, left, right, ..]`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":39050,"byte_end":39087,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":39395,"byte_end":39407,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"into_packets","qualname":"<Reader<R>>::into_packets","value":"pub fn into_packets<S: Sample>(Self) -> Packets<R, S>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator-like type that decodes packets into a user-provided buffer.\n","sig":null,"attributes":[{"value":"/ Returns an iterator-like type that decodes packets into a user-provided buffer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":39300,"byte_end":39383,"line_start":112,"line_end":112,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40231,"byte_end":40238,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"Samples","qualname":"::reader::Samples","value":"Samples {  }","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" An iterator that yields samples of type `S` read from a `Reader`.\n","sig":null,"attributes":[{"value":"/ An iterator that yields samples of type `S` read from a `Reader`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40150,"byte_end":40219,"line_start":143,"line_end":143,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40458,"byte_end":40464,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"format","qualname":"<Samples<R, S>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Returns the format of this ALAC file.\n","sig":null,"attributes":[{"value":"/ Returns the format of this ALAC file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40405,"byte_end":40446,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40603,"byte_end":40614,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"stream_info","qualname":"<Samples<R, S>>::stream_info","value":"pub fn stream_info(&Self) -> &StreamInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a `StreamInfo` describing the ALAC stream in this file.\n","sig":null,"attributes":[{"value":"/ Returns a `StreamInfo` describing the ALAC stream in this file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40524,"byte_end":40591,"line_start":157,"line_end":157,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41700,"byte_end":41707,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"Packets","qualname":"::reader::Packets","value":"Packets {  }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" An iterator-like type that decodes packets into a user-provided buffer.\n","sig":null,"attributes":[{"value":"/ An iterator-like type that decodes packets into a user-provided buffer.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41613,"byte_end":41688,"line_start":189,"line_end":189,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41891,"byte_end":41897,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"format","qualname":"<Packets<R, S>>::format","value":"pub fn format(&Self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Returns the format of this ALAC file.\n","sig":null,"attributes":[{"value":"/ Returns the format of this ALAC file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41838,"byte_end":41879,"line_start":196,"line_end":196,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42036,"byte_end":42047,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"stream_info","qualname":"<Packets<R, S>>::stream_info","value":"pub fn stream_info(&Self) -> &StreamInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a `StreamInfo` describing the ALAC stream in this file.\n","sig":null,"attributes":[{"value":"/ Returns a `StreamInfo` describing the ALAC stream in this file.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41957,"byte_end":42024,"line_start":201,"line_end":201,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42418,"byte_end":42427,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"next_into","qualname":"<Packets<R, S>>::next_into","value":"pub fn next_into<'a>(&mut Self, &'a mut [S])\n-> Result<Option<&'a [S]>, ReadError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next packet and decodes it into `out`.","sig":null,"attributes":[{"value":"/ Reads the next packet and decodes it into `out`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42117,"byte_end":42169,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42174,"byte_end":42177,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Channels are interleaved, e.g. for a stereo packet `out` would contains samples in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42182,"byte_end":42272,"line_start":208,"line_end":208,"column_start":5,"column_end":95}},{"value":"/ order `[left, right, left, right, ..]`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42277,"byte_end":42320,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42325,"byte_end":42328,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Panics if `out` is shorter than `StreamInfo::max_samples_per_packet`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42333,"byte_end":42406,"line_start":211,"line_end":211,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":529,"byte_end":540,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"InvalidData","qualname":"::InvalidData","value":"InvalidData {  }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" An error indicating user-provided data is invalid.","sig":null,"attributes":[{"value":"/ An error indicating user-provided data is invalid.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":322,"byte_end":376,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":377,"byte_end":380,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ When decoding a packet this error can occur if the packet is invalid or corrupted, or if it has","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":381,"byte_end":480,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ been truncated.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":481,"byte_end":500,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":359},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1177,"byte_end":1187,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"StreamInfo","qualname":"::StreamInfo","value":"StreamInfo {  }","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" Codec initialisation parameters for an ALAC stream.\n","sig":null,"attributes":[{"value":"/ Codec initialisation parameters for an ALAC stream.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1071,"byte_end":1126,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1616,"byte_end":1627,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"from_cookie","qualname":"<StreamInfo>::from_cookie","value":"pub fn from_cookie(&[u8]) -> Result<StreamInfo, InvalidData>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamInfo` from a magic cookie. This is often stored in the header of a\n container format.\n","sig":null,"attributes":[{"value":"/ Creates a `StreamInfo` from a magic cookie. This is often stored in the header of a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1491,"byte_end":1578,"line_start":65,"line_end":65,"column_start":5,"column_end":92}},{"value":"/ container format.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1583,"byte_end":1604,"line_start":66,"line_end":66,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":3364,"byte_end":3390,"line_start":110,"line_end":110,"column_start":12,"column_end":38},"name":"from_sdp_format_parameters","qualname":"<StreamInfo>::from_sdp_format_parameters","value":"pub fn from_sdp_format_parameters(&str) -> Result<StreamInfo, InvalidData>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamInfo` from SDP format specific parameters, i.e. the `fmtp` attribute.\n","sig":null,"attributes":[{"value":"/ Creates a `StreamInfo` from SDP format specific parameters, i.e. the `fmtp` attribute.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":3262,"byte_end":3352,"line_start":109,"line_end":109,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":4562,"byte_end":4573,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"sample_rate","qualname":"<StreamInfo>::sample_rate","value":"pub fn sample_rate(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":4633,"byte_end":4642,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"bit_depth","qualname":"<StreamInfo>::bit_depth","value":"pub fn bit_depth(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":4699,"byte_end":4707,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"channels","qualname":"<StreamInfo>::channels","value":"pub fn channels(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":4767,"byte_end":4788,"line_start":155,"line_end":155,"column_start":12,"column_end":33},"name":"max_frames_per_packet","qualname":"<StreamInfo>::max_frames_per_packet","value":"pub fn max_frames_per_packet(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":4849,"byte_end":4871,"line_start":159,"line_end":159,"column_start":12,"column_end":34},"name":"max_samples_per_packet","qualname":"<StreamInfo>::max_samples_per_packet","value":"pub fn max_samples_per_packet(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/bitcursor.rs","byte_start":6699,"byte_end":6708,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11531,"byte_end":11538,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","byte_start":31475,"byte_end":31484,"line_start":12,"line_end":12,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","byte_start":32381,"byte_end":32396,"line_start":43,"line_end":43,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36698,"byte_end":36707,"line_start":31,"line_end":31,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37330,"byte_end":37339,"line_start":51,"line_end":51,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37786,"byte_end":37795,"line_start":62,"line_end":62,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38136,"byte_end":38142,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40385,"byte_end":40392,"line_start":151,"line_end":151,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40727,"byte_end":40734,"line_start":163,"line_end":163,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41818,"byte_end":41825,"line_start":195,"line_end":195,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42834,"byte_end":42846,"line_start":229,"line_end":229,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":595,"byte_end":606,"line_start":26,"line_end":26,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":697,"byte_end":708,"line_start":32,"line_end":32,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":853,"byte_end":864,"line_start":38,"line_end":38,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1474,"byte_end":1484,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/bitcursor.rs","byte_start":6699,"byte_end":6708,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10361,"byte_end":10365,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":37}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":10377,"byte_end":10383,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":37}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/dec.rs","byte_start":11531,"byte_end":11538,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","byte_start":31475,"byte_end":31484,"line_start":12,"line_end":12,"column_start":22,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/mp4.rs","byte_start":32381,"byte_end":32396,"line_start":43,"line_end":43,"column_start":22,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":36698,"byte_end":36707,"line_start":31,"line_end":31,"column_start":23,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":340},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37330,"byte_end":37339,"line_start":51,"line_end":51,"column_start":23,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":37786,"byte_end":37795,"line_start":62,"line_end":62,"column_start":26,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":38136,"byte_end":38142,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40385,"byte_end":40392,"line_start":151,"line_end":151,"column_start":33,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":40727,"byte_end":40734,"line_start":163,"line_end":163,"column_start":46,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":41818,"byte_end":41825,"line_start":195,"line_end":195,"column_start":33,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/reader.rs","byte_start":42834,"byte_end":42846,"line_start":229,"line_end":229,"column_start":22,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":595,"byte_end":606,"line_start":26,"line_end":26,"column_start":23,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":355},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":697,"byte_end":708,"line_start":32,"line_end":32,"column_start":23,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":853,"byte_end":864,"line_start":38,"line_end":38,"column_start":41,"column_end":52},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/alac-0.5.0/src/lib.rs","byte_start":1474,"byte_end":1484,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}}]}