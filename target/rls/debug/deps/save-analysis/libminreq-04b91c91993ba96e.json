{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0","program":"/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","minreq","--edition=2018","/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"https\"","--cfg","feature=\"https-rustls\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"rustls\"","--cfg","feature=\"webpki\"","--cfg","feature=\"webpki-roots\"","-C","metadata=04b91c91993ba96e","-C","extra-filename=-04b91c91993ba96e","--out-dir","/home/pastra/code/rbot/target/rls/debug/deps","-L","dependency=/home/pastra/code/rbot/target/rls/debug/deps","--extern","lazy_static=/home/pastra/code/rbot/target/rls/debug/deps/liblazy_static-00cd05e918550129.rmeta","--extern","log=/home/pastra/code/rbot/target/rls/debug/deps/liblog-d384176e8f254b12.rmeta","--extern","rustls=/home/pastra/code/rbot/target/rls/debug/deps/librustls-9b7a3e2277ed2d40.rmeta","--extern","webpki=/home/pastra/code/rbot/target/rls/debug/deps/libwebpki-c1d58089d6ec38b9.rmeta","--extern","webpki_roots=/home/pastra/code/rbot/target/rls/debug/deps/libwebpki_roots-c969663bb05390b4.rmeta","--cap-lints","allow","-L","native=/home/pastra/code/rbot/target/rls/debug/build/ring-ddbda864962f11bd/out","--error-format=json","--sysroot","/home/pastra/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pastra/code/rbot/target/rls/debug/deps/libminreq-04b91c91993ba96e.rmeta"},"prelude":{"crate_id":{"name":"minreq","disambiguator":[13424785954431503844,0]},"crate_root":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src","external_crates":[{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":20,"id":{"name":"rustls","disambiguator":[2449835589389556171,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","num":21,"id":{"name":"log","disambiguator":[16541051944014140246,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":23,"id":{"name":"ring","disambiguator":[2226807743195442057,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[10622816886110894340,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":25,"id":{"name":"once_cell","disambiguator":[9360817987749165768,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":26,"id":{"name":"untrusted","disambiguator":[14077397472528128268,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":27,"id":{"name":"spin","disambiguator":[16720608112949619340,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":28,"id":{"name":"webpki","disambiguator":[6872044583110821936,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":29,"id":{"name":"sct","disambiguator":[747046624022377639,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","num":30,"id":{"name":"webpki_roots","disambiguator":[1668175447974401405,0]}},{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","num":31,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}}],"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":0,"byte_end":8867,"line_start":1,"line_end":268,"column_start":1,"column_end":21}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8780,"byte_end":8781,"line_start":264,"line_end":264,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Error","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8844,"byte_end":8845,"line_start":267,"line_end":267,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Method","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8865,"byte_end":8866,"line_start":268,"line_end":268,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"ResponseLazy, Response","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":0,"byte_end":8867,"line_start":1,"line_end":268,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":134},{"krate":0,"index":156},{"krate":0,"index":244},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" # Minreq","sig":null,"attributes":[{"value":"/ # Minreq","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":0,"byte_end":12,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":13,"byte_end":16,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Simple, minimal-dependency HTTP client.  The library has a very","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":17,"byte_end":84,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ minimal API, so you'll probably know everything you need to after","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":85,"byte_end":154,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ reading a few examples.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":155,"byte_end":182,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":183,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note: as a minimal library, minreq has been written with the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":187,"byte_end":251,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ assumption that servers are well-behaved. This means that there is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":252,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ little error-correction for incoming data, which may cause some","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":323,"byte_end":390,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ requests to fail unexpectedly. If you're writing an application or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":391,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ library that connects to servers you can't test beforehand,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":462,"byte_end":525,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/ consider using a more robust library, such as","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":526,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/ [curl](https://crates.io/crates/curl).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":576,"byte_end":618,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":619,"byte_end":622,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Additional features","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":623,"byte_end":648,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":649,"byte_end":652,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Since the crate is supposed to be minimal in terms of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":653,"byte_end":710,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ dependencies, there are no default features, and optional","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":711,"byte_end":772,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ functionality can be enabled by specifying features for `minreq`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":773,"byte_end":841,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ dependency in `Cargo.toml`:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":842,"byte_end":873,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":874,"byte_end":877,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":878,"byte_end":889,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":890,"byte_end":908,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/ minreq = { version = \"2.6.0\", features = [\"punycode\"] }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":909,"byte_end":968,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":969,"byte_end":976,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":977,"byte_end":980,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Below is the list of all available features.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":981,"byte_end":1029,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1030,"byte_end":1033,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `https` or `https-rustls`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1034,"byte_end":1066,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1067,"byte_end":1070,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This feature uses the (very good)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1071,"byte_end":1108,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ [`rustls`](https://crates.io/crates/rustls) crate to secure the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1109,"byte_end":1176,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ connection when needed. Note that if this feature is not enabled","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1177,"byte_end":1245,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ (and it is not by default), requests to urls that start with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1246,"byte_end":1310,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/ `https://` will fail and return a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1311,"byte_end":1348,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ [`HttpsFeatureNotEnabled`](enum.Error.html#variant.HttpsFeatureNotEnabled)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1349,"byte_end":1427,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ error. `https` was the name of this feature until the other https","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1428,"byte_end":1497,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ feature variants were added, and is now an alias for","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1498,"byte_end":1554,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/ `https-rustls`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1555,"byte_end":1574,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1575,"byte_end":1578,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## `https-rustls-probe`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1579,"byte_end":1606,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1607,"byte_end":1610,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Like `https-rustls`, but also includes the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1611,"byte_end":1657,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ [`rustls-native-certs`](https://crates.io/crates/rustls-native-certs)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1658,"byte_end":1731,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ crate to auto-detect root certificates installed in common","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1732,"byte_end":1794,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ locations.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1795,"byte_end":1809,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## `https-native`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1814,"byte_end":1835,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Like `https`, but uses","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1840,"byte_end":1866,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ [`tls-native`](https://crates.io/crates/native-tls) instead of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1867,"byte_end":1933,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"/ `rustls`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1934,"byte_end":1947,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1948,"byte_end":1951,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## `https-bundled`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1952,"byte_end":1974,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1975,"byte_end":1978,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Like `https`, but uses a statically linked copy of the OpenSSL","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":1979,"byte_end":2045,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ library (provided by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2046,"byte_end":2070,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/ [`openssl-sys`](https://crates.io/crates/openssl-sys) with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2071,"byte_end":2133,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ features = \"vendored\"). This feature on its own doesn't provide","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2134,"byte_end":2201,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/ any detection of where your root certificates are installed. They","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2202,"byte_end":2271,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ can be specified via the environment variables `SSL_CERT_FILE` or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2272,"byte_end":2341,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ `SSL_CERT_DIR`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2342,"byte_end":2361,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2362,"byte_end":2365,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## `https-bundled-probe`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2366,"byte_end":2394,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2395,"byte_end":2398,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like `https-bundled`, but also includes the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2399,"byte_end":2446,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`openssl-probe`](https://crates.io/crates/openssl-probe) crate to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2447,"byte_end":2517,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ auto-detect root certificates installed in common locations.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2518,"byte_end":2582,"line_start":68,"line_end":68,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2583,"byte_end":2586,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## `json-using-serde`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2587,"byte_end":2612,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2613,"byte_end":2616,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This feature allows both serialize and deserialize JSON payload","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2617,"byte_end":2684,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ using the [`serde_json`](https://crates.io/crates/serde_json)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2685,"byte_end":2750,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/ crate.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2751,"byte_end":2761,"line_start":74,"line_end":74,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2762,"byte_end":2765,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`Request`](struct.Request.html) and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2766,"byte_end":2806,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ [`Response`](struct.Response.html) expose","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2807,"byte_end":2852,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ [`with_json()`](struct.Request.html#method.with_json) and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2853,"byte_end":2914,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ [`json()`](struct.Response.html#method.json) for constructing the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2915,"byte_end":2984,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ struct from JSON and extracting the JSON body out, respectively.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":2985,"byte_end":3053,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3054,"byte_end":3057,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## `punycode`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3058,"byte_end":3075,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3076,"byte_end":3079,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This feature enables requests to non-ascii domains: the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3080,"byte_end":3139,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ [`punycode`](https://crates.io/crates/punycode) crate is used to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3140,"byte_end":3208,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ convert the non-ascii parts into their punycode representations","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3209,"byte_end":3276,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/ before making the request. If you try to make a request to 㯙㯜㯙","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3277,"byte_end":3349,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ 㯟.net or i❤.ws for example, with this feature disabled (as it is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3350,"byte_end":3422,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/ by default), your request will fail with a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3423,"byte_end":3469,"line_start":89,"line_end":89,"column_start":1,"column_end":47}},{"value":"/ [`PunycodeFeatureNotEnabled`](enum.Error.html#variant.PunycodeFeatureNotEnabled)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3470,"byte_end":3554,"line_start":90,"line_end":90,"column_start":1,"column_end":85}},{"value":"/ error.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3555,"byte_end":3565,"line_start":91,"line_end":91,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3566,"byte_end":3569,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## `proxy`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3570,"byte_end":3584,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3585,"byte_end":3588,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This feature enables proxy support.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3589,"byte_end":3628,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3629,"byte_end":3632,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ## `urlencoding`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3633,"byte_end":3653,"line_start":97,"line_end":97,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3654,"byte_end":3657,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This feature enables percent-encoding for the URL resource when","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3658,"byte_end":3725,"line_start":99,"line_end":99,"column_start":1,"column_end":68}},{"value":"/ creating a request and any subsequently added parameters from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3726,"byte_end":3791,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ [`Request::with_param`].","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3792,"byte_end":3820,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3821,"byte_end":3824,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3825,"byte_end":3839,"line_start":103,"line_end":103,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3840,"byte_end":3843,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ## Get","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3844,"byte_end":3854,"line_start":105,"line_end":105,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3855,"byte_end":3858,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This is a simple example of sending a GET request and printing out","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3859,"byte_end":3929,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/ the response's body, status code, and reason phrase. The `?` are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3930,"byte_end":3998,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/ needed because the server could return invalid UTF-8 in the body,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":3999,"byte_end":4068,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ or something could go wrong during the download.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4069,"byte_end":4121,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4122,"byte_end":4125,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4126,"byte_end":4133,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4134,"byte_end":4193,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/ let response = minreq::get(\"http://httpbin.org/ip\").send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4194,"byte_end":4258,"line_start":114,"line_end":114,"column_start":1,"column_end":65}},{"value":"/ assert!(response.as_str()?.contains(\"\\\"origin\\\":\"));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4259,"byte_end":4315,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(response.status_code, 200);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4316,"byte_end":4358,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(response.reason_phrase, \"OK\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4359,"byte_end":4404,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4405,"byte_end":4419,"line_start":118,"line_end":118,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4420,"byte_end":4427,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4428,"byte_end":4431,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Note: you could change the `get` function to `head` or `put` or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4432,"byte_end":4499,"line_start":121,"line_end":121,"column_start":1,"column_end":68}},{"value":"/ any other HTTP request method: the api is the same for all of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4500,"byte_end":4565,"line_start":122,"line_end":122,"column_start":1,"column_end":66}},{"value":"/ them, it just changes what is sent to the server.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4566,"byte_end":4619,"line_start":123,"line_end":123,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4620,"byte_end":4623,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Body (sending)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4624,"byte_end":4645,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4646,"byte_end":4649,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ To include a body, add `with_body(\"<body contents>\")` before","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4650,"byte_end":4714,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/ `send()`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4715,"byte_end":4728,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4729,"byte_end":4732,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4733,"byte_end":4740,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4741,"byte_end":4800,"line_start":131,"line_end":131,"column_start":1,"column_end":60}},{"value":"/ let response = minreq::post(\"http://httpbin.org/post\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4801,"byte_end":4859,"line_start":132,"line_end":132,"column_start":1,"column_end":59}},{"value":"/     .with_body(\"Foobar\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4860,"byte_end":4888,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/     .send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4889,"byte_end":4906,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/ assert!(response.as_str()?.contains(\"Foobar\"));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4907,"byte_end":4958,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4959,"byte_end":4973,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4974,"byte_end":4981,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4982,"byte_end":4985,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ## Headers (sending)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":4986,"byte_end":5010,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5011,"byte_end":5014,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ To add a header, add `with_header(\"Key\", \"Value\")` before","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5015,"byte_end":5076,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/ `send()`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5077,"byte_end":5090,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5091,"byte_end":5094,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5095,"byte_end":5102,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5103,"byte_end":5162,"line_start":145,"line_end":145,"column_start":1,"column_end":60}},{"value":"/ let response = minreq::get(\"http://httpbin.org/headers\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5163,"byte_end":5223,"line_start":146,"line_end":146,"column_start":1,"column_end":61}},{"value":"/     .with_header(\"Accept\", \"text/plain\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5224,"byte_end":5268,"line_start":147,"line_end":147,"column_start":1,"column_end":45}},{"value":"/     .with_header(\"X-Best-Mon\", \"Sylveon\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5269,"byte_end":5314,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/     .send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5315,"byte_end":5332,"line_start":149,"line_end":149,"column_start":1,"column_end":18}},{"value":"/ let body_str = response.as_str()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5333,"byte_end":5371,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/ assert!(body_str.contains(\"\\\"Accept\\\": \\\"text/plain\\\"\"));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5372,"byte_end":5433,"line_start":151,"line_end":151,"column_start":1,"column_end":62}},{"value":"/ assert!(body_str.contains(\"\\\"X-Best-Mon\\\": \\\"Sylveon\\\"\"));","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5434,"byte_end":5496,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5497,"byte_end":5511,"line_start":153,"line_end":153,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5512,"byte_end":5519,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5520,"byte_end":5523,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ## Headers (receiving)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5524,"byte_end":5550,"line_start":156,"line_end":156,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5551,"byte_end":5554,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Reading the headers sent by the servers is done via the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5555,"byte_end":5614,"line_start":158,"line_end":158,"column_start":1,"column_end":60}},{"value":"/ [`headers`](struct.Response.html#structfield.headers) field of the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5615,"byte_end":5685,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ [`Response`](struct.Response.html). Note: the header field names","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5686,"byte_end":5754,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ (that is, the *keys* of the `HashMap`) are all lowercase: this is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5755,"byte_end":5824,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/ because the names are case-insensitive according to the spec, and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5825,"byte_end":5894,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ this unifies the casings for easier `get()`ing.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5895,"byte_end":5946,"line_start":163,"line_end":163,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5947,"byte_end":5950,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5951,"byte_end":5958,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":5959,"byte_end":6018,"line_start":166,"line_end":166,"column_start":1,"column_end":60}},{"value":"/ let response = minreq::get(\"http://httpbin.org/ip\").send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6019,"byte_end":6083,"line_start":167,"line_end":167,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(response.headers.get(\"content-type\").unwrap(), \"application/json\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6084,"byte_end":6166,"line_start":168,"line_end":168,"column_start":1,"column_end":83}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6167,"byte_end":6181,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6182,"byte_end":6189,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6190,"byte_end":6193,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6194,"byte_end":6209,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6210,"byte_end":6213,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ To avoid timing out, or limit the request's response time, use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6214,"byte_end":6280,"line_start":174,"line_end":174,"column_start":1,"column_end":67}},{"value":"/ `with_timeout(n)` before `send()`. The given value is in seconds.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6281,"byte_end":6350,"line_start":175,"line_end":175,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6351,"byte_end":6354,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ NOTE: There is no timeout by default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6355,"byte_end":6396,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6397,"byte_end":6400,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6401,"byte_end":6414,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6415,"byte_end":6474,"line_start":180,"line_end":180,"column_start":1,"column_end":60}},{"value":"/ let response = minreq::post(\"http://httpbin.org/delay/6\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6475,"byte_end":6536,"line_start":181,"line_end":181,"column_start":1,"column_end":62}},{"value":"/     .with_timeout(10)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6537,"byte_end":6562,"line_start":182,"line_end":182,"column_start":1,"column_end":26}},{"value":"/     .send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6563,"byte_end":6580,"line_start":183,"line_end":183,"column_start":1,"column_end":18}},{"value":"/ println!(\"{}\", response.as_str()?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6581,"byte_end":6620,"line_start":184,"line_end":184,"column_start":1,"column_end":40}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6621,"byte_end":6635,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6636,"byte_end":6643,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6644,"byte_end":6647,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ## Proxy","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6648,"byte_end":6660,"line_start":188,"line_end":188,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6661,"byte_end":6664,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ To use a proxy server, simply create a `Proxy` instance and use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6665,"byte_end":6732,"line_start":190,"line_end":190,"column_start":1,"column_end":68}},{"value":"/ `.with_proxy()` on your request.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6733,"byte_end":6769,"line_start":191,"line_end":191,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6770,"byte_end":6773,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Supported proxy formats are `host:port` and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6774,"byte_end":6821,"line_start":193,"line_end":193,"column_start":1,"column_end":48}},{"value":"/ `user:password@proxy:host`. Only HTTP CONNECT proxies are","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6822,"byte_end":6883,"line_start":194,"line_end":194,"column_start":1,"column_end":62}},{"value":"/ supported at this time.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6884,"byte_end":6911,"line_start":195,"line_end":195,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6912,"byte_end":6915,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6916,"byte_end":6929,"line_start":197,"line_end":197,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6930,"byte_end":6989,"line_start":198,"line_end":198,"column_start":1,"column_end":60}},{"value":"/ #[cfg(feature = \"proxy\")]","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":6990,"byte_end":7019,"line_start":199,"line_end":199,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7020,"byte_end":7025,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/     let proxy = minreq::Proxy::new(\"localhost:8080\")?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7026,"byte_end":7084,"line_start":201,"line_end":201,"column_start":1,"column_end":59}},{"value":"/     let response = minreq::post(\"http://httpbin.org/delay/1\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7085,"byte_end":7150,"line_start":202,"line_end":202,"column_start":1,"column_end":66}},{"value":"/         .with_proxy(proxy)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7151,"byte_end":7181,"line_start":203,"line_end":203,"column_start":1,"column_end":31}},{"value":"/         .send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7182,"byte_end":7203,"line_start":204,"line_end":204,"column_start":1,"column_end":22}},{"value":"/     println!(\"{}\", response.as_str()?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7204,"byte_end":7247,"line_start":205,"line_end":205,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7248,"byte_end":7253,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7254,"byte_end":7268,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7269,"byte_end":7276,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7277,"byte_end":7280,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Timeouts","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7281,"byte_end":7295,"line_start":210,"line_end":210,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7296,"byte_end":7299,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ By default, a request has no timeout. You can change this in two","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7300,"byte_end":7368,"line_start":212,"line_end":212,"column_start":1,"column_end":69}},{"value":"/ ways:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7369,"byte_end":7378,"line_start":213,"line_end":213,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7379,"byte_end":7382,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ - Use [`with_timeout`](struct.Request.html#method.with_timeout) on","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7383,"byte_end":7453,"line_start":215,"line_end":215,"column_start":1,"column_end":71}},{"value":"/   your request to set the timeout per-request like so:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7454,"byte_end":7512,"line_start":216,"line_end":216,"column_start":1,"column_end":59}},{"value":"/   ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7513,"byte_end":7522,"line_start":217,"line_end":217,"column_start":1,"column_end":10}},{"value":"/   minreq::get(\"/\").with_timeout(8).send();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7523,"byte_end":7569,"line_start":218,"line_end":218,"column_start":1,"column_end":47}},{"value":"/   ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7570,"byte_end":7579,"line_start":219,"line_end":219,"column_start":1,"column_end":10}},{"value":"/ - Set the environment variable `MINREQ_TIMEOUT` to the desired","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7580,"byte_end":7646,"line_start":220,"line_end":220,"column_start":1,"column_end":67}},{"value":"/   amount of seconds until timeout. Ie. if you have a program called","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7647,"byte_end":7718,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/   `foo` that uses minreq, and you want all the requests made by that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7719,"byte_end":7791,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/   program to timeout in 8 seconds, you launch the program like so:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7792,"byte_end":7862,"line_start":223,"line_end":223,"column_start":1,"column_end":71}},{"value":"/   ```text,ignore","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7863,"byte_end":7883,"line_start":224,"line_end":224,"column_start":1,"column_end":21}},{"value":"/   $ MINREQ_TIMEOUT=8 ./foo","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7884,"byte_end":7914,"line_start":225,"line_end":225,"column_start":1,"column_end":31}},{"value":"/   ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7915,"byte_end":7924,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/   Or add the following somewhere before the requests in the code.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7925,"byte_end":7994,"line_start":227,"line_end":227,"column_start":1,"column_end":70}},{"value":"/   ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":7995,"byte_end":8004,"line_start":228,"line_end":228,"column_start":1,"column_end":10}},{"value":"/   std::env::set_var(\"MINREQ_TIMEOUT\", \"8\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8005,"byte_end":8052,"line_start":229,"line_end":229,"column_start":1,"column_end":48}},{"value":"/   ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8053,"byte_end":8062,"line_start":230,"line_end":230,"column_start":1,"column_end":10}},{"value":"/ If the timeout is set with `with_timeout`, the environment","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8063,"byte_end":8125,"line_start":231,"line_end":231,"column_start":1,"column_end":63}},{"value":"/ variable will be ignored.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8126,"byte_end":8155,"line_start":232,"line_end":232,"column_start":1,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/lib.rs","byte_start":8157,"byte_end":8179,"line_start":234,"line_end":234,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25355,"byte_end":25372,"line_start":12,"line_end":12,"column_start":5,"column_end":22},"name":"InvalidUtf8InBody","qualname":"::error::Error::InvalidUtf8InBody","value":"Error::InvalidUtf8InBody(str::Utf8Error)","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response body contains invalid UTF-8, so the `as_str()`\n conversion failed.\n","sig":null,"attributes":[{"value":"/ The response body contains invalid UTF-8, so the `as_str()`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25260,"byte_end":25323,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/ conversion failed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25328,"byte_end":25350,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25489,"byte_end":25511,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"name":"RustlsCreateConnection","qualname":"::error::Error::RustlsCreateConnection","value":"Error::RustlsCreateConnection(rustls::Error)","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Ran into a rustls error while creating the connection.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rustls\")","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25395,"byte_end":25421,"line_start":14,"line_end":14,"column_start":5,"column_end":31}},{"value":"/ Ran into a rustls error while creating the connection.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25426,"byte_end":25484,"line_start":15,"line_end":15,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25591,"byte_end":25598,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Ran into an IO problem while loading the response.\n","sig":null,"attributes":[{"value":"/ Ran into an IO problem while loading the response.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25532,"byte_end":25586,"line_start":17,"line_end":17,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25747,"byte_end":25767,"line_start":21,"line_end":21,"column_start":5,"column_end":25},"name":"MalformedChunkLength","qualname":"::error::Error::MalformedChunkLength","value":"Error::MalformedChunkLength","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Couldn't parse the incoming chunk's length while receiving a\n response with the header `Transfer-Encoding: chunked`.\n","sig":null,"attributes":[{"value":"/ Couldn't parse the incoming chunk's length while receiving a","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25615,"byte_end":25679,"line_start":19,"line_end":19,"column_start":5,"column_end":69}},{"value":"/ response with the header `Transfer-Encoding: chunked`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25684,"byte_end":25742,"line_start":20,"line_end":20,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25862,"byte_end":25879,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"MalformedChunkEnd","qualname":"::error::Error::MalformedChunkEnd","value":"Error::MalformedChunkEnd","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The chunk did not end after reading the previously read amount\n of bytes.\n","sig":null,"attributes":[{"value":"/ The chunk did not end after reading the previously read amount","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25773,"byte_end":25839,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ of bytes.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25844,"byte_end":25857,"line_start":23,"line_end":23,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":342},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25967,"byte_end":25989,"line_start":27,"line_end":27,"column_start":5,"column_end":27},"name":"MalformedContentLength","qualname":"::error::Error::MalformedContentLength","value":"Error::MalformedContentLength","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Couldn't parse the `Content-Length` header's value as an\n `usize`.\n","sig":null,"attributes":[{"value":"/ Couldn't parse the `Content-Length` header's value as an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25885,"byte_end":25945,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"/ `usize`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25950,"byte_end":25962,"line_start":26,"line_end":26,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26150,"byte_end":26165,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"HeadersOverflow","qualname":"::error::Error::HeadersOverflow","value":"Error::HeadersOverflow","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response contains headers whose total size surpasses\n [Request::with_max_headers_size](crate::request::Request::with_max_headers_size).\n","sig":null,"attributes":[{"value":"/ The response contains headers whose total size surpasses","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25995,"byte_end":26055,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/ [Request::with_max_headers_size](crate::request::Request::with_max_headers_size).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26060,"byte_end":26145,"line_start":29,"line_end":29,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":346},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26323,"byte_end":26341,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"StatusLineOverflow","qualname":"::error::Error::StatusLineOverflow","value":"Error::StatusLineOverflow","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response's status line length surpasses\n [Request::with_max_status_line_size](crate::request::Request::with_max_status_line_length).\n","sig":null,"attributes":[{"value":"/ The response's status line length surpasses","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26171,"byte_end":26218,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ [Request::with_max_status_line_size](crate::request::Request::with_max_status_line_length).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26223,"byte_end":26318,"line_start":32,"line_end":32,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":348},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26435,"byte_end":26450,"line_start":36,"line_end":36,"column_start":5,"column_end":20},"name":"AddressNotFound","qualname":"::error::Error::AddressNotFound","value":"Error::AddressNotFound","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" [ToSocketAddrs](std::net::ToSocketAddrs) did not resolve to an\n address.\n","sig":null,"attributes":[{"value":"/ [ToSocketAddrs](std::net::ToSocketAddrs) did not resolve to an","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26347,"byte_end":26413,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ address.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26418,"byte_end":26430,"line_start":35,"line_end":35,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":350},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26542,"byte_end":26565,"line_start":39,"line_end":39,"column_start":5,"column_end":28},"name":"RedirectLocationMissing","qualname":"::error::Error::RedirectLocationMissing","value":"Error::RedirectLocationMissing","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response was a redirection, but the `Location` header is\n missing.\n","sig":null,"attributes":[{"value":"/ The response was a redirection, but the `Location` header is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26456,"byte_end":26520,"line_start":37,"line_end":37,"column_start":5,"column_end":69}},{"value":"/ missing.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26525,"byte_end":26537,"line_start":38,"line_end":38,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":352},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26642,"byte_end":26665,"line_start":41,"line_end":41,"column_start":5,"column_end":28},"name":"InfiniteRedirectionLoop","qualname":"::error::Error::InfiniteRedirectionLoop","value":"Error::InfiniteRedirectionLoop","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response redirections caused an infinite redirection loop.\n","sig":null,"attributes":[{"value":"/ The response redirections caused an infinite redirection loop.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26571,"byte_end":26637,"line_start":40,"line_end":40,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26812,"byte_end":26831,"line_start":45,"line_end":45,"column_start":5,"column_end":24},"name":"TooManyRedirections","qualname":"::error::Error::TooManyRedirections","value":"Error::TooManyRedirections","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Followed\n [`max_redirections`](struct.Request.html#method.with_max_redirections)\n redirections, won't follow any more.\n","sig":null,"attributes":[{"value":"/ Followed","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26671,"byte_end":26683,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/ [`max_redirections`](struct.Request.html#method.with_max_redirections)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26688,"byte_end":26762,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ redirections, won't follow any more.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26767,"byte_end":26807,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26976,"byte_end":26997,"line_start":48,"line_end":48,"column_start":5,"column_end":26},"name":"InvalidUtf8InResponse","qualname":"::error::Error::InvalidUtf8InResponse","value":"Error::InvalidUtf8InResponse","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The response contained invalid UTF-8 where it should be valid\n (eg. headers), so the response cannot interpreted correctly.\n","sig":null,"attributes":[{"value":"/ The response contained invalid UTF-8 where it should be valid","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26837,"byte_end":26902,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ (eg. headers), so the response cannot interpreted correctly.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":26907,"byte_end":26971,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":358},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27173,"byte_end":27197,"line_start":52,"line_end":52,"column_start":5,"column_end":29},"name":"PunycodeConversionFailed","qualname":"::error::Error::PunycodeConversionFailed","value":"Error::PunycodeConversionFailed","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided url contained a domain that has non-ASCII\n characters, and could not be converted into punycode. It is\n probably not an actual domain.\n","sig":null,"attributes":[{"value":"/ The provided url contained a domain that has non-ASCII","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27003,"byte_end":27061,"line_start":49,"line_end":49,"column_start":5,"column_end":63}},{"value":"/ characters, and could not be converted into punycode. It is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27066,"byte_end":27129,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ probably not an actual domain.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27134,"byte_end":27168,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27388,"byte_end":27410,"line_start":56,"line_end":56,"column_start":5,"column_end":27},"name":"HttpsFeatureNotEnabled","qualname":"::error::Error::HttpsFeatureNotEnabled","value":"Error::HttpsFeatureNotEnabled","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" Tried to send a secure request (ie. the url started with\n `https://`), but the crate's `https` feature was not enabled,\n and as such, a connection cannot be made.\n","sig":null,"attributes":[{"value":"/ Tried to send a secure request (ie. the url started with","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27203,"byte_end":27263,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/ `https://`), but the crate's `https` feature was not enabled,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27268,"byte_end":27333,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ and as such, a connection cannot be made.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27338,"byte_end":27383,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":362},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27599,"byte_end":27624,"line_start":60,"line_end":60,"column_start":5,"column_end":30},"name":"PunycodeFeatureNotEnabled","qualname":"::error::Error::PunycodeFeatureNotEnabled","value":"Error::PunycodeFeatureNotEnabled","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided url contained a domain that has non-ASCII\n characters, but it could not be converted into punycode\n because the `punycode` feature was not enabled.\n","sig":null,"attributes":[{"value":"/ The provided url contained a domain that has non-ASCII","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27416,"byte_end":27474,"line_start":57,"line_end":57,"column_start":5,"column_end":63}},{"value":"/ characters, but it could not be converted into punycode","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27479,"byte_end":27538,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/ because the `punycode` feature was not enabled.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27543,"byte_end":27594,"line_start":59,"line_end":59,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27760,"byte_end":27768,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"BadProxy","qualname":"::error::Error::BadProxy","value":"Error::BadProxy","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided proxy information was not properly formatted.\n Supported proxy format is `[user:password@]host:port`.\n","sig":null,"attributes":[{"value":"/ The provided proxy information was not properly formatted.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27630,"byte_end":27692,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/ Supported proxy format is `[user:password@]host:port`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27697,"byte_end":27755,"line_start":62,"line_end":62,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27842,"byte_end":27855,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"BadProxyCreds","qualname":"::error::Error::BadProxyCreds","value":"Error::BadProxyCreds","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided credentials were rejected by the proxy server.\n","sig":null,"attributes":[{"value":"/ The provided credentials were rejected by the proxy server.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27774,"byte_end":27837,"line_start":64,"line_end":64,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":368},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27916,"byte_end":27928,"line_start":67,"line_end":67,"column_start":5,"column_end":17},"name":"ProxyConnect","qualname":"::error::Error::ProxyConnect","value":"Error::ProxyConnect","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided proxy credentials were malformed.\n","sig":null,"attributes":[{"value":"/ The provided proxy credentials were malformed.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27861,"byte_end":27911,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28002,"byte_end":28019,"line_start":69,"line_end":69,"column_start":5,"column_end":22},"name":"InvalidProxyCreds","qualname":"::error::Error::InvalidProxyCreds","value":"Error::InvalidProxyCreds","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The provided credentials were rejected by the proxy server.\n","sig":null,"attributes":[{"value":"/ The provided credentials were rejected by the proxy server.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":27934,"byte_end":27997,"line_start":68,"line_end":68,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":372},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28613,"byte_end":28618,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"Other","qualname":"::error::Error::Other","value":"Error::Other(&'static str)","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" This is a special error case, one that should never be\n returned! Think of this as a cleaner alternative to calling\n `unreachable!()` inside the library. If you come across this,\n please open an issue, and include the string inside this\n error, as it can be used to locate the problem.\n","sig":null,"attributes":[{"value":"/ This is a special error case, one that should never be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28291,"byte_end":28349,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/ returned! Think of this as a cleaner alternative to calling","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28354,"byte_end":28417,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ `unreachable!()` inside the library. If you come across this,","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28422,"byte_end":28487,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ please open an issue, and include the string inside this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28492,"byte_end":28552,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/ error, as it can be used to locate the problem.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28557,"byte_end":28608,"line_start":80,"line_end":80,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":328},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":25136,"byte_end":25141,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    InvalidUtf8InBody(str::Utf8Error),\n    RustlsCreateConnection(rustls::Error),\n    IoError(io::Error),\n    MalformedChunkLength,\n    MalformedChunkEnd,\n    MalformedContentLength,\n    HeadersOverflow,\n    StatusLineOverflow,\n    AddressNotFound,\n    RedirectLocationMissing,\n    InfiniteRedirectionLoop,\n    TooManyRedirections,\n    InvalidUtf8InResponse,\n    PunycodeConversionFailed,\n    HttpsFeatureNotEnabled,\n    PunycodeFeatureNotEnabled,\n    BadProxy,\n    BadProxyCreds,\n    ProxyConnect,\n    InvalidProxyCreds,\n    Other(&'static str),\n}","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372}],"decl_id":null,"docs":" Represents an error while sending, receiving, or parsing an HTTP response.\n","sig":null,"attributes":[{"value":"/ Represents an error while sending, receiving, or parsing an HTTP response.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":24993,"byte_end":25071,"line_start":3,"line_end":3,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":31986,"byte_end":31989,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"URL","qualname":"::request::URL","value":"String","parent":null,"children":[],"decl_id":null,"docs":" A URL type for requests.\n","sig":null,"attributes":[{"value":"/ A URL type for requests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":31948,"byte_end":31976,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32109,"byte_end":32112,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Get","qualname":"::request::Method::Get","value":"Method::Get","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The GET method\n","sig":null,"attributes":[{"value":"/ The GET method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32086,"byte_end":32104,"line_start":14,"line_end":14,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32142,"byte_end":32146,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Head","qualname":"::request::Method::Head","value":"Method::Head","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The HEAD method\n","sig":null,"attributes":[{"value":"/ The HEAD method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32118,"byte_end":32137,"line_start":16,"line_end":16,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":382},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32176,"byte_end":32180,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Post","qualname":"::request::Method::Post","value":"Method::Post","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The POST method\n","sig":null,"attributes":[{"value":"/ The POST method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32152,"byte_end":32171,"line_start":18,"line_end":18,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32209,"byte_end":32212,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Put","qualname":"::request::Method::Put","value":"Method::Put","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The PUT method\n","sig":null,"attributes":[{"value":"/ The PUT method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32186,"byte_end":32204,"line_start":20,"line_end":20,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32244,"byte_end":32250,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Delete","qualname":"::request::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The DELETE method\n","sig":null,"attributes":[{"value":"/ The DELETE method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32218,"byte_end":32239,"line_start":22,"line_end":22,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32283,"byte_end":32290,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Connect","qualname":"::request::Method::Connect","value":"Method::Connect","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The CONNECT method\n","sig":null,"attributes":[{"value":"/ The CONNECT method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32256,"byte_end":32278,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32323,"byte_end":32330,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Options","qualname":"::request::Method::Options","value":"Method::Options","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The OPTIONS method\n","sig":null,"attributes":[{"value":"/ The OPTIONS method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32296,"byte_end":32318,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32361,"byte_end":32366,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Trace","qualname":"::request::Method::Trace","value":"Method::Trace","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The TRACE method\n","sig":null,"attributes":[{"value":"/ The TRACE method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32336,"byte_end":32356,"line_start":28,"line_end":28,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32397,"byte_end":32402,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Patch","qualname":"::request::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The PATCH method\n","sig":null,"attributes":[{"value":"/ The PATCH method","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32372,"byte_end":32392,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":396},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32507,"byte_end":32513,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Custom","qualname":"::request::Method::Custom","value":"Method::Custom(String)","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" A custom method, use with care: the string will be embedded in\n your request as-is.\n","sig":null,"attributes":[{"value":"/ A custom method, use with care: the string will be embedded in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32408,"byte_end":32474,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ your request as-is.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32479,"byte_end":32502,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":377},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32073,"byte_end":32079,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Method","qualname":"::request::Method","value":"pub enum Method {\n    Get,\n    Head,\n    Post,\n    Put,\n    Delete,\n    Connect,\n    Options,\n    Trace,\n    Patch,\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396}],"decl_id":null,"docs":" An HTTP request method.\n","sig":null,"attributes":[{"value":"/ An HTTP request method.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32001,"byte_end":32028,"line_start":11,"line_end":11,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34111,"byte_end":34118,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" An HTTP request.","sig":null,"attributes":[{"value":"/ An HTTP request.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33609,"byte_end":33629,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33630,"byte_end":33633,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Generally created by the [`minreq::get`](fn.get.html)-style","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33634,"byte_end":33697,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/ functions, corresponding to the HTTP method we want to use.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33698,"byte_end":33761,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33762,"byte_end":33765,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33766,"byte_end":33779,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33780,"byte_end":33783,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33784,"byte_end":33791,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ let request = minreq::post(\"http://example.com\");","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33792,"byte_end":33845,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33846,"byte_end":33853,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33854,"byte_end":33857,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ After creating the request, you would generally call","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33858,"byte_end":33914,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/ [`send`](struct.Request.html#method.send) or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33915,"byte_end":33963,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/ [`send_lazy`](struct.Request.html#method.send_lazy) on it, as it","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33964,"byte_end":34032,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/ doesn't do much on its own.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34033,"byte_end":34064,"line_start":87,"line_end":87,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35062,"byte_end":35065,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new<T: Into<URL>>(Method, T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Creates a new HTTP `Request`.","sig":null,"attributes":[{"value":"/ Creates a new HTTP `Request`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34502,"byte_end":34535,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34540,"byte_end":34543,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is only the request's data, it is not sent yet. For","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34548,"byte_end":34608,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ sending the request, see [`send`](struct.Request.html#method.send).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34613,"byte_end":34684,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34689,"byte_end":34692,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If `urlencoding` is not enabled, it is the responsibility of the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34697,"byte_end":34765,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ user to ensure there are no illegal characters in the URL.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34770,"byte_end":34832,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34837,"byte_end":34840,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If `urlencoding` is enabled, the resource part of the URL will be","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34845,"byte_end":34914,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ encoded. Any URL special characters (e.g. &, #, =) are not encoded","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34919,"byte_end":34989,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/ as they are assumed to be meaningful parameters etc.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34994,"byte_end":35050,"line_start":114,"line_end":114,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35620,"byte_end":35631,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"with_header","qualname":"<Request>::with_header","value":"pub fn with_header<T: Into<String>, U: Into<String>>(Self, T, U) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Adds a header to the request this is called on. Use this\n function to add headers to your requests.\n","sig":null,"attributes":[{"value":"/ Adds a header to the request this is called on. Use this","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35498,"byte_end":35558,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ function to add headers to your requests.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35563,"byte_end":35608,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35824,"byte_end":35833,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"with_body","qualname":"<Request>::with_body","value":"pub fn with_body<T: Into<Vec<u8>>>(Self, T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the request body.\n","sig":null,"attributes":[{"value":"/ Sets the request body.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":35786,"byte_end":35812,"line_start":138,"line_end":138,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36408,"byte_end":36418,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"with_param","qualname":"<Request>::with_param","value":"pub fn with_param<T: Into<String>, U: Into<String>>(Self, T, U) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Adds given key and value as query parameter to request url\n (resource).","sig":null,"attributes":[{"value":"/ Adds given key and value as query parameter to request url","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36068,"byte_end":36130,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ (resource).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36135,"byte_end":36150,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36155,"byte_end":36158,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If `urlencoding` is not enabled, it is the responsibility","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36163,"byte_end":36224,"line_start":149,"line_end":149,"column_start":5,"column_end":66}},{"value":"/ of the user to ensure there are no illegal characters in the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36229,"byte_end":36293,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/ key or value.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36298,"byte_end":36315,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36320,"byte_end":36323,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If `urlencoding` is enabled, the key and value are both encoded.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":36328,"byte_end":36396,"line_start":153,"line_end":153,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37700,"byte_end":37712,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<Request>::with_timeout","value":"pub fn with_timeout(Self, u64) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the request timeout in seconds.\n","sig":null,"attributes":[{"value":"/ Sets the request timeout in seconds.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37648,"byte_end":37688,"line_start":191,"line_end":191,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38169,"byte_end":38187,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"with_max_redirects","qualname":"<Request>::with_max_redirects","value":"pub fn with_max_redirects(Self, usize) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the max redirects we follow until giving up. 100 by\n default.","sig":null,"attributes":[{"value":"/ Sets the max redirects we follow until giving up. 100 by","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37812,"byte_end":37872,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"/ default.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37877,"byte_end":37889,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37894,"byte_end":37897,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Warning: setting this to a very high number, such as 1000, may","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37902,"byte_end":37968,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/ cause a stack overflow if that many redirects are followed. If","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":37973,"byte_end":38039,"line_start":201,"line_end":201,"column_start":5,"column_end":71}},{"value":"/ you have a use for so many redirects that the stack overflow","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38044,"byte_end":38108,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ becomes a problem, please open an issue.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38113,"byte_end":38157,"line_start":203,"line_end":203,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39017,"byte_end":39038,"line_start":224,"line_end":224,"column_start":12,"column_end":33},"name":"with_max_headers_size","qualname":"<Request>::with_max_headers_size","value":"pub fn with_max_headers_size<S: Into<Option<usize>>>(Self, S) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum size of all the headers this request will\n accept.","sig":null,"attributes":[{"value":"/ Sets the maximum size of all the headers this request will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38301,"byte_end":38363,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ accept.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38368,"byte_end":38379,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38384,"byte_end":38387,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this limit is passed, the request will close the connection","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38392,"byte_end":38458,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"/ and return an [Error::HeadersOverflow] error.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38463,"byte_end":38512,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38517,"byte_end":38520,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The maximum length is counted in bytes, including line-endings","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38525,"byte_end":38591,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ and other whitespace. Both normal and trailing headers count","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38596,"byte_end":38660,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/ towards this cap.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38665,"byte_end":38686,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38691,"byte_end":38694,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ `None` disables the cap, and may cause the program to use any","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38699,"byte_end":38764,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/ amount of memory if the server responds with a lot of headers","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38769,"byte_end":38834,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ (or an infinite amount). In minreq versions 2.x.x, the default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38839,"byte_end":38905,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/ is None, so setting this manually is recommended when talking","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38910,"byte_end":38975,"line_start":222,"line_end":222,"column_start":5,"column_end":70}},{"value":"/ to untrusted servers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":38980,"byte_end":39005,"line_start":223,"line_end":223,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39825,"byte_end":39852,"line_start":243,"line_end":243,"column_start":12,"column_end":39},"name":"with_max_status_line_length","qualname":"<Request>::with_max_status_line_length","value":"pub fn with_max_status_line_length<S: Into<Option<usize>>>(Self, S) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum length of the status line this request will\n accept.","sig":null,"attributes":[{"value":"/ Sets the maximum length of the status line this request will","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39188,"byte_end":39252,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ accept.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39257,"byte_end":39268,"line_start":230,"line_end":230,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39273,"byte_end":39276,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If this limit is passed, the request will close the connection","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39281,"byte_end":39347,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/ and return an [Error::StatusLineOverflow] error.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39352,"byte_end":39404,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39409,"byte_end":39412,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The maximum length is counted in bytes, including the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39417,"byte_end":39474,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/ line-ending `\\r\\n`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39479,"byte_end":39502,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39507,"byte_end":39510,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ `None` disables the cap, and may cause the program to use any","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39515,"byte_end":39580,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/ amount of memory if the server responds with a long (or","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39585,"byte_end":39644,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/ infinite) status line. In minreq versions 2.x.x, the default","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39649,"byte_end":39713,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ is None, so setting this manually is recommended when talking","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39718,"byte_end":39783,"line_start":241,"line_end":241,"column_start":5,"column_end":70}},{"value":"/ to untrusted servers.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":39788,"byte_end":39813,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40671,"byte_end":40675,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"send","qualname":"<Request>::send","value":"pub fn send(Self) -> Result<Response, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends this request to the host.","sig":null,"attributes":[{"value":"/ Sends this request to the host.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40208,"byte_end":40243,"line_start":258,"line_end":258,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40248,"byte_end":40251,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40256,"byte_end":40268,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40273,"byte_end":40276,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if we run into an error while sending the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40281,"byte_end":40340,"line_start":262,"line_end":262,"column_start":5,"column_end":64}},{"value":"/ request, or receiving/parsing the response. The specific error","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40345,"byte_end":40411,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"/ is described in the `Err`, and it can be any","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40416,"byte_end":40464,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/ [`minreq::Error`](enum.Error.html) except","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40469,"byte_end":40514,"line_start":265,"line_end":265,"column_start":5,"column_end":50}},{"value":"/ [`SerdeJsonError`](enum.Error.html#variant.SerdeJsonError) and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40519,"byte_end":40585,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/ [`InvalidUtf8InBody`](enum.Error.html#variant.InvalidUtf8InBody).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":40590,"byte_end":40659,"line_start":267,"line_end":267,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41673,"byte_end":41682,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"send_lazy","qualname":"<Request>::send_lazy","value":"pub fn send_lazy(Self) -> Result<ResponseLazy, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends this request to the host, loaded lazily.","sig":null,"attributes":[{"value":"/ Sends this request to the host, loaded lazily.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41523,"byte_end":41573,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41578,"byte_end":41581,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41586,"byte_end":41598,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41603,"byte_end":41606,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ See [`send`](struct.Request.html#method.send).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":41611,"byte_end":41661,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51469,"byte_end":51472,"line_start":564,"line_end":564,"column_start":8,"column_end":11},"name":"get","qualname":"::request::get","value":"pub fn get<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Get](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51343,"byte_end":51424,"line_start":562,"line_end":562,"column_start":1,"column_end":82}},{"value":"/ [Method::Get](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51425,"byte_end":51461,"line_start":563,"line_end":563,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51673,"byte_end":51677,"line_start":570,"line_end":570,"column_start":8,"column_end":12},"name":"head","qualname":"::request::head","value":"pub fn head<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Head](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51546,"byte_end":51627,"line_start":568,"line_end":568,"column_start":1,"column_end":82}},{"value":"/ [Method::Head](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51628,"byte_end":51665,"line_start":569,"line_end":569,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":230},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51879,"byte_end":51883,"line_start":576,"line_end":576,"column_start":8,"column_end":12},"name":"post","qualname":"::request::post","value":"pub fn post<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Post](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51752,"byte_end":51833,"line_start":574,"line_end":574,"column_start":1,"column_end":82}},{"value":"/ [Method::Post](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51834,"byte_end":51871,"line_start":575,"line_end":575,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52084,"byte_end":52087,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"put","qualname":"::request::put","value":"pub fn put<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Put](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":51958,"byte_end":52039,"line_start":580,"line_end":580,"column_start":1,"column_end":82}},{"value":"/ [Method::Put](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52040,"byte_end":52076,"line_start":581,"line_end":581,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52290,"byte_end":52296,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"delete","qualname":"::request::delete","value":"pub fn delete<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Delete](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52161,"byte_end":52242,"line_start":586,"line_end":586,"column_start":1,"column_end":82}},{"value":"/ [Method::Delete](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52243,"byte_end":52282,"line_start":587,"line_end":587,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52503,"byte_end":52510,"line_start":594,"line_end":594,"column_start":8,"column_end":15},"name":"connect","qualname":"::request::connect","value":"pub fn connect<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Connect](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52373,"byte_end":52454,"line_start":592,"line_end":592,"column_start":1,"column_end":82}},{"value":"/ [Method::Connect](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52455,"byte_end":52495,"line_start":593,"line_end":593,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52718,"byte_end":52725,"line_start":600,"line_end":600,"column_start":8,"column_end":15},"name":"options","qualname":"::request::options","value":"pub fn options<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Options](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52588,"byte_end":52669,"line_start":598,"line_end":598,"column_start":1,"column_end":82}},{"value":"/ [Method::Options](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52670,"byte_end":52710,"line_start":599,"line_end":599,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52931,"byte_end":52936,"line_start":606,"line_end":606,"column_start":8,"column_end":13},"name":"trace","qualname":"::request::trace","value":"pub fn trace<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Trace](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52803,"byte_end":52884,"line_start":604,"line_end":604,"column_start":1,"column_end":82}},{"value":"/ [Method::Trace](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":52885,"byte_end":52923,"line_start":605,"line_end":605,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":53140,"byte_end":53145,"line_start":612,"line_end":612,"column_start":8,"column_end":13},"name":"patch","qualname":"::request::patch","value":"pub fn patch<T: Into<URL>>(T) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Alias for [Request::new](struct.Request.html#method.new) with `method` set to\n [Method::Patch](enum.Method.html).\n","sig":null,"attributes":[{"value":"/ Alias for [Request::new](struct.Request.html#method.new) with `method` set to","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":53012,"byte_end":53093,"line_start":610,"line_end":610,"column_start":1,"column_end":82}},{"value":"/ [Method::Patch](enum.Method.html).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":53094,"byte_end":53132,"line_start":611,"line_end":611,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":442},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55682,"byte_end":55690,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response { status_code, reason_phrase, headers }","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" An HTTP response.","sig":null,"attributes":[{"value":"/ An HTTP response.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55334,"byte_end":55355,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55356,"byte_end":55359,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Request::send`](struct.Request.html#method.send).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55360,"byte_end":55427,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55428,"byte_end":55431,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55432,"byte_end":55445,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55446,"byte_end":55449,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55450,"byte_end":55463,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> Result<(), minreq::Error> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55464,"byte_end":55510,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/ let response = minreq::get(\"http://example.com\").send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55511,"byte_end":55572,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ println!(\"{}\", response.as_str()?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55573,"byte_end":55612,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55613,"byte_end":55627,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55628,"byte_end":55635,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":443},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55751,"byte_end":55762,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"name":"status_code","qualname":"::response::Response::status_code","value":"i32","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" The status code of the response, eg. 404.\n","sig":null,"attributes":[{"value":"/ The status code of the response, eg. 404.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55697,"byte_end":55742,"line_start":22,"line_end":22,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":444},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55837,"byte_end":55850,"line_start":25,"line_end":25,"column_start":9,"column_end":22},"name":"reason_phrase","qualname":"::response::Response::reason_phrase","value":"std::string::String","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" The reason phrase of the response, eg. \"Not Found\".\n","sig":null,"attributes":[{"value":"/ The reason phrase of the response, eg. \"Not Found\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55773,"byte_end":55828,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":445},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55966,"byte_end":55973,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"headers","qualname":"::response::Response::headers","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" The headers of the response. The header field names (the\n keys) are all lowercase.\n","sig":null,"attributes":[{"value":"/ The headers of the response. The header field names (the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55864,"byte_end":55924,"line_start":26,"line_end":26,"column_start":5,"column_end":65}},{"value":"/ keys) are all lowercase.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":55929,"byte_end":55957,"line_start":27,"line_end":27,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57658,"byte_end":57664,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Response>::as_str","value":"pub fn as_str(&Self) -> Result<&str, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the body as an `&str`.","sig":null,"attributes":[{"value":"/ Returns the body as an `&str`.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57093,"byte_end":57127,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57132,"byte_end":57135,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57140,"byte_end":57152,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57157,"byte_end":57160,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Returns","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57165,"byte_end":57176,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ [`InvalidUtf8InBody`](enum.Error.html#variant.InvalidUtf8InBody)","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57181,"byte_end":57249,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ if the body is not UTF-8, with a description as to why the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57254,"byte_end":57316,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ provided slice is not UTF-8.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57321,"byte_end":57353,"line_start":74,"line_end":74,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57358,"byte_end":57361,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57366,"byte_end":57379,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57384,"byte_end":57387,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57392,"byte_end":57405,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57410,"byte_end":57469,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ # let url = \"http://example.org/\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57474,"byte_end":57512,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ let response = minreq::get(url).send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57517,"byte_end":57561,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ println!(\"{}\", response.as_str()?);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57566,"byte_end":57605,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57610,"byte_end":57622,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57627,"byte_end":57634,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57639,"byte_end":57646,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58316,"byte_end":58324,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Response>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained bytes of the body. If you\n want the `Vec<u8>` itself, use\n [`into_bytes()`](#method.into_bytes) instead.","sig":null,"attributes":[{"value":"/ Returns a reference to the contained bytes of the body. If you","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57849,"byte_end":57915,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ want the `Vec<u8>` itself, use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57920,"byte_end":57954,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ [`into_bytes()`](#method.into_bytes) instead.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":57959,"byte_end":58008,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58013,"byte_end":58016,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58021,"byte_end":58034,"line_start":97,"line_end":97,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58039,"byte_end":58042,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58047,"byte_end":58060,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58065,"byte_end":58124,"line_start":100,"line_end":100,"column_start":5,"column_end":64}},{"value":"/ # let url = \"http://example.org/\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58129,"byte_end":58167,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ let response = minreq::get(url).send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58172,"byte_end":58216,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"/ println!(\"{:?}\", response.as_bytes());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58221,"byte_end":58263,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58268,"byte_end":58280,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58285,"byte_end":58292,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58297,"byte_end":58304,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58974,"byte_end":58984,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Response>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Turns the `Response` into the inner `Vec<u8>`, the bytes that\n make up the response's body. If you just need a `&[u8]`, use\n [`as_bytes()`](#method.as_bytes) instead.","sig":null,"attributes":[{"value":"/ Turns the `Response` into the inner `Vec<u8>`, the bytes that","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58373,"byte_end":58438,"line_start":111,"line_end":111,"column_start":5,"column_end":70}},{"value":"/ make up the response's body. If you just need a `&[u8]`, use","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58443,"byte_end":58507,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ [`as_bytes()`](#method.as_bytes) instead.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58512,"byte_end":58557,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58562,"byte_end":58565,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58570,"byte_end":58583,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58588,"byte_end":58591,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58596,"byte_end":58609,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58614,"byte_end":58673,"line_start":118,"line_end":118,"column_start":5,"column_end":64}},{"value":"/ # let url = \"http://example.org/\";","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58678,"byte_end":58716,"line_start":119,"line_end":119,"column_start":5,"column_end":43}},{"value":"/ let response = minreq::get(url).send()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58721,"byte_end":58765,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ println!(\"{:?}\", response.into_bytes());","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58770,"byte_end":58814,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ // This would error, as into_bytes consumes the Response:","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58819,"byte_end":58880,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/ // let x = response.status_code;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58885,"byte_end":58921,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58926,"byte_end":58938,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58943,"byte_end":58950,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":58955,"byte_end":58962,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61941,"byte_end":61953,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"ResponseLazy","qualname":"::response::ResponseLazy","value":"ResponseLazy { status_code, reason_phrase, headers }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" An HTTP response, which is loaded lazily.","sig":null,"attributes":[{"value":"/ An HTTP response, which is loaded lazily.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60475,"byte_end":60520,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60521,"byte_end":60524,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ In comparison to [`Response`](struct.Response.html), this is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60525,"byte_end":60589,"line_start":180,"line_end":180,"column_start":1,"column_end":65}},{"value":"/ returned from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60590,"byte_end":60607,"line_start":181,"line_end":181,"column_start":1,"column_end":18}},{"value":"/ [`send_lazy()`](struct.Request.html#method.send_lazy), where as","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60608,"byte_end":60675,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ [`Response`](struct.Response.html) is returned from","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60676,"byte_end":60731,"line_start":183,"line_end":183,"column_start":1,"column_end":56}},{"value":"/ [`send()`](struct.Request.html#method.send).","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60732,"byte_end":60780,"line_start":184,"line_end":184,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60781,"byte_end":60784,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ In practice, \"lazy loading\" means that the bytes are only loaded","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60785,"byte_end":60853,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/ as you iterate through them. The bytes are provided in the form of","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60854,"byte_end":60924,"line_start":187,"line_end":187,"column_start":1,"column_end":71}},{"value":"/ a `Result<(u8, usize), minreq::Error>`, as the reading operation","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60925,"byte_end":60993,"line_start":188,"line_end":188,"column_start":1,"column_end":69}},{"value":"/ can fail in various ways. The `u8` is the actual byte that was","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":60994,"byte_end":61060,"line_start":189,"line_end":189,"column_start":1,"column_end":67}},{"value":"/ read, and `usize` is how many bytes we are expecting to read in","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61061,"byte_end":61128,"line_start":190,"line_end":190,"column_start":1,"column_end":68}},{"value":"/ the future (including this byte). Note, however, that the `usize`","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61129,"byte_end":61198,"line_start":191,"line_end":191,"column_start":1,"column_end":70}},{"value":"/ can change, particularly when the `Transfer-Encoding` is","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61199,"byte_end":61259,"line_start":192,"line_end":192,"column_start":1,"column_end":61}},{"value":"/ `chunked`: then it will reflect how many bytes are left of the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61260,"byte_end":61326,"line_start":193,"line_end":193,"column_start":1,"column_end":67}},{"value":"/ current chunk. The expected size is capped at 16 KiB to avoid","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61327,"byte_end":61392,"line_start":194,"line_end":194,"column_start":1,"column_end":66}},{"value":"/ server-side DoS attacks targeted at clients accidentally reserving","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61393,"byte_end":61463,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ too much memory.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61464,"byte_end":61484,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61485,"byte_end":61488,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61489,"byte_end":61502,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61503,"byte_end":61516,"line_start":199,"line_end":199,"column_start":1,"column_end":14}},{"value":"/ // This is how the normal Response works behind the scenes, and","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61517,"byte_end":61584,"line_start":200,"line_end":200,"column_start":1,"column_end":68}},{"value":"/ // how you might use ResponseLazy.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61585,"byte_end":61623,"line_start":201,"line_end":201,"column_start":1,"column_end":39}},{"value":"/ # fn main() -> Result<(), minreq::Error> {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61624,"byte_end":61670,"line_start":202,"line_end":202,"column_start":1,"column_end":47}},{"value":"/ let response = minreq::get(\"http://httpbin.org/ip\").send_lazy()?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61671,"byte_end":61740,"line_start":203,"line_end":203,"column_start":1,"column_end":70}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61741,"byte_end":61770,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/ for result in response {","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61771,"byte_end":61799,"line_start":205,"line_end":205,"column_start":1,"column_end":29}},{"value":"/     let (byte, length) = result?;","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61800,"byte_end":61837,"line_start":206,"line_end":206,"column_start":1,"column_end":38}},{"value":"/     vec.reserve(length);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61838,"byte_end":61866,"line_start":207,"line_end":207,"column_start":1,"column_end":29}},{"value":"/     vec.push(byte);","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61867,"byte_end":61890,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61891,"byte_end":61896,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61897,"byte_end":61909,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61910,"byte_end":61917,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61918,"byte_end":61921,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61922,"byte_end":61929,"line_start":213,"line_end":213,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62014,"byte_end":62025,"line_start":216,"line_end":216,"column_start":9,"column_end":20},"name":"status_code","qualname":"::response::ResponseLazy::status_code","value":"i32","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The status code of the response, eg. 404.\n","sig":null,"attributes":[{"value":"/ The status code of the response, eg. 404.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":61960,"byte_end":62005,"line_start":215,"line_end":215,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62100,"byte_end":62113,"line_start":218,"line_end":218,"column_start":9,"column_end":22},"name":"reason_phrase","qualname":"::response::ResponseLazy::reason_phrase","value":"std::string::String","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The reason phrase of the response, eg. \"Not Found\".\n","sig":null,"attributes":[{"value":"/ The reason phrase of the response, eg. \"Not Found\".","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62036,"byte_end":62091,"line_start":217,"line_end":217,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62229,"byte_end":62236,"line_start":221,"line_end":221,"column_start":9,"column_end":16},"name":"headers","qualname":"::response::ResponseLazy::headers","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":274},"children":[],"decl_id":null,"docs":" The headers of the response. The header field names (the\n keys) are all lowercase.\n","sig":null,"attributes":[{"value":"/ The headers of the response. The header field names (the","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62127,"byte_end":62187,"line_start":219,"line_end":219,"column_start":5,"column_end":65}},{"value":"/ keys) are all lowercase.","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62192,"byte_end":62220,"line_start":220,"line_end":220,"column_start":5,"column_end":33}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":11227,"byte_end":11237,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":12138,"byte_end":12148,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":13034,"byte_end":13044,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28659,"byte_end":28664,"line_start":84,"line_end":84,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":31226,"byte_end":31231,"line_start":120,"line_end":120,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":31684,"byte_end":31689,"line_start":135,"line_end":135,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32548,"byte_end":32554,"line_start":37,"line_end":37,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33404,"byte_end":33408,"line_start":63,"line_end":63,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34488,"byte_end":34495,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":42473,"byte_end":42486,"line_start":319,"line_end":319,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":56028,"byte_end":56036,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62377,"byte_end":62389,"line_start":228,"line_end":228,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":63074,"byte_end":63086,"line_start":254,"line_end":254,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":11227,"byte_end":11237,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":12138,"byte_end":12148,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":4345}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/connection.rs","byte_start":13034,"byte_end":13044,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":28659,"byte_end":28664,"line_start":84,"line_end":84,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":31226,"byte_end":31231,"line_start":120,"line_end":120,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/error.rs","byte_start":31684,"byte_end":31689,"line_start":135,"line_end":135,"column_start":26,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":328},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":32548,"byte_end":32554,"line_start":37,"line_end":37,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":33404,"byte_end":33408,"line_start":63,"line_end":63,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":34488,"byte_end":34495,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/request.rs","byte_start":42473,"byte_end":42486,"line_start":319,"line_end":319,"column_start":6,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":56028,"byte_end":56036,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":62377,"byte_end":62389,"line_start":228,"line_end":228,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pastra/.cargo/registry/src/github.com-1ecc6299db9ec823/minreq-2.6.0/src/response.rs","byte_start":63074,"byte_end":63086,"line_start":254,"line_end":254,"column_start":19,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":274},"to":{"krate":2,"index":7600}}]}